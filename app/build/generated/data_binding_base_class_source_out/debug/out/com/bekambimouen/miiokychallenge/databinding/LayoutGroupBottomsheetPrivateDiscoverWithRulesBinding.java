// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.csguys.viewmoretextview.ViewMoreTextView;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutGroupBottomsheetPrivateDiscoverWithRulesBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView buttonCancel;

  @NonNull
  public final TextView buttonJoin;

  @NonNull
  public final ViewMoreTextView groupMsg;

  @NonNull
  public final TextView groupName;

  @NonNull
  public final View ivView;

  @NonNull
  public final LinearLayout linLayoutAbout;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TextView privatePublic;

  @NonNull
  public final ImageView profilePhoto;

  @NonNull
  public final RelativeLayout relLayoutButton;

  @NonNull
  public final RelativeLayout relLayoutButtonCancel;

  @NonNull
  public final RelativeLayout relLayoutButtonJoin;

  @NonNull
  public final RelativeLayout relLayoutGoAboutClass;

  @NonNull
  public final RelativeLayout relLayoutTabLayout;

  @NonNull
  public final RelativeLayout relayoutProfile;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView totalMembers;

  private LayoutGroupBottomsheetPrivateDiscoverWithRulesBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView buttonCancel, @NonNull TextView buttonJoin,
      @NonNull ViewMoreTextView groupMsg, @NonNull TextView groupName, @NonNull View ivView,
      @NonNull LinearLayout linLayoutAbout, @NonNull NestedScrollView nestedScrollView,
      @NonNull TextView privatePublic, @NonNull ImageView profilePhoto,
      @NonNull RelativeLayout relLayoutButton, @NonNull RelativeLayout relLayoutButtonCancel,
      @NonNull RelativeLayout relLayoutButtonJoin, @NonNull RelativeLayout relLayoutGoAboutClass,
      @NonNull RelativeLayout relLayoutTabLayout, @NonNull RelativeLayout relayoutProfile,
      @NonNull TabLayout tabLayout, @NonNull TextView totalMembers) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonJoin = buttonJoin;
    this.groupMsg = groupMsg;
    this.groupName = groupName;
    this.ivView = ivView;
    this.linLayoutAbout = linLayoutAbout;
    this.nestedScrollView = nestedScrollView;
    this.privatePublic = privatePublic;
    this.profilePhoto = profilePhoto;
    this.relLayoutButton = relLayoutButton;
    this.relLayoutButtonCancel = relLayoutButtonCancel;
    this.relLayoutButtonJoin = relLayoutButtonJoin;
    this.relLayoutGoAboutClass = relLayoutGoAboutClass;
    this.relLayoutTabLayout = relLayoutTabLayout;
    this.relayoutProfile = relayoutProfile;
    this.tabLayout = tabLayout;
    this.totalMembers = totalMembers;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutGroupBottomsheetPrivateDiscoverWithRulesBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutGroupBottomsheetPrivateDiscoverWithRulesBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_group_bottomsheet_private_discover_with_rules, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutGroupBottomsheetPrivateDiscoverWithRulesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cancel;
      TextView buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.button_join;
      TextView buttonJoin = ViewBindings.findChildViewById(rootView, id);
      if (buttonJoin == null) {
        break missingId;
      }

      id = R.id.group_msg;
      ViewMoreTextView groupMsg = ViewBindings.findChildViewById(rootView, id);
      if (groupMsg == null) {
        break missingId;
      }

      id = R.id.group_name;
      TextView groupName = ViewBindings.findChildViewById(rootView, id);
      if (groupName == null) {
        break missingId;
      }

      id = R.id.iv_view;
      View ivView = ViewBindings.findChildViewById(rootView, id);
      if (ivView == null) {
        break missingId;
      }

      id = R.id.linLayout_about;
      LinearLayout linLayoutAbout = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAbout == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.private_public;
      TextView privatePublic = ViewBindings.findChildViewById(rootView, id);
      if (privatePublic == null) {
        break missingId;
      }

      id = R.id.profile_photo;
      ImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.relLayout_button;
      RelativeLayout relLayoutButton = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButton == null) {
        break missingId;
      }

      id = R.id.relLayout_button_cancel;
      RelativeLayout relLayoutButtonCancel = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonCancel == null) {
        break missingId;
      }

      id = R.id.relLayout_button_join;
      RelativeLayout relLayoutButtonJoin = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonJoin == null) {
        break missingId;
      }

      id = R.id.relLayout_go_about_class;
      RelativeLayout relLayoutGoAboutClass = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutGoAboutClass == null) {
        break missingId;
      }

      id = R.id.relLayout_tabLayout;
      RelativeLayout relLayoutTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutTabLayout == null) {
        break missingId;
      }

      id = R.id.relayout_profile;
      RelativeLayout relayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (relayoutProfile == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.total_members;
      TextView totalMembers = ViewBindings.findChildViewById(rootView, id);
      if (totalMembers == null) {
        break missingId;
      }

      return new LayoutGroupBottomsheetPrivateDiscoverWithRulesBinding((RelativeLayout) rootView,
          buttonCancel, buttonJoin, groupMsg, groupName, ivView, linLayoutAbout, nestedScrollView,
          privatePublic, profilePhoto, relLayoutButton, relLayoutButtonCancel, relLayoutButtonJoin,
          relLayoutGoAboutClass, relLayoutTabLayout, relayoutProfile, tabLayout, totalMembers);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
