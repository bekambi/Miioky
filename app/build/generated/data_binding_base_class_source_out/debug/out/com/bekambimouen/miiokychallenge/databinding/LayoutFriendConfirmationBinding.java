// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutFriendConfirmationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView buttonConfirm;

  @NonNull
  public final TextView buttonDelete;

  @NonNull
  public final TextView fullName;

  @NonNull
  public final LinearLayout linLayoutButtons;

  @NonNull
  public final LinearLayout linLayoutUsername;

  @NonNull
  public final CircleImageView memberI;

  @NonNull
  public final CircleImageView memberIi;

  @NonNull
  public final TextView numberOfCommonFriends;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final CircleImageView profilePhoto;

  @NonNull
  public final RelativeLayout relLayout;

  @NonNull
  public final RelativeLayout relLayoutAllProfilePhotos;

  @NonNull
  public final RelativeLayout relLayoutButtonConfirm;

  @NonNull
  public final RelativeLayout relLayoutButtonDelete;

  @NonNull
  public final RelativeLayout relLayoutMemberI;

  @NonNull
  public final RelativeLayout relLayoutMemberIi;

  @NonNull
  public final RelativeLayout relLayoutProfileFriends;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView username;

  private LayoutFriendConfirmationBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView buttonConfirm, @NonNull TextView buttonDelete, @NonNull TextView fullName,
      @NonNull LinearLayout linLayoutButtons, @NonNull LinearLayout linLayoutUsername,
      @NonNull CircleImageView memberI, @NonNull CircleImageView memberIi,
      @NonNull TextView numberOfCommonFriends, @NonNull RelativeLayout parent,
      @NonNull CircleImageView profilePhoto, @NonNull RelativeLayout relLayout,
      @NonNull RelativeLayout relLayoutAllProfilePhotos,
      @NonNull RelativeLayout relLayoutButtonConfirm, @NonNull RelativeLayout relLayoutButtonDelete,
      @NonNull RelativeLayout relLayoutMemberI, @NonNull RelativeLayout relLayoutMemberIi,
      @NonNull RelativeLayout relLayoutProfileFriends, @NonNull TextView txtDate,
      @NonNull TextView username) {
    this.rootView = rootView;
    this.buttonConfirm = buttonConfirm;
    this.buttonDelete = buttonDelete;
    this.fullName = fullName;
    this.linLayoutButtons = linLayoutButtons;
    this.linLayoutUsername = linLayoutUsername;
    this.memberI = memberI;
    this.memberIi = memberIi;
    this.numberOfCommonFriends = numberOfCommonFriends;
    this.parent = parent;
    this.profilePhoto = profilePhoto;
    this.relLayout = relLayout;
    this.relLayoutAllProfilePhotos = relLayoutAllProfilePhotos;
    this.relLayoutButtonConfirm = relLayoutButtonConfirm;
    this.relLayoutButtonDelete = relLayoutButtonDelete;
    this.relLayoutMemberI = relLayoutMemberI;
    this.relLayoutMemberIi = relLayoutMemberIi;
    this.relLayoutProfileFriends = relLayoutProfileFriends;
    this.txtDate = txtDate;
    this.username = username;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutFriendConfirmationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutFriendConfirmationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_friend_confirmation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutFriendConfirmationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_confirm;
      TextView buttonConfirm = ViewBindings.findChildViewById(rootView, id);
      if (buttonConfirm == null) {
        break missingId;
      }

      id = R.id.button_delete;
      TextView buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.full_name;
      TextView fullName = ViewBindings.findChildViewById(rootView, id);
      if (fullName == null) {
        break missingId;
      }

      id = R.id.linLayout_buttons;
      LinearLayout linLayoutButtons = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutButtons == null) {
        break missingId;
      }

      id = R.id.linLayout_username;
      LinearLayout linLayoutUsername = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutUsername == null) {
        break missingId;
      }

      id = R.id.member_i;
      CircleImageView memberI = ViewBindings.findChildViewById(rootView, id);
      if (memberI == null) {
        break missingId;
      }

      id = R.id.member_ii;
      CircleImageView memberIi = ViewBindings.findChildViewById(rootView, id);
      if (memberIi == null) {
        break missingId;
      }

      id = R.id.number_of_common_friends;
      TextView numberOfCommonFriends = ViewBindings.findChildViewById(rootView, id);
      if (numberOfCommonFriends == null) {
        break missingId;
      }

      id = R.id.parent;
      RelativeLayout parent = ViewBindings.findChildViewById(rootView, id);
      if (parent == null) {
        break missingId;
      }

      id = R.id.profile_photo;
      CircleImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      id = R.id.relLayout_all_profile_photos;
      RelativeLayout relLayoutAllProfilePhotos = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAllProfilePhotos == null) {
        break missingId;
      }

      id = R.id.relLayout_button_confirm;
      RelativeLayout relLayoutButtonConfirm = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonConfirm == null) {
        break missingId;
      }

      id = R.id.relLayout_button_delete;
      RelativeLayout relLayoutButtonDelete = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonDelete == null) {
        break missingId;
      }

      id = R.id.relLayout_member_i;
      RelativeLayout relLayoutMemberI = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMemberI == null) {
        break missingId;
      }

      id = R.id.relLayout_member_ii;
      RelativeLayout relLayoutMemberIi = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMemberIi == null) {
        break missingId;
      }

      id = R.id.relLayout_profile_friends;
      RelativeLayout relLayoutProfileFriends = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutProfileFriends == null) {
        break missingId;
      }

      id = R.id.txt_date;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new LayoutFriendConfirmationBinding((RelativeLayout) rootView, buttonConfirm,
          buttonDelete, fullName, linLayoutButtons, linLayoutUsername, memberI, memberIi,
          numberOfCommonFriends, parent, profilePhoto, relLayout, relLayoutAllProfilePhotos,
          relLayoutButtonConfirm, relLayoutButtonDelete, relLayoutMemberI, relLayoutMemberIi,
          relLayoutProfileFriends, txtDate, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
