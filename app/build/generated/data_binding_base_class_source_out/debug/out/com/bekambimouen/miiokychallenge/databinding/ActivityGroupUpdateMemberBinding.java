// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupUpdateMemberBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final TextView btnSave;

  @NonNull
  public final ImageView close;

  @NonNull
  public final TextView dateFollowing;

  @NonNull
  public final MyEditText editBio;

  @NonNull
  public final TextView groupMessage;

  @NonNull
  public final RelativeLayout linLayout;

  @NonNull
  public final LinearLayout linLayoutBottomButton;

  @NonNull
  public final LinearLayout linLayoutNberCharSequence;

  @NonNull
  public final TextView nberCharSequence;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final ImageView profilePhoto;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RelativeLayout relLayout3;

  @NonNull
  public final RelativeLayout relLayoutProfileUpdate;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarGroupName;

  @NonNull
  public final CircleImageView userProfilePhoto;

  @NonNull
  public final TextView username;

  private ActivityGroupUpdateMemberBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull TextView btnSave, @NonNull ImageView close,
      @NonNull TextView dateFollowing, @NonNull MyEditText editBio, @NonNull TextView groupMessage,
      @NonNull RelativeLayout linLayout, @NonNull LinearLayout linLayoutBottomButton,
      @NonNull LinearLayout linLayoutNberCharSequence, @NonNull TextView nberCharSequence,
      @NonNull TouchDetectableScrollView nestedScrollView, @NonNull RelativeLayout parent,
      @NonNull ImageView profilePhoto, @NonNull ProgressBar progressBar,
      @NonNull RelativeLayout relLayout3, @NonNull RelativeLayout relLayoutProfileUpdate,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull Toolbar toolBar,
      @NonNull TextView toolBarGroupName, @NonNull CircleImageView userProfilePhoto,
      @NonNull TextView username) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.btnSave = btnSave;
    this.close = close;
    this.dateFollowing = dateFollowing;
    this.editBio = editBio;
    this.groupMessage = groupMessage;
    this.linLayout = linLayout;
    this.linLayoutBottomButton = linLayoutBottomButton;
    this.linLayoutNberCharSequence = linLayoutNberCharSequence;
    this.nberCharSequence = nberCharSequence;
    this.nestedScrollView = nestedScrollView;
    this.parent = parent;
    this.profilePhoto = profilePhoto;
    this.progressBar = progressBar;
    this.relLayout3 = relLayout3;
    this.relLayoutProfileUpdate = relLayoutProfileUpdate;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.toolBar = toolBar;
    this.toolBarGroupName = toolBarGroupName;
    this.userProfilePhoto = userProfilePhoto;
    this.username = username;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupUpdateMemberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupUpdateMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_update_member, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupUpdateMemberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.btn_save;
      TextView btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.date_following;
      TextView dateFollowing = ViewBindings.findChildViewById(rootView, id);
      if (dateFollowing == null) {
        break missingId;
      }

      id = R.id.edit_bio;
      MyEditText editBio = ViewBindings.findChildViewById(rootView, id);
      if (editBio == null) {
        break missingId;
      }

      id = R.id.group_message;
      TextView groupMessage = ViewBindings.findChildViewById(rootView, id);
      if (groupMessage == null) {
        break missingId;
      }

      id = R.id.linLayout;
      RelativeLayout linLayout = ViewBindings.findChildViewById(rootView, id);
      if (linLayout == null) {
        break missingId;
      }

      id = R.id.linLayout_bottom_button;
      LinearLayout linLayoutBottomButton = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutBottomButton == null) {
        break missingId;
      }

      id = R.id.linLayout_nber_char_sequence;
      LinearLayout linLayoutNberCharSequence = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutNberCharSequence == null) {
        break missingId;
      }

      id = R.id.nber_char_sequence;
      TextView nberCharSequence = ViewBindings.findChildViewById(rootView, id);
      if (nberCharSequence == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.profile_photo;
      ImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.relLayout3;
      RelativeLayout relLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout3 == null) {
        break missingId;
      }

      id = R.id.relLayout_profile_update;
      RelativeLayout relLayoutProfileUpdate = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutProfileUpdate == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_group_name;
      TextView toolBarGroupName = ViewBindings.findChildViewById(rootView, id);
      if (toolBarGroupName == null) {
        break missingId;
      }

      id = R.id.user_profile_photo;
      CircleImageView userProfilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (userProfilePhoto == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ActivityGroupUpdateMemberBinding((RelativeLayout) rootView, arrowBack, btnSave,
          close, dateFollowing, editBio, groupMessage, linLayout, linLayoutBottomButton,
          linLayoutNberCharSequence, nberCharSequence, nestedScrollView, parent, profilePhoto,
          progressBar, relLayout3, relLayoutProfileUpdate, relLayoutViewOverlay, toolBar,
          toolBarGroupName, userProfilePhoto, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
