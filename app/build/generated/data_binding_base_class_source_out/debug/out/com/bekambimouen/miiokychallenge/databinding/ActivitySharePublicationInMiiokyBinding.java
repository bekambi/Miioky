// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySharePublicationInMiiokyBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView arrowBack;

  @NonNull
  public final MyEditText editCaption;

  @NonNull
  public final LinearLayout parent;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RelativeLayout relLayoutArrowBack;

  @NonNull
  public final RelativeLayout relLayoutCoverImg;

  @NonNull
  public final RelativeLayout relLayoutImgDouble;

  @NonNull
  public final RelativeLayout relLayoutImgUne;

  @NonNull
  public final RelativeLayout relLayoutPublish;

  @NonNull
  public final RelativeLayout relLayoutRecycler;

  @NonNull
  public final TextView toolBarGroupName;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvPublish;

  private ActivitySharePublicationInMiiokyBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView arrowBack, @NonNull MyEditText editCaption, @NonNull LinearLayout parent,
      @NonNull ProgressBar progressBar, @NonNull RelativeLayout relLayoutArrowBack,
      @NonNull RelativeLayout relLayoutCoverImg, @NonNull RelativeLayout relLayoutImgDouble,
      @NonNull RelativeLayout relLayoutImgUne, @NonNull RelativeLayout relLayoutPublish,
      @NonNull RelativeLayout relLayoutRecycler, @NonNull TextView toolBarGroupName,
      @NonNull Toolbar toolbar, @NonNull TextView tvPublish) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.editCaption = editCaption;
    this.parent = parent;
    this.progressBar = progressBar;
    this.relLayoutArrowBack = relLayoutArrowBack;
    this.relLayoutCoverImg = relLayoutCoverImg;
    this.relLayoutImgDouble = relLayoutImgDouble;
    this.relLayoutImgUne = relLayoutImgUne;
    this.relLayoutPublish = relLayoutPublish;
    this.relLayoutRecycler = relLayoutRecycler;
    this.toolBarGroupName = toolBarGroupName;
    this.toolbar = toolbar;
    this.tvPublish = tvPublish;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySharePublicationInMiiokyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySharePublicationInMiiokyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_share_publication_in_miioky, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySharePublicationInMiiokyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      ImageView arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.edit_caption;
      MyEditText editCaption = ViewBindings.findChildViewById(rootView, id);
      if (editCaption == null) {
        break missingId;
      }

      LinearLayout parent = (LinearLayout) rootView;

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.relLayout_arrowBack;
      RelativeLayout relLayoutArrowBack = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutArrowBack == null) {
        break missingId;
      }

      id = R.id.relLayout_cover_img;
      RelativeLayout relLayoutCoverImg = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCoverImg == null) {
        break missingId;
      }

      id = R.id.relLayout_img_double;
      RelativeLayout relLayoutImgDouble = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutImgDouble == null) {
        break missingId;
      }

      id = R.id.relLayout_img_une;
      RelativeLayout relLayoutImgUne = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutImgUne == null) {
        break missingId;
      }

      id = R.id.relLayout_publish;
      RelativeLayout relLayoutPublish = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPublish == null) {
        break missingId;
      }

      id = R.id.relLayout_recycler;
      RelativeLayout relLayoutRecycler = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutRecycler == null) {
        break missingId;
      }

      id = R.id.toolBar_group_name;
      TextView toolBarGroupName = ViewBindings.findChildViewById(rootView, id);
      if (toolBarGroupName == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_publish;
      TextView tvPublish = ViewBindings.findChildViewById(rootView, id);
      if (tvPublish == null) {
        break missingId;
      }

      return new ActivitySharePublicationInMiiokyBinding((LinearLayout) rootView, arrowBack,
          editCaption, parent, progressBar, relLayoutArrowBack, relLayoutCoverImg,
          relLayoutImgDouble, relLayoutImgUne, relLayoutPublish, relLayoutRecycler,
          toolBarGroupName, toolbar, tvPublish);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
