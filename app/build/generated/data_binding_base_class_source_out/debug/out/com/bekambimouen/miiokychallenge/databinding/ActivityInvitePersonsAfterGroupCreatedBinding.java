// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInvitePersonsAfterGroupCreatedBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MyEditText editSearch;

  @NonNull
  public final ImageView erase;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RecyclerView recyclerViewInviteMembers;

  @NonNull
  public final RelativeLayout relLayout;

  @NonNull
  public final RelativeLayout relLayoutFinishBlack;

  @NonNull
  public final RelativeLayout relLayoutFinishBlue;

  @NonNull
  public final RelativeLayout relLayoutFinishBrown;

  @NonNull
  public final RelativeLayout relLayoutFinishGreen;

  @NonNull
  public final RelativeLayout relLayoutFinishNormal;

  @NonNull
  public final RelativeLayout relLayoutFinishPink;

  @NonNull
  public final RelativeLayout relLayoutSearch;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final ImageView searchIdWhite;

  @NonNull
  public final TextView text1;

  @NonNull
  public final TextView text2;

  @NonNull
  public final Toolbar toolBarInviteBlack;

  @NonNull
  public final Toolbar toolBarInviteBlue;

  @NonNull
  public final Toolbar toolBarInviteBrown;

  @NonNull
  public final Toolbar toolBarInviteGreen;

  @NonNull
  public final Toolbar toolBarInviteNormal;

  @NonNull
  public final Toolbar toolBarInvitePink;

  private ActivityInvitePersonsAfterGroupCreatedBinding(@NonNull RelativeLayout rootView,
      @NonNull MyEditText editSearch, @NonNull ImageView erase, @NonNull RelativeLayout parent,
      @NonNull RecyclerView recyclerViewInviteMembers, @NonNull RelativeLayout relLayout,
      @NonNull RelativeLayout relLayoutFinishBlack, @NonNull RelativeLayout relLayoutFinishBlue,
      @NonNull RelativeLayout relLayoutFinishBrown, @NonNull RelativeLayout relLayoutFinishGreen,
      @NonNull RelativeLayout relLayoutFinishNormal, @NonNull RelativeLayout relLayoutFinishPink,
      @NonNull RelativeLayout relLayoutSearch, @NonNull RelativeLayout relLayoutViewOverlay,
      @NonNull ImageView searchIdWhite, @NonNull TextView text1, @NonNull TextView text2,
      @NonNull Toolbar toolBarInviteBlack, @NonNull Toolbar toolBarInviteBlue,
      @NonNull Toolbar toolBarInviteBrown, @NonNull Toolbar toolBarInviteGreen,
      @NonNull Toolbar toolBarInviteNormal, @NonNull Toolbar toolBarInvitePink) {
    this.rootView = rootView;
    this.editSearch = editSearch;
    this.erase = erase;
    this.parent = parent;
    this.recyclerViewInviteMembers = recyclerViewInviteMembers;
    this.relLayout = relLayout;
    this.relLayoutFinishBlack = relLayoutFinishBlack;
    this.relLayoutFinishBlue = relLayoutFinishBlue;
    this.relLayoutFinishBrown = relLayoutFinishBrown;
    this.relLayoutFinishGreen = relLayoutFinishGreen;
    this.relLayoutFinishNormal = relLayoutFinishNormal;
    this.relLayoutFinishPink = relLayoutFinishPink;
    this.relLayoutSearch = relLayoutSearch;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.searchIdWhite = searchIdWhite;
    this.text1 = text1;
    this.text2 = text2;
    this.toolBarInviteBlack = toolBarInviteBlack;
    this.toolBarInviteBlue = toolBarInviteBlue;
    this.toolBarInviteBrown = toolBarInviteBrown;
    this.toolBarInviteGreen = toolBarInviteGreen;
    this.toolBarInviteNormal = toolBarInviteNormal;
    this.toolBarInvitePink = toolBarInvitePink;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInvitePersonsAfterGroupCreatedBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInvitePersonsAfterGroupCreatedBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_invite_persons_after_group_created, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInvitePersonsAfterGroupCreatedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_search;
      MyEditText editSearch = ViewBindings.findChildViewById(rootView, id);
      if (editSearch == null) {
        break missingId;
      }

      id = R.id.erase;
      ImageView erase = ViewBindings.findChildViewById(rootView, id);
      if (erase == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.recyclerView_invite_members;
      RecyclerView recyclerViewInviteMembers = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewInviteMembers == null) {
        break missingId;
      }

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      id = R.id.relLayout_finish_black;
      RelativeLayout relLayoutFinishBlack = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFinishBlack == null) {
        break missingId;
      }

      id = R.id.relLayout_finish_blue;
      RelativeLayout relLayoutFinishBlue = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFinishBlue == null) {
        break missingId;
      }

      id = R.id.relLayout_finish_brown;
      RelativeLayout relLayoutFinishBrown = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFinishBrown == null) {
        break missingId;
      }

      id = R.id.relLayout_finish_green;
      RelativeLayout relLayoutFinishGreen = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFinishGreen == null) {
        break missingId;
      }

      id = R.id.relLayout_finish_normal;
      RelativeLayout relLayoutFinishNormal = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFinishNormal == null) {
        break missingId;
      }

      id = R.id.relLayout_finish_pink;
      RelativeLayout relLayoutFinishPink = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFinishPink == null) {
        break missingId;
      }

      id = R.id.relLayout_search;
      RelativeLayout relLayoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSearch == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.search_id_white;
      ImageView searchIdWhite = ViewBindings.findChildViewById(rootView, id);
      if (searchIdWhite == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.text2;
      TextView text2 = ViewBindings.findChildViewById(rootView, id);
      if (text2 == null) {
        break missingId;
      }

      id = R.id.toolBar_invite_black;
      Toolbar toolBarInviteBlack = ViewBindings.findChildViewById(rootView, id);
      if (toolBarInviteBlack == null) {
        break missingId;
      }

      id = R.id.toolBar_invite_blue;
      Toolbar toolBarInviteBlue = ViewBindings.findChildViewById(rootView, id);
      if (toolBarInviteBlue == null) {
        break missingId;
      }

      id = R.id.toolBar_invite_brown;
      Toolbar toolBarInviteBrown = ViewBindings.findChildViewById(rootView, id);
      if (toolBarInviteBrown == null) {
        break missingId;
      }

      id = R.id.toolBar_invite_green;
      Toolbar toolBarInviteGreen = ViewBindings.findChildViewById(rootView, id);
      if (toolBarInviteGreen == null) {
        break missingId;
      }

      id = R.id.toolBar_invite_normal;
      Toolbar toolBarInviteNormal = ViewBindings.findChildViewById(rootView, id);
      if (toolBarInviteNormal == null) {
        break missingId;
      }

      id = R.id.toolBar_invite_pink;
      Toolbar toolBarInvitePink = ViewBindings.findChildViewById(rootView, id);
      if (toolBarInvitePink == null) {
        break missingId;
      }

      return new ActivityInvitePersonsAfterGroupCreatedBinding((RelativeLayout) rootView,
          editSearch, erase, parent, recyclerViewInviteMembers, relLayout, relLayoutFinishBlack,
          relLayoutFinishBlue, relLayoutFinishBrown, relLayoutFinishGreen, relLayoutFinishNormal,
          relLayoutFinishPink, relLayoutSearch, relLayoutViewOverlay, searchIdWhite, text1, text2,
          toolBarInviteBlack, toolBarInviteBlue, toolBarInviteBrown, toolBarInviteGreen,
          toolBarInviteNormal, toolBarInvitePink);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
