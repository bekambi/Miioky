// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupProfileAdminBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final ImageView close;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarGroupName;

  private ActivityGroupProfileAdminBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull ImageView close, @NonNull RelativeLayout parent,
      @NonNull RecyclerView recyclerView, @NonNull RelativeLayout relLayoutViewOverlay,
      @NonNull SwipeRefreshLayout swipeRefreshLayout, @NonNull Toolbar toolBar,
      @NonNull TextView toolBarGroupName) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.close = close;
    this.parent = parent;
    this.recyclerView = recyclerView;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.toolBar = toolBar;
    this.toolBarGroupName = toolBarGroupName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupProfileAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupProfileAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_profile_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupProfileAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_group_name;
      TextView toolBarGroupName = ViewBindings.findChildViewById(rootView, id);
      if (toolBarGroupName == null) {
        break missingId;
      }

      return new ActivityGroupProfileAdminBinding((RelativeLayout) rootView, arrowBack, close,
          parent, recyclerView, relLayoutViewOverlay, swipeRefreshLayout, toolBar,
          toolBarGroupName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
