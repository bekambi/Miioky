// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import com.bekambimouen.miiokychallenge.like_button_animation.SmallBangView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMarketStoreBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView aboutStore;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final TextView boutonQuitterStore;

  @NonNull
  public final TextView boutonRejoindreStore;

  @NonNull
  public final TextView btnSeeTheProfile;

  @NonNull
  public final TextView buttonFollow;

  @NonNull
  public final TextView buttonSent;

  @NonNull
  public final TextView buttonUnfollow;

  @NonNull
  public final TextView catalog;

  @NonNull
  public final ImageView close;

  @NonNull
  public final ImageView commentIcon;

  @NonNull
  public final TextView dateFollowing;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView discussion;

  @NonNull
  public final TextView discussionFriend;

  @NonNull
  public final ImageView image;

  @NonNull
  public final SmallBangView likeHeart;

  @NonNull
  public final LinearLayout linLayoutAboutStore;

  @NonNull
  public final LinearLayout linLayoutAlreadyFriend;

  @NonNull
  public final LinearLayout linLayoutNotYetFriend;

  @NonNull
  public final TextView neighborhood;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final TextView numberOfAnnounce;

  @NonNull
  public final TextView numberOfComments;

  @NonNull
  public final TextView numberOfLikes;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RelativeLayout parent1;

  @NonNull
  public final ImageView profilePhoto;

  @NonNull
  public final CircleImageView profilePhotoStore;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout relLayout;

  @NonNull
  public final RelativeLayout relLayoutAdd;

  @NonNull
  public final RelativeLayout relLayoutCommentIcon;

  @NonNull
  public final RelativeLayout relLayoutDiscussion;

  @NonNull
  public final RelativeLayout relLayoutDiscussionFriend;

  @NonNull
  public final RelativeLayout relLayoutFollow;

  @NonNull
  public final RelativeLayout relLayoutSectionFollow;

  @NonNull
  public final RelativeLayout relLayoutSeeTheProfile;

  @NonNull
  public final RelativeLayout relLayoutUnfriend;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final TextView sellerName;

  @NonNull
  public final CircleImageView sellerProfilePhoto;

  @NonNull
  public final TextView storeName;

  @NonNull
  public final TextView textFriend;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarStoreName;

  @NonNull
  public final TextView viewTheMenu;

  @NonNull
  public final TextView views;

  private ActivityMarketStoreBinding(@NonNull RelativeLayout rootView, @NonNull TextView aboutStore,
      @NonNull RelativeLayout arrowBack, @NonNull TextView boutonQuitterStore,
      @NonNull TextView boutonRejoindreStore, @NonNull TextView btnSeeTheProfile,
      @NonNull TextView buttonFollow, @NonNull TextView buttonSent,
      @NonNull TextView buttonUnfollow, @NonNull TextView catalog, @NonNull ImageView close,
      @NonNull ImageView commentIcon, @NonNull TextView dateFollowing,
      @NonNull TextView description, @NonNull TextView discussion,
      @NonNull TextView discussionFriend, @NonNull ImageView image,
      @NonNull SmallBangView likeHeart, @NonNull LinearLayout linLayoutAboutStore,
      @NonNull LinearLayout linLayoutAlreadyFriend, @NonNull LinearLayout linLayoutNotYetFriend,
      @NonNull TextView neighborhood, @NonNull TouchDetectableScrollView nestedScrollView,
      @NonNull TextView numberOfAnnounce, @NonNull TextView numberOfComments,
      @NonNull TextView numberOfLikes, @NonNull RelativeLayout parent,
      @NonNull RelativeLayout parent1, @NonNull ImageView profilePhoto,
      @NonNull CircleImageView profilePhotoStore, @NonNull RecyclerView recyclerView,
      @NonNull RelativeLayout relLayout, @NonNull RelativeLayout relLayoutAdd,
      @NonNull RelativeLayout relLayoutCommentIcon, @NonNull RelativeLayout relLayoutDiscussion,
      @NonNull RelativeLayout relLayoutDiscussionFriend, @NonNull RelativeLayout relLayoutFollow,
      @NonNull RelativeLayout relLayoutSectionFollow,
      @NonNull RelativeLayout relLayoutSeeTheProfile, @NonNull RelativeLayout relLayoutUnfriend,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull TextView sellerName,
      @NonNull CircleImageView sellerProfilePhoto, @NonNull TextView storeName,
      @NonNull TextView textFriend, @NonNull Toolbar toolBar, @NonNull TextView toolBarStoreName,
      @NonNull TextView viewTheMenu, @NonNull TextView views) {
    this.rootView = rootView;
    this.aboutStore = aboutStore;
    this.arrowBack = arrowBack;
    this.boutonQuitterStore = boutonQuitterStore;
    this.boutonRejoindreStore = boutonRejoindreStore;
    this.btnSeeTheProfile = btnSeeTheProfile;
    this.buttonFollow = buttonFollow;
    this.buttonSent = buttonSent;
    this.buttonUnfollow = buttonUnfollow;
    this.catalog = catalog;
    this.close = close;
    this.commentIcon = commentIcon;
    this.dateFollowing = dateFollowing;
    this.description = description;
    this.discussion = discussion;
    this.discussionFriend = discussionFriend;
    this.image = image;
    this.likeHeart = likeHeart;
    this.linLayoutAboutStore = linLayoutAboutStore;
    this.linLayoutAlreadyFriend = linLayoutAlreadyFriend;
    this.linLayoutNotYetFriend = linLayoutNotYetFriend;
    this.neighborhood = neighborhood;
    this.nestedScrollView = nestedScrollView;
    this.numberOfAnnounce = numberOfAnnounce;
    this.numberOfComments = numberOfComments;
    this.numberOfLikes = numberOfLikes;
    this.parent = parent;
    this.parent1 = parent1;
    this.profilePhoto = profilePhoto;
    this.profilePhotoStore = profilePhotoStore;
    this.recyclerView = recyclerView;
    this.relLayout = relLayout;
    this.relLayoutAdd = relLayoutAdd;
    this.relLayoutCommentIcon = relLayoutCommentIcon;
    this.relLayoutDiscussion = relLayoutDiscussion;
    this.relLayoutDiscussionFriend = relLayoutDiscussionFriend;
    this.relLayoutFollow = relLayoutFollow;
    this.relLayoutSectionFollow = relLayoutSectionFollow;
    this.relLayoutSeeTheProfile = relLayoutSeeTheProfile;
    this.relLayoutUnfriend = relLayoutUnfriend;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.sellerName = sellerName;
    this.sellerProfilePhoto = sellerProfilePhoto;
    this.storeName = storeName;
    this.textFriend = textFriend;
    this.toolBar = toolBar;
    this.toolBarStoreName = toolBarStoreName;
    this.viewTheMenu = viewTheMenu;
    this.views = views;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMarketStoreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMarketStoreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_market_store, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMarketStoreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_store;
      TextView aboutStore = ViewBindings.findChildViewById(rootView, id);
      if (aboutStore == null) {
        break missingId;
      }

      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.bouton_quitter_store;
      TextView boutonQuitterStore = ViewBindings.findChildViewById(rootView, id);
      if (boutonQuitterStore == null) {
        break missingId;
      }

      id = R.id.bouton_rejoindre_store;
      TextView boutonRejoindreStore = ViewBindings.findChildViewById(rootView, id);
      if (boutonRejoindreStore == null) {
        break missingId;
      }

      id = R.id.btn_see_the_profile;
      TextView btnSeeTheProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnSeeTheProfile == null) {
        break missingId;
      }

      id = R.id.button_follow;
      TextView buttonFollow = ViewBindings.findChildViewById(rootView, id);
      if (buttonFollow == null) {
        break missingId;
      }

      id = R.id.button_sent;
      TextView buttonSent = ViewBindings.findChildViewById(rootView, id);
      if (buttonSent == null) {
        break missingId;
      }

      id = R.id.button_unfollow;
      TextView buttonUnfollow = ViewBindings.findChildViewById(rootView, id);
      if (buttonUnfollow == null) {
        break missingId;
      }

      id = R.id.catalog;
      TextView catalog = ViewBindings.findChildViewById(rootView, id);
      if (catalog == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.comment_icon;
      ImageView commentIcon = ViewBindings.findChildViewById(rootView, id);
      if (commentIcon == null) {
        break missingId;
      }

      id = R.id.date_following;
      TextView dateFollowing = ViewBindings.findChildViewById(rootView, id);
      if (dateFollowing == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.discussion;
      TextView discussion = ViewBindings.findChildViewById(rootView, id);
      if (discussion == null) {
        break missingId;
      }

      id = R.id.discussion_friend;
      TextView discussionFriend = ViewBindings.findChildViewById(rootView, id);
      if (discussionFriend == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.like_heart;
      SmallBangView likeHeart = ViewBindings.findChildViewById(rootView, id);
      if (likeHeart == null) {
        break missingId;
      }

      id = R.id.linLayout_about_store;
      LinearLayout linLayoutAboutStore = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAboutStore == null) {
        break missingId;
      }

      id = R.id.linLayout_already_friend;
      LinearLayout linLayoutAlreadyFriend = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAlreadyFriend == null) {
        break missingId;
      }

      id = R.id.linLayout_not_yet_friend;
      LinearLayout linLayoutNotYetFriend = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutNotYetFriend == null) {
        break missingId;
      }

      id = R.id.neighborhood;
      TextView neighborhood = ViewBindings.findChildViewById(rootView, id);
      if (neighborhood == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.number_of_announce;
      TextView numberOfAnnounce = ViewBindings.findChildViewById(rootView, id);
      if (numberOfAnnounce == null) {
        break missingId;
      }

      id = R.id.number_of_comments;
      TextView numberOfComments = ViewBindings.findChildViewById(rootView, id);
      if (numberOfComments == null) {
        break missingId;
      }

      id = R.id.number_of_likes;
      TextView numberOfLikes = ViewBindings.findChildViewById(rootView, id);
      if (numberOfLikes == null) {
        break missingId;
      }

      id = R.id.parent;
      RelativeLayout parent = ViewBindings.findChildViewById(rootView, id);
      if (parent == null) {
        break missingId;
      }

      RelativeLayout parent1 = (RelativeLayout) rootView;

      id = R.id.profile_photo;
      ImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.profile_photo_store;
      CircleImageView profilePhotoStore = ViewBindings.findChildViewById(rootView, id);
      if (profilePhotoStore == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      id = R.id.relLayout_add;
      RelativeLayout relLayoutAdd = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAdd == null) {
        break missingId;
      }

      id = R.id.relLayout_comment_icon;
      RelativeLayout relLayoutCommentIcon = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCommentIcon == null) {
        break missingId;
      }

      id = R.id.relLayoutDiscussion;
      RelativeLayout relLayoutDiscussion = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutDiscussion == null) {
        break missingId;
      }

      id = R.id.relLayout_discussion_friend;
      RelativeLayout relLayoutDiscussionFriend = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutDiscussionFriend == null) {
        break missingId;
      }

      id = R.id.relLayout_follow;
      RelativeLayout relLayoutFollow = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFollow == null) {
        break missingId;
      }

      id = R.id.relLayout_section_follow;
      RelativeLayout relLayoutSectionFollow = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSectionFollow == null) {
        break missingId;
      }

      id = R.id.relLayout_see_the_profile;
      RelativeLayout relLayoutSeeTheProfile = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSeeTheProfile == null) {
        break missingId;
      }

      id = R.id.relLayout_unfriend;
      RelativeLayout relLayoutUnfriend = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUnfriend == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.seller_name;
      TextView sellerName = ViewBindings.findChildViewById(rootView, id);
      if (sellerName == null) {
        break missingId;
      }

      id = R.id.seller_profile_photo;
      CircleImageView sellerProfilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (sellerProfilePhoto == null) {
        break missingId;
      }

      id = R.id.store_name;
      TextView storeName = ViewBindings.findChildViewById(rootView, id);
      if (storeName == null) {
        break missingId;
      }

      id = R.id.text_friend;
      TextView textFriend = ViewBindings.findChildViewById(rootView, id);
      if (textFriend == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_store_name;
      TextView toolBarStoreName = ViewBindings.findChildViewById(rootView, id);
      if (toolBarStoreName == null) {
        break missingId;
      }

      id = R.id.view_the_menu;
      TextView viewTheMenu = ViewBindings.findChildViewById(rootView, id);
      if (viewTheMenu == null) {
        break missingId;
      }

      id = R.id.views;
      TextView views = ViewBindings.findChildViewById(rootView, id);
      if (views == null) {
        break missingId;
      }

      return new ActivityMarketStoreBinding((RelativeLayout) rootView, aboutStore, arrowBack,
          boutonQuitterStore, boutonRejoindreStore, btnSeeTheProfile, buttonFollow, buttonSent,
          buttonUnfollow, catalog, close, commentIcon, dateFollowing, description, discussion,
          discussionFriend, image, likeHeart, linLayoutAboutStore, linLayoutAlreadyFriend,
          linLayoutNotYetFriend, neighborhood, nestedScrollView, numberOfAnnounce, numberOfComments,
          numberOfLikes, parent, parent1, profilePhoto, profilePhotoStore, recyclerView, relLayout,
          relLayoutAdd, relLayoutCommentIcon, relLayoutDiscussion, relLayoutDiscussionFriend,
          relLayoutFollow, relLayoutSectionFollow, relLayoutSeeTheProfile, relLayoutUnfriend,
          relLayoutViewOverlay, sellerName, sellerProfilePhoto, storeName, textFriend, toolBar,
          toolBarStoreName, viewTheMenu, views);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
