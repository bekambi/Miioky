// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.csguys.viewmoretextview.ViewMoreTextView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutViewCategoryImageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView buttonFollow;

  @NonNull
  public final ViewMoreTextView caption;

  @NonNull
  public final TextView category;

  @NonNull
  public final TextView countryName;

  @NonNull
  public final TextView downloadedCount;

  @NonNull
  public final ImageView flagIcon;

  @NonNull
  public final ImageView imageInvite;

  @NonNull
  public final ImageView ivShare;

  @NonNull
  public final LinearLayout linLayoutFlag;

  @NonNull
  public final LinearLayout linLayoutShare;

  @NonNull
  public final ImageView menuItem;

  @NonNull
  public final View point1;

  @NonNull
  public final View point2;

  @NonNull
  public final CircleImageView profilePhoto;

  @NonNull
  public final RelativeLayout relLayout1;

  @NonNull
  public final RelativeLayout relLayoutCategory;

  @NonNull
  public final RelativeLayout relLayoutCountActions;

  @NonNull
  public final RelativeLayout relLayoutDownload;

  @NonNull
  public final RelativeLayout relLayoutFollow;

  @NonNull
  public final RelativeLayout relLayoutGoUserProfile;

  @NonNull
  public final RelativeLayout relLayoutProfile;

  @NonNull
  public final RelativeLayout relLayoutShare;

  @NonNull
  public final TextView shareCount;

  @NonNull
  public final TextView tpsPublication;

  @NonNull
  public final TextView translateComment;

  @NonNull
  public final TextView username;

  @NonNull
  public final View viewOnline;

  private LayoutViewCategoryImageBinding(@NonNull LinearLayout rootView,
      @NonNull TextView buttonFollow, @NonNull ViewMoreTextView caption, @NonNull TextView category,
      @NonNull TextView countryName, @NonNull TextView downloadedCount, @NonNull ImageView flagIcon,
      @NonNull ImageView imageInvite, @NonNull ImageView ivShare,
      @NonNull LinearLayout linLayoutFlag, @NonNull LinearLayout linLayoutShare,
      @NonNull ImageView menuItem, @NonNull View point1, @NonNull View point2,
      @NonNull CircleImageView profilePhoto, @NonNull RelativeLayout relLayout1,
      @NonNull RelativeLayout relLayoutCategory, @NonNull RelativeLayout relLayoutCountActions,
      @NonNull RelativeLayout relLayoutDownload, @NonNull RelativeLayout relLayoutFollow,
      @NonNull RelativeLayout relLayoutGoUserProfile, @NonNull RelativeLayout relLayoutProfile,
      @NonNull RelativeLayout relLayoutShare, @NonNull TextView shareCount,
      @NonNull TextView tpsPublication, @NonNull TextView translateComment,
      @NonNull TextView username, @NonNull View viewOnline) {
    this.rootView = rootView;
    this.buttonFollow = buttonFollow;
    this.caption = caption;
    this.category = category;
    this.countryName = countryName;
    this.downloadedCount = downloadedCount;
    this.flagIcon = flagIcon;
    this.imageInvite = imageInvite;
    this.ivShare = ivShare;
    this.linLayoutFlag = linLayoutFlag;
    this.linLayoutShare = linLayoutShare;
    this.menuItem = menuItem;
    this.point1 = point1;
    this.point2 = point2;
    this.profilePhoto = profilePhoto;
    this.relLayout1 = relLayout1;
    this.relLayoutCategory = relLayoutCategory;
    this.relLayoutCountActions = relLayoutCountActions;
    this.relLayoutDownload = relLayoutDownload;
    this.relLayoutFollow = relLayoutFollow;
    this.relLayoutGoUserProfile = relLayoutGoUserProfile;
    this.relLayoutProfile = relLayoutProfile;
    this.relLayoutShare = relLayoutShare;
    this.shareCount = shareCount;
    this.tpsPublication = tpsPublication;
    this.translateComment = translateComment;
    this.username = username;
    this.viewOnline = viewOnline;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutViewCategoryImageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutViewCategoryImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_view_category_image, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutViewCategoryImageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_follow;
      TextView buttonFollow = ViewBindings.findChildViewById(rootView, id);
      if (buttonFollow == null) {
        break missingId;
      }

      id = R.id.caption;
      ViewMoreTextView caption = ViewBindings.findChildViewById(rootView, id);
      if (caption == null) {
        break missingId;
      }

      id = R.id.category;
      TextView category = ViewBindings.findChildViewById(rootView, id);
      if (category == null) {
        break missingId;
      }

      id = R.id.country_name;
      TextView countryName = ViewBindings.findChildViewById(rootView, id);
      if (countryName == null) {
        break missingId;
      }

      id = R.id.downloaded_count;
      TextView downloadedCount = ViewBindings.findChildViewById(rootView, id);
      if (downloadedCount == null) {
        break missingId;
      }

      id = R.id.flag_icon;
      ImageView flagIcon = ViewBindings.findChildViewById(rootView, id);
      if (flagIcon == null) {
        break missingId;
      }

      id = R.id.image_invite;
      ImageView imageInvite = ViewBindings.findChildViewById(rootView, id);
      if (imageInvite == null) {
        break missingId;
      }

      id = R.id.iv_share;
      ImageView ivShare = ViewBindings.findChildViewById(rootView, id);
      if (ivShare == null) {
        break missingId;
      }

      id = R.id.linLayout_flag;
      LinearLayout linLayoutFlag = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutFlag == null) {
        break missingId;
      }

      id = R.id.linLayout_share;
      LinearLayout linLayoutShare = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutShare == null) {
        break missingId;
      }

      id = R.id.menu_item;
      ImageView menuItem = ViewBindings.findChildViewById(rootView, id);
      if (menuItem == null) {
        break missingId;
      }

      id = R.id.point1;
      View point1 = ViewBindings.findChildViewById(rootView, id);
      if (point1 == null) {
        break missingId;
      }

      id = R.id.point2;
      View point2 = ViewBindings.findChildViewById(rootView, id);
      if (point2 == null) {
        break missingId;
      }

      id = R.id.profile_photo;
      CircleImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.relLayout1;
      RelativeLayout relLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout1 == null) {
        break missingId;
      }

      id = R.id.relLayout_category;
      RelativeLayout relLayoutCategory = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCategory == null) {
        break missingId;
      }

      id = R.id.relLayout_count_actions;
      RelativeLayout relLayoutCountActions = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCountActions == null) {
        break missingId;
      }

      id = R.id.relLayout_download;
      RelativeLayout relLayoutDownload = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutDownload == null) {
        break missingId;
      }

      id = R.id.relLayout_follow;
      RelativeLayout relLayoutFollow = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFollow == null) {
        break missingId;
      }

      id = R.id.relLayout_go_user_profile;
      RelativeLayout relLayoutGoUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutGoUserProfile == null) {
        break missingId;
      }

      id = R.id.relLayout_profile;
      RelativeLayout relLayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutProfile == null) {
        break missingId;
      }

      id = R.id.relLayout_share;
      RelativeLayout relLayoutShare = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutShare == null) {
        break missingId;
      }

      id = R.id.share_count;
      TextView shareCount = ViewBindings.findChildViewById(rootView, id);
      if (shareCount == null) {
        break missingId;
      }

      id = R.id.tps_publication;
      TextView tpsPublication = ViewBindings.findChildViewById(rootView, id);
      if (tpsPublication == null) {
        break missingId;
      }

      id = R.id.translate_comment;
      TextView translateComment = ViewBindings.findChildViewById(rootView, id);
      if (translateComment == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.view_online;
      View viewOnline = ViewBindings.findChildViewById(rootView, id);
      if (viewOnline == null) {
        break missingId;
      }

      return new LayoutViewCategoryImageBinding((LinearLayout) rootView, buttonFollow, caption,
          category, countryName, downloadedCount, flagIcon, imageInvite, ivShare, linLayoutFlag,
          linLayoutShare, menuItem, point1, point2, profilePhoto, relLayout1, relLayoutCategory,
          relLayoutCountActions, relLayoutDownload, relLayoutFollow, relLayoutGoUserProfile,
          relLayoutProfile, relLayoutShare, shareCount, tpsPublication, translateComment, username,
          viewOnline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
