// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.tinkoff.scrollingpagerindicator.ScrollingPagerIndicator;

public final class ActivityLocationPublicationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final ImageView arrowBackChoosePhoto;

  @NonNull
  public final ImageView arrowDown;

  @NonNull
  public final TextView buttonOk;

  @NonNull
  public final ImageView cameraId;

  @NonNull
  public final ImageView close;

  @NonNull
  public final TextView countryDevise1;

  @NonNull
  public final TextView countryDevise2;

  @NonNull
  public final MyEditText editDescription;

  @NonNull
  public final AutoCompleteTextView editNeighborhood;

  @NonNull
  public final MyEditText editOldPrice;

  @NonNull
  public final MyEditText editPrice;

  @NonNull
  public final MyEditText editProductName;

  @NonNull
  public final TextView fullName;

  @NonNull
  public final ImageView ivVideo;

  @NonNull
  public final LinearLayout linLayoutAddPhoto;

  @NonNull
  public final RelativeLayout menuItem;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final TextView number;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final TextView photosMax;

  @NonNull
  public final CircleImageView profilePhoto;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView pubRecyclerViewPhoto;

  @NonNull
  public final ScrollingPagerIndicator recyclerIndicator;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout relLayout;

  @NonNull
  public final RelativeLayout relLayout4;

  @NonNull
  public final RelativeLayout relLayout51;

  @NonNull
  public final RelativeLayout relLayout52;

  @NonNull
  public final RelativeLayout relLayout6;

  @NonNull
  public final RelativeLayout relLayoutArrowBackChoosePhoto;

  @NonNull
  public final RelativeLayout relLayoutButtonOk;

  @NonNull
  public final RelativeLayout relLayoutCategory;

  @NonNull
  public final RelativeLayout relLayoutDescription;

  @NonNull
  public final RelativeLayout relLayoutGoUserProfile;

  @NonNull
  public final RelativeLayout relLayoutNeighborhood;

  @NonNull
  public final RelativeLayout relLayoutOldPrice;

  @NonNull
  public final RelativeLayout relLayoutPhoto;

  @NonNull
  public final RelativeLayout relLayoutPicPhoto;

  @NonNull
  public final RelativeLayout relLayoutPost;

  @NonNull
  public final RelativeLayout relLayoutPostProduct;

  @NonNull
  public final RelativeLayout relLayoutPrice;

  @NonNull
  public final RelativeLayout relLayoutProduct;

  @NonNull
  public final RelativeLayout relLayoutProfile;

  @NonNull
  public final RelativeLayout relLayoutPublish;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final Spinner spinnerPrice;

  @NonNull
  public final TextView textPublish;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarText;

  @NonNull
  public final TextView toolBarTextviewChoosePhoto;

  @NonNull
  public final Toolbar toolbarChoosePhoto;

  @NonNull
  public final TextView txtCategory;

  @NonNull
  public final TextView username;

  @NonNull
  public final View viewBar;

  private ActivityLocationPublicationBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull ImageView arrowBackChoosePhoto,
      @NonNull ImageView arrowDown, @NonNull TextView buttonOk, @NonNull ImageView cameraId,
      @NonNull ImageView close, @NonNull TextView countryDevise1, @NonNull TextView countryDevise2,
      @NonNull MyEditText editDescription, @NonNull AutoCompleteTextView editNeighborhood,
      @NonNull MyEditText editOldPrice, @NonNull MyEditText editPrice,
      @NonNull MyEditText editProductName, @NonNull TextView fullName, @NonNull ImageView ivVideo,
      @NonNull LinearLayout linLayoutAddPhoto, @NonNull RelativeLayout menuItem,
      @NonNull TouchDetectableScrollView nestedScrollView, @NonNull TextView number,
      @NonNull RelativeLayout parent, @NonNull TextView photosMax,
      @NonNull CircleImageView profilePhoto, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView pubRecyclerViewPhoto,
      @NonNull ScrollingPagerIndicator recyclerIndicator, @NonNull RecyclerView recyclerView,
      @NonNull RelativeLayout relLayout, @NonNull RelativeLayout relLayout4,
      @NonNull RelativeLayout relLayout51, @NonNull RelativeLayout relLayout52,
      @NonNull RelativeLayout relLayout6, @NonNull RelativeLayout relLayoutArrowBackChoosePhoto,
      @NonNull RelativeLayout relLayoutButtonOk, @NonNull RelativeLayout relLayoutCategory,
      @NonNull RelativeLayout relLayoutDescription, @NonNull RelativeLayout relLayoutGoUserProfile,
      @NonNull RelativeLayout relLayoutNeighborhood, @NonNull RelativeLayout relLayoutOldPrice,
      @NonNull RelativeLayout relLayoutPhoto, @NonNull RelativeLayout relLayoutPicPhoto,
      @NonNull RelativeLayout relLayoutPost, @NonNull RelativeLayout relLayoutPostProduct,
      @NonNull RelativeLayout relLayoutPrice, @NonNull RelativeLayout relLayoutProduct,
      @NonNull RelativeLayout relLayoutProfile, @NonNull RelativeLayout relLayoutPublish,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull Spinner spinnerPrice,
      @NonNull TextView textPublish, @NonNull Toolbar toolBar, @NonNull TextView toolBarText,
      @NonNull TextView toolBarTextviewChoosePhoto, @NonNull Toolbar toolbarChoosePhoto,
      @NonNull TextView txtCategory, @NonNull TextView username, @NonNull View viewBar) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.arrowBackChoosePhoto = arrowBackChoosePhoto;
    this.arrowDown = arrowDown;
    this.buttonOk = buttonOk;
    this.cameraId = cameraId;
    this.close = close;
    this.countryDevise1 = countryDevise1;
    this.countryDevise2 = countryDevise2;
    this.editDescription = editDescription;
    this.editNeighborhood = editNeighborhood;
    this.editOldPrice = editOldPrice;
    this.editPrice = editPrice;
    this.editProductName = editProductName;
    this.fullName = fullName;
    this.ivVideo = ivVideo;
    this.linLayoutAddPhoto = linLayoutAddPhoto;
    this.menuItem = menuItem;
    this.nestedScrollView = nestedScrollView;
    this.number = number;
    this.parent = parent;
    this.photosMax = photosMax;
    this.profilePhoto = profilePhoto;
    this.progressBar = progressBar;
    this.pubRecyclerViewPhoto = pubRecyclerViewPhoto;
    this.recyclerIndicator = recyclerIndicator;
    this.recyclerView = recyclerView;
    this.relLayout = relLayout;
    this.relLayout4 = relLayout4;
    this.relLayout51 = relLayout51;
    this.relLayout52 = relLayout52;
    this.relLayout6 = relLayout6;
    this.relLayoutArrowBackChoosePhoto = relLayoutArrowBackChoosePhoto;
    this.relLayoutButtonOk = relLayoutButtonOk;
    this.relLayoutCategory = relLayoutCategory;
    this.relLayoutDescription = relLayoutDescription;
    this.relLayoutGoUserProfile = relLayoutGoUserProfile;
    this.relLayoutNeighborhood = relLayoutNeighborhood;
    this.relLayoutOldPrice = relLayoutOldPrice;
    this.relLayoutPhoto = relLayoutPhoto;
    this.relLayoutPicPhoto = relLayoutPicPhoto;
    this.relLayoutPost = relLayoutPost;
    this.relLayoutPostProduct = relLayoutPostProduct;
    this.relLayoutPrice = relLayoutPrice;
    this.relLayoutProduct = relLayoutProduct;
    this.relLayoutProfile = relLayoutProfile;
    this.relLayoutPublish = relLayoutPublish;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.spinnerPrice = spinnerPrice;
    this.textPublish = textPublish;
    this.toolBar = toolBar;
    this.toolBarText = toolBarText;
    this.toolBarTextviewChoosePhoto = toolBarTextviewChoosePhoto;
    this.toolbarChoosePhoto = toolbarChoosePhoto;
    this.txtCategory = txtCategory;
    this.username = username;
    this.viewBar = viewBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLocationPublicationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLocationPublicationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_location_publication, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLocationPublicationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.arrowBack_choose_photo;
      ImageView arrowBackChoosePhoto = ViewBindings.findChildViewById(rootView, id);
      if (arrowBackChoosePhoto == null) {
        break missingId;
      }

      id = R.id.arrow_down;
      ImageView arrowDown = ViewBindings.findChildViewById(rootView, id);
      if (arrowDown == null) {
        break missingId;
      }

      id = R.id.button_ok;
      TextView buttonOk = ViewBindings.findChildViewById(rootView, id);
      if (buttonOk == null) {
        break missingId;
      }

      id = R.id.camera_id;
      ImageView cameraId = ViewBindings.findChildViewById(rootView, id);
      if (cameraId == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.country_devise1;
      TextView countryDevise1 = ViewBindings.findChildViewById(rootView, id);
      if (countryDevise1 == null) {
        break missingId;
      }

      id = R.id.country_devise2;
      TextView countryDevise2 = ViewBindings.findChildViewById(rootView, id);
      if (countryDevise2 == null) {
        break missingId;
      }

      id = R.id.edit_description;
      MyEditText editDescription = ViewBindings.findChildViewById(rootView, id);
      if (editDescription == null) {
        break missingId;
      }

      id = R.id.edit_neighborhood;
      AutoCompleteTextView editNeighborhood = ViewBindings.findChildViewById(rootView, id);
      if (editNeighborhood == null) {
        break missingId;
      }

      id = R.id.edit_old_price;
      MyEditText editOldPrice = ViewBindings.findChildViewById(rootView, id);
      if (editOldPrice == null) {
        break missingId;
      }

      id = R.id.edit_price;
      MyEditText editPrice = ViewBindings.findChildViewById(rootView, id);
      if (editPrice == null) {
        break missingId;
      }

      id = R.id.edit_product_name;
      MyEditText editProductName = ViewBindings.findChildViewById(rootView, id);
      if (editProductName == null) {
        break missingId;
      }

      id = R.id.full_name;
      TextView fullName = ViewBindings.findChildViewById(rootView, id);
      if (fullName == null) {
        break missingId;
      }

      id = R.id.iv_video;
      ImageView ivVideo = ViewBindings.findChildViewById(rootView, id);
      if (ivVideo == null) {
        break missingId;
      }

      id = R.id.linLayout_add_photo;
      LinearLayout linLayoutAddPhoto = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAddPhoto == null) {
        break missingId;
      }

      id = R.id.menu_item;
      RelativeLayout menuItem = ViewBindings.findChildViewById(rootView, id);
      if (menuItem == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.number;
      TextView number = ViewBindings.findChildViewById(rootView, id);
      if (number == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.photos_max;
      TextView photosMax = ViewBindings.findChildViewById(rootView, id);
      if (photosMax == null) {
        break missingId;
      }

      id = R.id.profile_photo;
      CircleImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.pub_RecyclerView_photo;
      RecyclerView pubRecyclerViewPhoto = ViewBindings.findChildViewById(rootView, id);
      if (pubRecyclerViewPhoto == null) {
        break missingId;
      }

      id = R.id.recyclerIndicator;
      ScrollingPagerIndicator recyclerIndicator = ViewBindings.findChildViewById(rootView, id);
      if (recyclerIndicator == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      id = R.id.relLayout4;
      RelativeLayout relLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout4 == null) {
        break missingId;
      }

      id = R.id.relLayout51;
      RelativeLayout relLayout51 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout51 == null) {
        break missingId;
      }

      id = R.id.relLayout52;
      RelativeLayout relLayout52 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout52 == null) {
        break missingId;
      }

      id = R.id.relLayout6;
      RelativeLayout relLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout6 == null) {
        break missingId;
      }

      id = R.id.relLayout_arrowBack_choose_photo;
      RelativeLayout relLayoutArrowBackChoosePhoto = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutArrowBackChoosePhoto == null) {
        break missingId;
      }

      id = R.id.relLayout_button_ok;
      RelativeLayout relLayoutButtonOk = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonOk == null) {
        break missingId;
      }

      id = R.id.relLayout_category;
      RelativeLayout relLayoutCategory = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCategory == null) {
        break missingId;
      }

      id = R.id.relLayout_description;
      RelativeLayout relLayoutDescription = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutDescription == null) {
        break missingId;
      }

      id = R.id.relLayout_go_user_profile;
      RelativeLayout relLayoutGoUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutGoUserProfile == null) {
        break missingId;
      }

      id = R.id.relLayout_neighborhood;
      RelativeLayout relLayoutNeighborhood = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNeighborhood == null) {
        break missingId;
      }

      id = R.id.relLayout_old_price;
      RelativeLayout relLayoutOldPrice = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutOldPrice == null) {
        break missingId;
      }

      id = R.id.relLayout_photo;
      RelativeLayout relLayoutPhoto = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPhoto == null) {
        break missingId;
      }

      id = R.id.relLayout_pic_photo;
      RelativeLayout relLayoutPicPhoto = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPicPhoto == null) {
        break missingId;
      }

      id = R.id.relLayout_post;
      RelativeLayout relLayoutPost = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPost == null) {
        break missingId;
      }

      id = R.id.relLayout_post_product;
      RelativeLayout relLayoutPostProduct = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPostProduct == null) {
        break missingId;
      }

      id = R.id.relLayout_price;
      RelativeLayout relLayoutPrice = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPrice == null) {
        break missingId;
      }

      id = R.id.relLayout_product;
      RelativeLayout relLayoutProduct = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutProduct == null) {
        break missingId;
      }

      id = R.id.relLayout_profile;
      RelativeLayout relLayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutProfile == null) {
        break missingId;
      }

      id = R.id.relLayout_publish;
      RelativeLayout relLayoutPublish = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPublish == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.spinner_price;
      Spinner spinnerPrice = ViewBindings.findChildViewById(rootView, id);
      if (spinnerPrice == null) {
        break missingId;
      }

      id = R.id.text_publish;
      TextView textPublish = ViewBindings.findChildViewById(rootView, id);
      if (textPublish == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_text;
      TextView toolBarText = ViewBindings.findChildViewById(rootView, id);
      if (toolBarText == null) {
        break missingId;
      }

      id = R.id.toolBar_textview_choose_photo;
      TextView toolBarTextviewChoosePhoto = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTextviewChoosePhoto == null) {
        break missingId;
      }

      id = R.id.toolbar_choose_photo;
      Toolbar toolbarChoosePhoto = ViewBindings.findChildViewById(rootView, id);
      if (toolbarChoosePhoto == null) {
        break missingId;
      }

      id = R.id.txt_category;
      TextView txtCategory = ViewBindings.findChildViewById(rootView, id);
      if (txtCategory == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.view_bar;
      View viewBar = ViewBindings.findChildViewById(rootView, id);
      if (viewBar == null) {
        break missingId;
      }

      return new ActivityLocationPublicationBinding((RelativeLayout) rootView, arrowBack,
          arrowBackChoosePhoto, arrowDown, buttonOk, cameraId, close, countryDevise1,
          countryDevise2, editDescription, editNeighborhood, editOldPrice, editPrice,
          editProductName, fullName, ivVideo, linLayoutAddPhoto, menuItem, nestedScrollView, number,
          parent, photosMax, profilePhoto, progressBar, pubRecyclerViewPhoto, recyclerIndicator,
          recyclerView, relLayout, relLayout4, relLayout51, relLayout52, relLayout6,
          relLayoutArrowBackChoosePhoto, relLayoutButtonOk, relLayoutCategory, relLayoutDescription,
          relLayoutGoUserProfile, relLayoutNeighborhood, relLayoutOldPrice, relLayoutPhoto,
          relLayoutPicPhoto, relLayoutPost, relLayoutPostProduct, relLayoutPrice, relLayoutProduct,
          relLayoutProfile, relLayoutPublish, relLayoutViewOverlay, spinnerPrice, textPublish,
          toolBar, toolBarText, toolBarTextviewChoosePhoto, toolbarChoosePhoto, txtCategory,
          username, viewBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
