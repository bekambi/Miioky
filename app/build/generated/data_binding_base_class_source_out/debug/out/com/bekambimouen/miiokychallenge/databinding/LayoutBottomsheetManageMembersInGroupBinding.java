// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBottomsheetManageMembersInGroupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout close;

  @NonNull
  public final ImageView iconAdmin;

  @NonNull
  public final ImageView iconApproval;

  @NonNull
  public final ImageView iconLimitation;

  @NonNull
  public final ImageView iconModerator;

  @NonNull
  public final ImageView iconSuspended;

  @NonNull
  public final LinearLayout linLayoutActivateApprobation;

  @NonNull
  public final LinearLayout linLayoutAddLikeModerator;

  @NonNull
  public final LinearLayout linLayoutAddRulesInTheGroup;

  @NonNull
  public final LinearLayout linLayoutBanish;

  @NonNull
  public final LinearLayout linLayoutChangeGroupProfilePhoto;

  @NonNull
  public final LinearLayout linLayoutDeleteFromAdmin;

  @NonNull
  public final LinearLayout linLayoutInviteLikeAdmin;

  @NonNull
  public final LinearLayout linLayoutLimitMemberAction;

  @NonNull
  public final LinearLayout linLayoutSeeProfile;

  @NonNull
  public final LinearLayout linLayoutSendAMessage;

  @NonNull
  public final LinearLayout linLayoutSuspend;

  @NonNull
  public final TextView tvActivateApprobation;

  @NonNull
  public final TextView tvActivateBanish;

  @NonNull
  public final TextView tvAddLikeModerator;

  @NonNull
  public final TextView tvAddRulesInTheGroup;

  @NonNull
  public final TextView tvChangeGroupProfilePhoto;

  @NonNull
  public final TextView tvDeleteFromAdmin;

  @NonNull
  public final TextView tvInviteLikeAdmin;

  @NonNull
  public final TextView tvLimitMemberAction;

  @NonNull
  public final TextView tvLimitationActivityTitle;

  @NonNull
  public final TextView tvSeeProfile;

  @NonNull
  public final TextView tvSendAMessage;

  @NonNull
  public final TextView tvSuspend;

  @NonNull
  public final TextView username;

  private LayoutBottomsheetManageMembersInGroupBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout close, @NonNull ImageView iconAdmin, @NonNull ImageView iconApproval,
      @NonNull ImageView iconLimitation, @NonNull ImageView iconModerator,
      @NonNull ImageView iconSuspended, @NonNull LinearLayout linLayoutActivateApprobation,
      @NonNull LinearLayout linLayoutAddLikeModerator,
      @NonNull LinearLayout linLayoutAddRulesInTheGroup, @NonNull LinearLayout linLayoutBanish,
      @NonNull LinearLayout linLayoutChangeGroupProfilePhoto,
      @NonNull LinearLayout linLayoutDeleteFromAdmin,
      @NonNull LinearLayout linLayoutInviteLikeAdmin,
      @NonNull LinearLayout linLayoutLimitMemberAction, @NonNull LinearLayout linLayoutSeeProfile,
      @NonNull LinearLayout linLayoutSendAMessage, @NonNull LinearLayout linLayoutSuspend,
      @NonNull TextView tvActivateApprobation, @NonNull TextView tvActivateBanish,
      @NonNull TextView tvAddLikeModerator, @NonNull TextView tvAddRulesInTheGroup,
      @NonNull TextView tvChangeGroupProfilePhoto, @NonNull TextView tvDeleteFromAdmin,
      @NonNull TextView tvInviteLikeAdmin, @NonNull TextView tvLimitMemberAction,
      @NonNull TextView tvLimitationActivityTitle, @NonNull TextView tvSeeProfile,
      @NonNull TextView tvSendAMessage, @NonNull TextView tvSuspend, @NonNull TextView username) {
    this.rootView = rootView;
    this.close = close;
    this.iconAdmin = iconAdmin;
    this.iconApproval = iconApproval;
    this.iconLimitation = iconLimitation;
    this.iconModerator = iconModerator;
    this.iconSuspended = iconSuspended;
    this.linLayoutActivateApprobation = linLayoutActivateApprobation;
    this.linLayoutAddLikeModerator = linLayoutAddLikeModerator;
    this.linLayoutAddRulesInTheGroup = linLayoutAddRulesInTheGroup;
    this.linLayoutBanish = linLayoutBanish;
    this.linLayoutChangeGroupProfilePhoto = linLayoutChangeGroupProfilePhoto;
    this.linLayoutDeleteFromAdmin = linLayoutDeleteFromAdmin;
    this.linLayoutInviteLikeAdmin = linLayoutInviteLikeAdmin;
    this.linLayoutLimitMemberAction = linLayoutLimitMemberAction;
    this.linLayoutSeeProfile = linLayoutSeeProfile;
    this.linLayoutSendAMessage = linLayoutSendAMessage;
    this.linLayoutSuspend = linLayoutSuspend;
    this.tvActivateApprobation = tvActivateApprobation;
    this.tvActivateBanish = tvActivateBanish;
    this.tvAddLikeModerator = tvAddLikeModerator;
    this.tvAddRulesInTheGroup = tvAddRulesInTheGroup;
    this.tvChangeGroupProfilePhoto = tvChangeGroupProfilePhoto;
    this.tvDeleteFromAdmin = tvDeleteFromAdmin;
    this.tvInviteLikeAdmin = tvInviteLikeAdmin;
    this.tvLimitMemberAction = tvLimitMemberAction;
    this.tvLimitationActivityTitle = tvLimitationActivityTitle;
    this.tvSeeProfile = tvSeeProfile;
    this.tvSendAMessage = tvSendAMessage;
    this.tvSuspend = tvSuspend;
    this.username = username;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBottomsheetManageMembersInGroupBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBottomsheetManageMembersInGroupBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bottomsheet_manage_members_in_group, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBottomsheetManageMembersInGroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close;
      RelativeLayout close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.icon_admin;
      ImageView iconAdmin = ViewBindings.findChildViewById(rootView, id);
      if (iconAdmin == null) {
        break missingId;
      }

      id = R.id.icon_approval;
      ImageView iconApproval = ViewBindings.findChildViewById(rootView, id);
      if (iconApproval == null) {
        break missingId;
      }

      id = R.id.icon_limitation;
      ImageView iconLimitation = ViewBindings.findChildViewById(rootView, id);
      if (iconLimitation == null) {
        break missingId;
      }

      id = R.id.icon_moderator;
      ImageView iconModerator = ViewBindings.findChildViewById(rootView, id);
      if (iconModerator == null) {
        break missingId;
      }

      id = R.id.icon_suspended;
      ImageView iconSuspended = ViewBindings.findChildViewById(rootView, id);
      if (iconSuspended == null) {
        break missingId;
      }

      id = R.id.linLayout_activate_approbation;
      LinearLayout linLayoutActivateApprobation = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutActivateApprobation == null) {
        break missingId;
      }

      id = R.id.linLayout_add_like_moderator;
      LinearLayout linLayoutAddLikeModerator = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAddLikeModerator == null) {
        break missingId;
      }

      id = R.id.linLayout_add_rules_in_the_group;
      LinearLayout linLayoutAddRulesInTheGroup = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAddRulesInTheGroup == null) {
        break missingId;
      }

      id = R.id.linLayout_banish;
      LinearLayout linLayoutBanish = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutBanish == null) {
        break missingId;
      }

      id = R.id.linLayout_change_group_profile_photo;
      LinearLayout linLayoutChangeGroupProfilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutChangeGroupProfilePhoto == null) {
        break missingId;
      }

      id = R.id.linLayout_delete_from_admin;
      LinearLayout linLayoutDeleteFromAdmin = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutDeleteFromAdmin == null) {
        break missingId;
      }

      id = R.id.linLayout_invite_like_admin;
      LinearLayout linLayoutInviteLikeAdmin = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutInviteLikeAdmin == null) {
        break missingId;
      }

      id = R.id.linLayout_limit_member_action;
      LinearLayout linLayoutLimitMemberAction = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutLimitMemberAction == null) {
        break missingId;
      }

      id = R.id.linLayout_see_profile;
      LinearLayout linLayoutSeeProfile = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutSeeProfile == null) {
        break missingId;
      }

      id = R.id.linLayout_send_a_message;
      LinearLayout linLayoutSendAMessage = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutSendAMessage == null) {
        break missingId;
      }

      id = R.id.linLayout_suspend;
      LinearLayout linLayoutSuspend = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutSuspend == null) {
        break missingId;
      }

      id = R.id.tv_activate_approbation;
      TextView tvActivateApprobation = ViewBindings.findChildViewById(rootView, id);
      if (tvActivateApprobation == null) {
        break missingId;
      }

      id = R.id.tv_activate_banish;
      TextView tvActivateBanish = ViewBindings.findChildViewById(rootView, id);
      if (tvActivateBanish == null) {
        break missingId;
      }

      id = R.id.tv_add_like_moderator;
      TextView tvAddLikeModerator = ViewBindings.findChildViewById(rootView, id);
      if (tvAddLikeModerator == null) {
        break missingId;
      }

      id = R.id.tv_add_rules_in_the_group;
      TextView tvAddRulesInTheGroup = ViewBindings.findChildViewById(rootView, id);
      if (tvAddRulesInTheGroup == null) {
        break missingId;
      }

      id = R.id.tv_change_group_profile_photo;
      TextView tvChangeGroupProfilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (tvChangeGroupProfilePhoto == null) {
        break missingId;
      }

      id = R.id.tv_delete_from_admin;
      TextView tvDeleteFromAdmin = ViewBindings.findChildViewById(rootView, id);
      if (tvDeleteFromAdmin == null) {
        break missingId;
      }

      id = R.id.tv_invite_like_admin;
      TextView tvInviteLikeAdmin = ViewBindings.findChildViewById(rootView, id);
      if (tvInviteLikeAdmin == null) {
        break missingId;
      }

      id = R.id.tv_limit_member_action;
      TextView tvLimitMemberAction = ViewBindings.findChildViewById(rootView, id);
      if (tvLimitMemberAction == null) {
        break missingId;
      }

      id = R.id.tv_limitation_activity_title;
      TextView tvLimitationActivityTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvLimitationActivityTitle == null) {
        break missingId;
      }

      id = R.id.tv_see_profile;
      TextView tvSeeProfile = ViewBindings.findChildViewById(rootView, id);
      if (tvSeeProfile == null) {
        break missingId;
      }

      id = R.id.tv_send_a_message;
      TextView tvSendAMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvSendAMessage == null) {
        break missingId;
      }

      id = R.id.tv_suspend;
      TextView tvSuspend = ViewBindings.findChildViewById(rootView, id);
      if (tvSuspend == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new LayoutBottomsheetManageMembersInGroupBinding((LinearLayout) rootView, close,
          iconAdmin, iconApproval, iconLimitation, iconModerator, iconSuspended,
          linLayoutActivateApprobation, linLayoutAddLikeModerator, linLayoutAddRulesInTheGroup,
          linLayoutBanish, linLayoutChangeGroupProfilePhoto, linLayoutDeleteFromAdmin,
          linLayoutInviteLikeAdmin, linLayoutLimitMemberAction, linLayoutSeeProfile,
          linLayoutSendAMessage, linLayoutSuspend, tvActivateApprobation, tvActivateBanish,
          tvAddLikeModerator, tvAddRulesInTheGroup, tvChangeGroupProfilePhoto, tvDeleteFromAdmin,
          tvInviteLikeAdmin, tvLimitMemberAction, tvLimitationActivityTitle, tvSeeProfile,
          tvSendAMessage, tvSuspend, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
