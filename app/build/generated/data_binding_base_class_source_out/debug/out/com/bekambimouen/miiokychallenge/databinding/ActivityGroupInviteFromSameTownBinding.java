// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupInviteFromSameTownBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final ImageView close;

  @NonNull
  public final ImageView imageView1;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final LinearLayout linLayoutScrollView;

  @NonNull
  public final LinearLayout parent;

  @NonNull
  public final RelativeLayout relLayoutSuggestions;

  @NonNull
  public final RelativeLayout relLayoutTown;

  @NonNull
  public final RelativeLayout relLayoutVillage;

  @NonNull
  public final HorizontalScrollView scrollView;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarTextview;

  @NonNull
  public final TextView tvSuggestions;

  @NonNull
  public final TextView tvTown;

  @NonNull
  public final TextView tvVillage;

  @NonNull
  public final ViewPager2 viewPager;

  private ActivityGroupInviteFromSameTownBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull ImageView close, @NonNull ImageView imageView1,
      @NonNull ImageView imageView2, @NonNull LinearLayout linLayoutScrollView,
      @NonNull LinearLayout parent, @NonNull RelativeLayout relLayoutSuggestions,
      @NonNull RelativeLayout relLayoutTown, @NonNull RelativeLayout relLayoutVillage,
      @NonNull HorizontalScrollView scrollView, @NonNull Toolbar toolBar,
      @NonNull TextView toolBarTextview, @NonNull TextView tvSuggestions, @NonNull TextView tvTown,
      @NonNull TextView tvVillage, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.close = close;
    this.imageView1 = imageView1;
    this.imageView2 = imageView2;
    this.linLayoutScrollView = linLayoutScrollView;
    this.parent = parent;
    this.relLayoutSuggestions = relLayoutSuggestions;
    this.relLayoutTown = relLayoutTown;
    this.relLayoutVillage = relLayoutVillage;
    this.scrollView = scrollView;
    this.toolBar = toolBar;
    this.toolBarTextview = toolBarTextview;
    this.tvSuggestions = tvSuggestions;
    this.tvTown = tvTown;
    this.tvVillage = tvVillage;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupInviteFromSameTownBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupInviteFromSameTownBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_invite_from_same_town, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupInviteFromSameTownBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.imageView1;
      ImageView imageView1 = ViewBindings.findChildViewById(rootView, id);
      if (imageView1 == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.linLayout_scrollView;
      LinearLayout linLayoutScrollView = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutScrollView == null) {
        break missingId;
      }

      LinearLayout parent = (LinearLayout) rootView;

      id = R.id.relLayout_suggestions;
      RelativeLayout relLayoutSuggestions = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSuggestions == null) {
        break missingId;
      }

      id = R.id.relLayout_town;
      RelativeLayout relLayoutTown = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutTown == null) {
        break missingId;
      }

      id = R.id.relLayout_village;
      RelativeLayout relLayoutVillage = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutVillage == null) {
        break missingId;
      }

      id = R.id.scrollView;
      HorizontalScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_textview;
      TextView toolBarTextview = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTextview == null) {
        break missingId;
      }

      id = R.id.tv_suggestions;
      TextView tvSuggestions = ViewBindings.findChildViewById(rootView, id);
      if (tvSuggestions == null) {
        break missingId;
      }

      id = R.id.tv_town;
      TextView tvTown = ViewBindings.findChildViewById(rootView, id);
      if (tvTown == null) {
        break missingId;
      }

      id = R.id.tv_village;
      TextView tvVillage = ViewBindings.findChildViewById(rootView, id);
      if (tvVillage == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityGroupInviteFromSameTownBinding((LinearLayout) rootView, arrowBack, close,
          imageView1, imageView2, linLayoutScrollView, parent, relLayoutSuggestions, relLayoutTown,
          relLayoutVillage, scrollView, toolBar, toolBarTextview, tvSuggestions, tvTown, tvVillage,
          viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
