// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPubCommentTextBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final ImageView close;

  @NonNull
  public final MyEditText editComment;

  @NonNull
  public final CardView gradientBlack;

  @NonNull
  public final CardView gradientBlue;

  @NonNull
  public final CardView gradientBlueGreen;

  @NonNull
  public final CardView gradientBrown;

  @NonNull
  public final CardView gradientDarkViolet;

  @NonNull
  public final CardView gradientDarkredBlackBlueShinning;

  @NonNull
  public final CardView gradientPink;

  @NonNull
  public final CardView gradientPrimaryAndDarkViolet;

  @NonNull
  public final CardView gradientRed;

  @NonNull
  public final CardView gradientShinningBlueDarkredChinningBlue;

  @NonNull
  public final CardView gradientShinningBlueDarkredPink;

  @NonNull
  public final CardView gradientVertwhatsapp;

  @NonNull
  public final CardView gradientYellowPinkDarkViolet;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout linLayoutCameraPhoto;

  @NonNull
  public final LinearLayout linLayoutCameraVideo;

  @NonNull
  public final LinearLayout linLayoutNberCharSequence;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final TextView nberCharSequence;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final CircleImageView profilePhoto;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RelativeLayout relLayoutEdittextCadre;

  @NonNull
  public final RelativeLayout relLayoutGoUserProfile;

  @NonNull
  public final RelativeLayout relLayoutIcons;

  @NonNull
  public final RelativeLayout relLayoutProfile;

  @NonNull
  public final RelativeLayout relLayoutPublish;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final TextView textPublish;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarText;

  @NonNull
  public final TextView username;

  private ActivityPubCommentTextBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull ImageView close, @NonNull MyEditText editComment,
      @NonNull CardView gradientBlack, @NonNull CardView gradientBlue,
      @NonNull CardView gradientBlueGreen, @NonNull CardView gradientBrown,
      @NonNull CardView gradientDarkViolet, @NonNull CardView gradientDarkredBlackBlueShinning,
      @NonNull CardView gradientPink, @NonNull CardView gradientPrimaryAndDarkViolet,
      @NonNull CardView gradientRed, @NonNull CardView gradientShinningBlueDarkredChinningBlue,
      @NonNull CardView gradientShinningBlueDarkredPink, @NonNull CardView gradientVertwhatsapp,
      @NonNull CardView gradientYellowPinkDarkViolet, @NonNull ImageView imageView,
      @NonNull LinearLayout linLayoutCameraPhoto, @NonNull LinearLayout linLayoutCameraVideo,
      @NonNull LinearLayout linLayoutNberCharSequence, @NonNull RelativeLayout main,
      @NonNull TextView nberCharSequence, @NonNull TouchDetectableScrollView nestedScrollView,
      @NonNull CircleImageView profilePhoto, @NonNull ProgressBar progressBar,
      @NonNull RelativeLayout relLayoutEdittextCadre,
      @NonNull RelativeLayout relLayoutGoUserProfile, @NonNull RelativeLayout relLayoutIcons,
      @NonNull RelativeLayout relLayoutProfile, @NonNull RelativeLayout relLayoutPublish,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull TextView textPublish,
      @NonNull Toolbar toolBar, @NonNull TextView toolBarText, @NonNull TextView username) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.close = close;
    this.editComment = editComment;
    this.gradientBlack = gradientBlack;
    this.gradientBlue = gradientBlue;
    this.gradientBlueGreen = gradientBlueGreen;
    this.gradientBrown = gradientBrown;
    this.gradientDarkViolet = gradientDarkViolet;
    this.gradientDarkredBlackBlueShinning = gradientDarkredBlackBlueShinning;
    this.gradientPink = gradientPink;
    this.gradientPrimaryAndDarkViolet = gradientPrimaryAndDarkViolet;
    this.gradientRed = gradientRed;
    this.gradientShinningBlueDarkredChinningBlue = gradientShinningBlueDarkredChinningBlue;
    this.gradientShinningBlueDarkredPink = gradientShinningBlueDarkredPink;
    this.gradientVertwhatsapp = gradientVertwhatsapp;
    this.gradientYellowPinkDarkViolet = gradientYellowPinkDarkViolet;
    this.imageView = imageView;
    this.linLayoutCameraPhoto = linLayoutCameraPhoto;
    this.linLayoutCameraVideo = linLayoutCameraVideo;
    this.linLayoutNberCharSequence = linLayoutNberCharSequence;
    this.main = main;
    this.nberCharSequence = nberCharSequence;
    this.nestedScrollView = nestedScrollView;
    this.profilePhoto = profilePhoto;
    this.progressBar = progressBar;
    this.relLayoutEdittextCadre = relLayoutEdittextCadre;
    this.relLayoutGoUserProfile = relLayoutGoUserProfile;
    this.relLayoutIcons = relLayoutIcons;
    this.relLayoutProfile = relLayoutProfile;
    this.relLayoutPublish = relLayoutPublish;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.textPublish = textPublish;
    this.toolBar = toolBar;
    this.toolBarText = toolBarText;
    this.username = username;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPubCommentTextBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPubCommentTextBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pub_comment_text, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPubCommentTextBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.edit_comment;
      MyEditText editComment = ViewBindings.findChildViewById(rootView, id);
      if (editComment == null) {
        break missingId;
      }

      id = R.id.gradient_black;
      CardView gradientBlack = ViewBindings.findChildViewById(rootView, id);
      if (gradientBlack == null) {
        break missingId;
      }

      id = R.id.gradient_blue;
      CardView gradientBlue = ViewBindings.findChildViewById(rootView, id);
      if (gradientBlue == null) {
        break missingId;
      }

      id = R.id.gradient_blue_green;
      CardView gradientBlueGreen = ViewBindings.findChildViewById(rootView, id);
      if (gradientBlueGreen == null) {
        break missingId;
      }

      id = R.id.gradient_brown;
      CardView gradientBrown = ViewBindings.findChildViewById(rootView, id);
      if (gradientBrown == null) {
        break missingId;
      }

      id = R.id.gradient_dark_violet;
      CardView gradientDarkViolet = ViewBindings.findChildViewById(rootView, id);
      if (gradientDarkViolet == null) {
        break missingId;
      }

      id = R.id.gradient_darkred_black_blue_shinning;
      CardView gradientDarkredBlackBlueShinning = ViewBindings.findChildViewById(rootView, id);
      if (gradientDarkredBlackBlueShinning == null) {
        break missingId;
      }

      id = R.id.gradient_pink;
      CardView gradientPink = ViewBindings.findChildViewById(rootView, id);
      if (gradientPink == null) {
        break missingId;
      }

      id = R.id.gradient_primary_and_dark_violet;
      CardView gradientPrimaryAndDarkViolet = ViewBindings.findChildViewById(rootView, id);
      if (gradientPrimaryAndDarkViolet == null) {
        break missingId;
      }

      id = R.id.gradient_red;
      CardView gradientRed = ViewBindings.findChildViewById(rootView, id);
      if (gradientRed == null) {
        break missingId;
      }

      id = R.id.gradient_shinning_blue_darkred_chinning_blue;
      CardView gradientShinningBlueDarkredChinningBlue = ViewBindings.findChildViewById(rootView, id);
      if (gradientShinningBlueDarkredChinningBlue == null) {
        break missingId;
      }

      id = R.id.gradient_shinning_blue_darkred_pink;
      CardView gradientShinningBlueDarkredPink = ViewBindings.findChildViewById(rootView, id);
      if (gradientShinningBlueDarkredPink == null) {
        break missingId;
      }

      id = R.id.gradient_vertwhatsapp;
      CardView gradientVertwhatsapp = ViewBindings.findChildViewById(rootView, id);
      if (gradientVertwhatsapp == null) {
        break missingId;
      }

      id = R.id.gradient_yellow_pink_dark_violet;
      CardView gradientYellowPinkDarkViolet = ViewBindings.findChildViewById(rootView, id);
      if (gradientYellowPinkDarkViolet == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linLayout_camera_photo;
      LinearLayout linLayoutCameraPhoto = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutCameraPhoto == null) {
        break missingId;
      }

      id = R.id.linLayout_camera_video;
      LinearLayout linLayoutCameraVideo = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutCameraVideo == null) {
        break missingId;
      }

      id = R.id.linLayout_nber_char_sequence;
      LinearLayout linLayoutNberCharSequence = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutNberCharSequence == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.nber_char_sequence;
      TextView nberCharSequence = ViewBindings.findChildViewById(rootView, id);
      if (nberCharSequence == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.profile_photo;
      CircleImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.relLayout_edittext_cadre;
      RelativeLayout relLayoutEdittextCadre = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutEdittextCadre == null) {
        break missingId;
      }

      id = R.id.relLayout_go_user_profile;
      RelativeLayout relLayoutGoUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutGoUserProfile == null) {
        break missingId;
      }

      id = R.id.relLayout_icons;
      RelativeLayout relLayoutIcons = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutIcons == null) {
        break missingId;
      }

      id = R.id.relLayout_profile;
      RelativeLayout relLayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutProfile == null) {
        break missingId;
      }

      id = R.id.relLayout_publish;
      RelativeLayout relLayoutPublish = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPublish == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.text_publish;
      TextView textPublish = ViewBindings.findChildViewById(rootView, id);
      if (textPublish == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_text;
      TextView toolBarText = ViewBindings.findChildViewById(rootView, id);
      if (toolBarText == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ActivityPubCommentTextBinding((RelativeLayout) rootView, arrowBack, close,
          editComment, gradientBlack, gradientBlue, gradientBlueGreen, gradientBrown,
          gradientDarkViolet, gradientDarkredBlackBlueShinning, gradientPink,
          gradientPrimaryAndDarkViolet, gradientRed, gradientShinningBlueDarkredChinningBlue,
          gradientShinningBlueDarkredPink, gradientVertwhatsapp, gradientYellowPinkDarkViolet,
          imageView, linLayoutCameraPhoto, linLayoutCameraVideo, linLayoutNberCharSequence, main,
          nberCharSequence, nestedScrollView, profilePhoto, progressBar, relLayoutEdittextCadre,
          relLayoutGoUserProfile, relLayoutIcons, relLayoutProfile, relLayoutPublish,
          relLayoutViewOverlay, textPublish, toolBar, toolBarText, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
