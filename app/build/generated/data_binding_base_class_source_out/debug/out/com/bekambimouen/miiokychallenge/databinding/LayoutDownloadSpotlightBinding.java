// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutDownloadSpotlightBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText addTitle;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final CircleImageView coverPhoto;

  @NonNull
  public final TextView number;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewSelectedView;

  @NonNull
  public final LinearLayout relLayoutCover;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView tvEnd;

  private LayoutDownloadSpotlightBinding(@NonNull RelativeLayout rootView,
      @NonNull EditText addTitle, @NonNull RelativeLayout arrowBack,
      @NonNull CircleImageView coverPhoto, @NonNull TextView number,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView recyclerViewSelectedView,
      @NonNull LinearLayout relLayoutCover, @NonNull Toolbar toolBar, @NonNull TextView tvEnd) {
    this.rootView = rootView;
    this.addTitle = addTitle;
    this.arrowBack = arrowBack;
    this.coverPhoto = coverPhoto;
    this.number = number;
    this.progressBar = progressBar;
    this.recyclerViewSelectedView = recyclerViewSelectedView;
    this.relLayoutCover = relLayoutCover;
    this.toolBar = toolBar;
    this.tvEnd = tvEnd;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutDownloadSpotlightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutDownloadSpotlightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_download_spotlight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutDownloadSpotlightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_title;
      EditText addTitle = ViewBindings.findChildViewById(rootView, id);
      if (addTitle == null) {
        break missingId;
      }

      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.cover_photo;
      CircleImageView coverPhoto = ViewBindings.findChildViewById(rootView, id);
      if (coverPhoto == null) {
        break missingId;
      }

      id = R.id.number;
      TextView number = ViewBindings.findChildViewById(rootView, id);
      if (number == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerView_selected_view;
      RecyclerView recyclerViewSelectedView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewSelectedView == null) {
        break missingId;
      }

      id = R.id.relLayout_cover;
      LinearLayout relLayoutCover = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCover == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.tv_end;
      TextView tvEnd = ViewBindings.findChildViewById(rootView, id);
      if (tvEnd == null) {
        break missingId;
      }

      return new LayoutDownloadSpotlightBinding((RelativeLayout) rootView, addTitle, arrowBack,
          coverPhoto, number, progressBar, recyclerViewSelectedView, relLayoutCover, toolBar,
          tvEnd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
