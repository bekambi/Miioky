// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutGroupHeaderGroupPublicViewProfileDiscoverBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView boutonQuitter;

  @NonNull
  public final TextView boutonRejoindre;

  @NonNull
  public final TextView boutonRejoindreNotMember;

  @NonNull
  public final TextView btnInvite;

  @NonNull
  public final TextView dateGroupCreation;

  @NonNull
  public final TextView groupMsg;

  @NonNull
  public final TextView groupName;

  @NonNull
  public final ImageView iconsEye;

  @NonNull
  public final ImageView iconsTime;

  @NonNull
  public final ImageView iconsWorld;

  @NonNull
  public final LinearLayout linLayoutAbout;

  @NonNull
  public final LinearLayout linLayoutButtons;

  @NonNull
  public final LinearLayout parent;

  @NonNull
  public final TextView privatePublic;

  @NonNull
  public final ImageView profilePhoto;

  @NonNull
  public final CircleImageView profilePhotoYou;

  @NonNull
  public final RelativeLayout relLayoutButtons;

  @NonNull
  public final RelativeLayout relLayoutGoAboutClass;

  @NonNull
  public final RelativeLayout relLayoutGoGroupHistory;

  @NonNull
  public final RelativeLayout relLayoutInvite;

  @NonNull
  public final RelativeLayout relLayoutMember;

  @NonNull
  public final RelativeLayout relLayoutMemberButton;

  @NonNull
  public final RelativeLayout relLayoutNotMember;

  @NonNull
  public final RelativeLayout relLayoutYou;

  @NonNull
  public final RelativeLayout relayoutProfile;

  @NonNull
  public final HorizontalScrollView scrollView;

  @NonNull
  public final HorizontalScrollView scrollViewNotMember;

  @NonNull
  public final RelativeLayout seeOnlyPhotos;

  @NonNull
  public final RelativeLayout seeOnlyPhotosNotMember;

  @NonNull
  public final RelativeLayout seeOnlyVideos;

  @NonNull
  public final RelativeLayout seeOnlyVideosNotMember;

  @NonNull
  public final TextView totalMembers;

  private LayoutGroupHeaderGroupPublicViewProfileDiscoverBinding(@NonNull LinearLayout rootView,
      @NonNull TextView boutonQuitter, @NonNull TextView boutonRejoindre,
      @NonNull TextView boutonRejoindreNotMember, @NonNull TextView btnInvite,
      @NonNull TextView dateGroupCreation, @NonNull TextView groupMsg, @NonNull TextView groupName,
      @NonNull ImageView iconsEye, @NonNull ImageView iconsTime, @NonNull ImageView iconsWorld,
      @NonNull LinearLayout linLayoutAbout, @NonNull LinearLayout linLayoutButtons,
      @NonNull LinearLayout parent, @NonNull TextView privatePublic,
      @NonNull ImageView profilePhoto, @NonNull CircleImageView profilePhotoYou,
      @NonNull RelativeLayout relLayoutButtons, @NonNull RelativeLayout relLayoutGoAboutClass,
      @NonNull RelativeLayout relLayoutGoGroupHistory, @NonNull RelativeLayout relLayoutInvite,
      @NonNull RelativeLayout relLayoutMember, @NonNull RelativeLayout relLayoutMemberButton,
      @NonNull RelativeLayout relLayoutNotMember, @NonNull RelativeLayout relLayoutYou,
      @NonNull RelativeLayout relayoutProfile, @NonNull HorizontalScrollView scrollView,
      @NonNull HorizontalScrollView scrollViewNotMember, @NonNull RelativeLayout seeOnlyPhotos,
      @NonNull RelativeLayout seeOnlyPhotosNotMember, @NonNull RelativeLayout seeOnlyVideos,
      @NonNull RelativeLayout seeOnlyVideosNotMember, @NonNull TextView totalMembers) {
    this.rootView = rootView;
    this.boutonQuitter = boutonQuitter;
    this.boutonRejoindre = boutonRejoindre;
    this.boutonRejoindreNotMember = boutonRejoindreNotMember;
    this.btnInvite = btnInvite;
    this.dateGroupCreation = dateGroupCreation;
    this.groupMsg = groupMsg;
    this.groupName = groupName;
    this.iconsEye = iconsEye;
    this.iconsTime = iconsTime;
    this.iconsWorld = iconsWorld;
    this.linLayoutAbout = linLayoutAbout;
    this.linLayoutButtons = linLayoutButtons;
    this.parent = parent;
    this.privatePublic = privatePublic;
    this.profilePhoto = profilePhoto;
    this.profilePhotoYou = profilePhotoYou;
    this.relLayoutButtons = relLayoutButtons;
    this.relLayoutGoAboutClass = relLayoutGoAboutClass;
    this.relLayoutGoGroupHistory = relLayoutGoGroupHistory;
    this.relLayoutInvite = relLayoutInvite;
    this.relLayoutMember = relLayoutMember;
    this.relLayoutMemberButton = relLayoutMemberButton;
    this.relLayoutNotMember = relLayoutNotMember;
    this.relLayoutYou = relLayoutYou;
    this.relayoutProfile = relayoutProfile;
    this.scrollView = scrollView;
    this.scrollViewNotMember = scrollViewNotMember;
    this.seeOnlyPhotos = seeOnlyPhotos;
    this.seeOnlyPhotosNotMember = seeOnlyPhotosNotMember;
    this.seeOnlyVideos = seeOnlyVideos;
    this.seeOnlyVideosNotMember = seeOnlyVideosNotMember;
    this.totalMembers = totalMembers;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutGroupHeaderGroupPublicViewProfileDiscoverBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutGroupHeaderGroupPublicViewProfileDiscoverBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_group_header_group_public_view_profile_discover, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutGroupHeaderGroupPublicViewProfileDiscoverBinding bind(
      @NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bouton_quitter;
      TextView boutonQuitter = ViewBindings.findChildViewById(rootView, id);
      if (boutonQuitter == null) {
        break missingId;
      }

      id = R.id.bouton_rejoindre;
      TextView boutonRejoindre = ViewBindings.findChildViewById(rootView, id);
      if (boutonRejoindre == null) {
        break missingId;
      }

      id = R.id.bouton_rejoindre_not_member;
      TextView boutonRejoindreNotMember = ViewBindings.findChildViewById(rootView, id);
      if (boutonRejoindreNotMember == null) {
        break missingId;
      }

      id = R.id.btn_invite;
      TextView btnInvite = ViewBindings.findChildViewById(rootView, id);
      if (btnInvite == null) {
        break missingId;
      }

      id = R.id.date_group_creation;
      TextView dateGroupCreation = ViewBindings.findChildViewById(rootView, id);
      if (dateGroupCreation == null) {
        break missingId;
      }

      id = R.id.group_msg;
      TextView groupMsg = ViewBindings.findChildViewById(rootView, id);
      if (groupMsg == null) {
        break missingId;
      }

      id = R.id.group_name;
      TextView groupName = ViewBindings.findChildViewById(rootView, id);
      if (groupName == null) {
        break missingId;
      }

      id = R.id.icons_eye;
      ImageView iconsEye = ViewBindings.findChildViewById(rootView, id);
      if (iconsEye == null) {
        break missingId;
      }

      id = R.id.icons_time;
      ImageView iconsTime = ViewBindings.findChildViewById(rootView, id);
      if (iconsTime == null) {
        break missingId;
      }

      id = R.id.icons_world;
      ImageView iconsWorld = ViewBindings.findChildViewById(rootView, id);
      if (iconsWorld == null) {
        break missingId;
      }

      id = R.id.linLayout_about;
      LinearLayout linLayoutAbout = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAbout == null) {
        break missingId;
      }

      id = R.id.linLayout_buttons;
      LinearLayout linLayoutButtons = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutButtons == null) {
        break missingId;
      }

      LinearLayout parent = (LinearLayout) rootView;

      id = R.id.private_public;
      TextView privatePublic = ViewBindings.findChildViewById(rootView, id);
      if (privatePublic == null) {
        break missingId;
      }

      id = R.id.profile_photo;
      ImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.profile_photo_you;
      CircleImageView profilePhotoYou = ViewBindings.findChildViewById(rootView, id);
      if (profilePhotoYou == null) {
        break missingId;
      }

      id = R.id.relLayout_buttons;
      RelativeLayout relLayoutButtons = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtons == null) {
        break missingId;
      }

      id = R.id.relLayout_go_about_class;
      RelativeLayout relLayoutGoAboutClass = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutGoAboutClass == null) {
        break missingId;
      }

      id = R.id.relLayout_go_group_history;
      RelativeLayout relLayoutGoGroupHistory = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutGoGroupHistory == null) {
        break missingId;
      }

      id = R.id.relLayout_invite;
      RelativeLayout relLayoutInvite = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutInvite == null) {
        break missingId;
      }

      id = R.id.relLayout_member;
      RelativeLayout relLayoutMember = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMember == null) {
        break missingId;
      }

      id = R.id.relLayout_member_button;
      RelativeLayout relLayoutMemberButton = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMemberButton == null) {
        break missingId;
      }

      id = R.id.relLayout_not_member;
      RelativeLayout relLayoutNotMember = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNotMember == null) {
        break missingId;
      }

      id = R.id.relLayout_you;
      RelativeLayout relLayoutYou = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutYou == null) {
        break missingId;
      }

      id = R.id.relayout_profile;
      RelativeLayout relayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (relayoutProfile == null) {
        break missingId;
      }

      id = R.id.scrollView;
      HorizontalScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.scrollView_not_member;
      HorizontalScrollView scrollViewNotMember = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewNotMember == null) {
        break missingId;
      }

      id = R.id.see_only_photos;
      RelativeLayout seeOnlyPhotos = ViewBindings.findChildViewById(rootView, id);
      if (seeOnlyPhotos == null) {
        break missingId;
      }

      id = R.id.see_only_photos_not_member;
      RelativeLayout seeOnlyPhotosNotMember = ViewBindings.findChildViewById(rootView, id);
      if (seeOnlyPhotosNotMember == null) {
        break missingId;
      }

      id = R.id.see_only_videos;
      RelativeLayout seeOnlyVideos = ViewBindings.findChildViewById(rootView, id);
      if (seeOnlyVideos == null) {
        break missingId;
      }

      id = R.id.see_only_videos_not_member;
      RelativeLayout seeOnlyVideosNotMember = ViewBindings.findChildViewById(rootView, id);
      if (seeOnlyVideosNotMember == null) {
        break missingId;
      }

      id = R.id.total_members;
      TextView totalMembers = ViewBindings.findChildViewById(rootView, id);
      if (totalMembers == null) {
        break missingId;
      }

      return new LayoutGroupHeaderGroupPublicViewProfileDiscoverBinding((LinearLayout) rootView,
          boutonQuitter, boutonRejoindre, boutonRejoindreNotMember, btnInvite, dateGroupCreation,
          groupMsg, groupName, iconsEye, iconsTime, iconsWorld, linLayoutAbout, linLayoutButtons,
          parent, privatePublic, profilePhoto, profilePhotoYou, relLayoutButtons,
          relLayoutGoAboutClass, relLayoutGoGroupHistory, relLayoutInvite, relLayoutMember,
          relLayoutMemberButton, relLayoutNotMember, relLayoutYou, relayoutProfile, scrollView,
          scrollViewNotMember, seeOnlyPhotos, seeOnlyPhotosNotMember, seeOnlyVideos,
          seeOnlyVideosNotMember, totalMembers);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
