// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupManegeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView1;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final ImageView close;

  @NonNull
  public final ImageView imagePlayPause;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageViewAddRules;

  @NonNull
  public final LinearLayout linLayoutDeleteGroup;

  @NonNull
  public final LinearLayout linLayoutLeaveGroup;

  @NonNull
  public final LinearLayout linLayoutPutInPause;

  @NonNull
  public final TextView membershipRequestNumber;

  @NonNull
  public final TextView membershipRequestNumberToday;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final ImageView profilePhoto;

  @NonNull
  public final RelativeLayout relLayoutAddRulesInTheGroup;

  @NonNull
  public final RelativeLayout relLayoutMembershipRequest;

  @NonNull
  public final RelativeLayout relLayoutReportPost;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final RelativeLayout relLayoutWaitingApproval;

  @NonNull
  public final TextView reportPostNumber;

  @NonNull
  public final TextView reportPostNumberToday;

  @NonNull
  public final TextView text1;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarGroupName;

  @NonNull
  public final TextView tvPutOnPause;

  @NonNull
  public final TextView waitingApprobationNumber;

  @NonNull
  public final TextView waitingApprobationNumberToday;

  private ActivityGroupManegeBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull CardView cardView, @NonNull CardView cardView1,
      @NonNull CardView cardView2, @NonNull ImageView close, @NonNull ImageView imagePlayPause,
      @NonNull ImageView imageView, @NonNull ImageView imageView2, @NonNull ImageView imageView3,
      @NonNull ImageView imageViewAddRules, @NonNull LinearLayout linLayoutDeleteGroup,
      @NonNull LinearLayout linLayoutLeaveGroup, @NonNull LinearLayout linLayoutPutInPause,
      @NonNull TextView membershipRequestNumber, @NonNull TextView membershipRequestNumberToday,
      @NonNull RelativeLayout parent, @NonNull ImageView profilePhoto,
      @NonNull RelativeLayout relLayoutAddRulesInTheGroup,
      @NonNull RelativeLayout relLayoutMembershipRequest,
      @NonNull RelativeLayout relLayoutReportPost, @NonNull RelativeLayout relLayoutViewOverlay,
      @NonNull RelativeLayout relLayoutWaitingApproval, @NonNull TextView reportPostNumber,
      @NonNull TextView reportPostNumberToday, @NonNull TextView text1, @NonNull Toolbar toolBar,
      @NonNull TextView toolBarGroupName, @NonNull TextView tvPutOnPause,
      @NonNull TextView waitingApprobationNumber, @NonNull TextView waitingApprobationNumberToday) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.cardView = cardView;
    this.cardView1 = cardView1;
    this.cardView2 = cardView2;
    this.close = close;
    this.imagePlayPause = imagePlayPause;
    this.imageView = imageView;
    this.imageView2 = imageView2;
    this.imageView3 = imageView3;
    this.imageViewAddRules = imageViewAddRules;
    this.linLayoutDeleteGroup = linLayoutDeleteGroup;
    this.linLayoutLeaveGroup = linLayoutLeaveGroup;
    this.linLayoutPutInPause = linLayoutPutInPause;
    this.membershipRequestNumber = membershipRequestNumber;
    this.membershipRequestNumberToday = membershipRequestNumberToday;
    this.parent = parent;
    this.profilePhoto = profilePhoto;
    this.relLayoutAddRulesInTheGroup = relLayoutAddRulesInTheGroup;
    this.relLayoutMembershipRequest = relLayoutMembershipRequest;
    this.relLayoutReportPost = relLayoutReportPost;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.relLayoutWaitingApproval = relLayoutWaitingApproval;
    this.reportPostNumber = reportPostNumber;
    this.reportPostNumberToday = reportPostNumberToday;
    this.text1 = text1;
    this.toolBar = toolBar;
    this.toolBarGroupName = toolBarGroupName;
    this.tvPutOnPause = tvPutOnPause;
    this.waitingApprobationNumber = waitingApprobationNumber;
    this.waitingApprobationNumberToday = waitingApprobationNumberToday;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupManegeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupManegeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_manege, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupManegeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cardView_1;
      CardView cardView1 = ViewBindings.findChildViewById(rootView, id);
      if (cardView1 == null) {
        break missingId;
      }

      id = R.id.cardView_2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.image_play_pause;
      ImageView imagePlayPause = ViewBindings.findChildViewById(rootView, id);
      if (imagePlayPause == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView_add_rules;
      ImageView imageViewAddRules = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAddRules == null) {
        break missingId;
      }

      id = R.id.linLayout_delete_group;
      LinearLayout linLayoutDeleteGroup = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutDeleteGroup == null) {
        break missingId;
      }

      id = R.id.linLayout_leave_group;
      LinearLayout linLayoutLeaveGroup = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutLeaveGroup == null) {
        break missingId;
      }

      id = R.id.linLayout_put_in_pause;
      LinearLayout linLayoutPutInPause = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutPutInPause == null) {
        break missingId;
      }

      id = R.id.membership_request_number;
      TextView membershipRequestNumber = ViewBindings.findChildViewById(rootView, id);
      if (membershipRequestNumber == null) {
        break missingId;
      }

      id = R.id.membership_request_number_today;
      TextView membershipRequestNumberToday = ViewBindings.findChildViewById(rootView, id);
      if (membershipRequestNumberToday == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.profile_photo;
      ImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.relLayout_add_rules_in_the_group;
      RelativeLayout relLayoutAddRulesInTheGroup = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAddRulesInTheGroup == null) {
        break missingId;
      }

      id = R.id.relLayout_membership_request;
      RelativeLayout relLayoutMembershipRequest = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMembershipRequest == null) {
        break missingId;
      }

      id = R.id.relLayout_report_post;
      RelativeLayout relLayoutReportPost = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutReportPost == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.relLayout_waiting_approval;
      RelativeLayout relLayoutWaitingApproval = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutWaitingApproval == null) {
        break missingId;
      }

      id = R.id.report_post_number;
      TextView reportPostNumber = ViewBindings.findChildViewById(rootView, id);
      if (reportPostNumber == null) {
        break missingId;
      }

      id = R.id.report_post_number_today;
      TextView reportPostNumberToday = ViewBindings.findChildViewById(rootView, id);
      if (reportPostNumberToday == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_group_name;
      TextView toolBarGroupName = ViewBindings.findChildViewById(rootView, id);
      if (toolBarGroupName == null) {
        break missingId;
      }

      id = R.id.tv_put_on_pause;
      TextView tvPutOnPause = ViewBindings.findChildViewById(rootView, id);
      if (tvPutOnPause == null) {
        break missingId;
      }

      id = R.id.waiting_approbation_number;
      TextView waitingApprobationNumber = ViewBindings.findChildViewById(rootView, id);
      if (waitingApprobationNumber == null) {
        break missingId;
      }

      id = R.id.waiting_approbation_number_today;
      TextView waitingApprobationNumberToday = ViewBindings.findChildViewById(rootView, id);
      if (waitingApprobationNumberToday == null) {
        break missingId;
      }

      return new ActivityGroupManegeBinding((RelativeLayout) rootView, arrowBack, cardView,
          cardView1, cardView2, close, imagePlayPause, imageView, imageView2, imageView3,
          imageViewAddRules, linLayoutDeleteGroup, linLayoutLeaveGroup, linLayoutPutInPause,
          membershipRequestNumber, membershipRequestNumberToday, parent, profilePhoto,
          relLayoutAddRulesInTheGroup, relLayoutMembershipRequest, relLayoutReportPost,
          relLayoutViewOverlay, relLayoutWaitingApproval, reportPostNumber, reportPostNumberToday,
          text1, toolBar, toolBarGroupName, tvPutOnPause, waitingApprobationNumber,
          waitingApprobationNumberToday);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
