// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupSeeAllMembersBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final TextView buttonAdministratorSeeMore;

  @NonNull
  public final TextView buttonContributorSeeMore;

  @NonNull
  public final TextView buttonLiveInSameTownSeeMore;

  @NonNull
  public final ImageView close;

  @NonNull
  public final MyEditText editSearch;

  @NonNull
  public final ImageView erase;

  @NonNull
  public final TextView fullName;

  @NonNull
  public final ImageView groupIcon;

  @NonNull
  public final LinearLayout linLayoutAdministrators;

  @NonNull
  public final LinearLayout linLayoutAllMembers;

  @NonNull
  public final LinearLayout linLayoutContributors;

  @NonNull
  public final LinearLayout linLayoutLiveInSameTown;

  @NonNull
  public final LinearLayout linLayoutMembers;

  @NonNull
  public final LinearLayout linLayoutRecyclerview;

  @NonNull
  public final TextView liveInSameTown;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final CircleImageView profilePhoto;

  @NonNull
  public final RecyclerView recyclerViewAdministrators;

  @NonNull
  public final RecyclerView recyclerViewAllMembers;

  @NonNull
  public final RecyclerView recyclerViewContributors;

  @NonNull
  public final RecyclerView recyclerViewLiveInSameTown;

  @NonNull
  public final RelativeLayout relLayout;

  @NonNull
  public final RelativeLayout relLayoutAdminButton;

  @NonNull
  public final RelativeLayout relLayoutContributorButton;

  @NonNull
  public final RelativeLayout relLayoutInvite;

  @NonNull
  public final RelativeLayout relLayoutSameTownButton;

  @NonNull
  public final RelativeLayout relLayoutSearch;

  @NonNull
  public final RelativeLayout relLayoutUser;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final ImageView searchIdWhite;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarTextview;

  @NonNull
  public final TextView username;

  private ActivityGroupSeeAllMembersBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull TextView buttonAdministratorSeeMore,
      @NonNull TextView buttonContributorSeeMore, @NonNull TextView buttonLiveInSameTownSeeMore,
      @NonNull ImageView close, @NonNull MyEditText editSearch, @NonNull ImageView erase,
      @NonNull TextView fullName, @NonNull ImageView groupIcon,
      @NonNull LinearLayout linLayoutAdministrators, @NonNull LinearLayout linLayoutAllMembers,
      @NonNull LinearLayout linLayoutContributors, @NonNull LinearLayout linLayoutLiveInSameTown,
      @NonNull LinearLayout linLayoutMembers, @NonNull LinearLayout linLayoutRecyclerview,
      @NonNull TextView liveInSameTown, @NonNull TouchDetectableScrollView nestedScrollView,
      @NonNull RelativeLayout parent, @NonNull CircleImageView profilePhoto,
      @NonNull RecyclerView recyclerViewAdministrators,
      @NonNull RecyclerView recyclerViewAllMembers, @NonNull RecyclerView recyclerViewContributors,
      @NonNull RecyclerView recyclerViewLiveInSameTown, @NonNull RelativeLayout relLayout,
      @NonNull RelativeLayout relLayoutAdminButton,
      @NonNull RelativeLayout relLayoutContributorButton, @NonNull RelativeLayout relLayoutInvite,
      @NonNull RelativeLayout relLayoutSameTownButton, @NonNull RelativeLayout relLayoutSearch,
      @NonNull RelativeLayout relLayoutUser, @NonNull RelativeLayout relLayoutViewOverlay,
      @NonNull ImageView searchIdWhite, @NonNull Toolbar toolBar, @NonNull TextView toolBarTextview,
      @NonNull TextView username) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.buttonAdministratorSeeMore = buttonAdministratorSeeMore;
    this.buttonContributorSeeMore = buttonContributorSeeMore;
    this.buttonLiveInSameTownSeeMore = buttonLiveInSameTownSeeMore;
    this.close = close;
    this.editSearch = editSearch;
    this.erase = erase;
    this.fullName = fullName;
    this.groupIcon = groupIcon;
    this.linLayoutAdministrators = linLayoutAdministrators;
    this.linLayoutAllMembers = linLayoutAllMembers;
    this.linLayoutContributors = linLayoutContributors;
    this.linLayoutLiveInSameTown = linLayoutLiveInSameTown;
    this.linLayoutMembers = linLayoutMembers;
    this.linLayoutRecyclerview = linLayoutRecyclerview;
    this.liveInSameTown = liveInSameTown;
    this.nestedScrollView = nestedScrollView;
    this.parent = parent;
    this.profilePhoto = profilePhoto;
    this.recyclerViewAdministrators = recyclerViewAdministrators;
    this.recyclerViewAllMembers = recyclerViewAllMembers;
    this.recyclerViewContributors = recyclerViewContributors;
    this.recyclerViewLiveInSameTown = recyclerViewLiveInSameTown;
    this.relLayout = relLayout;
    this.relLayoutAdminButton = relLayoutAdminButton;
    this.relLayoutContributorButton = relLayoutContributorButton;
    this.relLayoutInvite = relLayoutInvite;
    this.relLayoutSameTownButton = relLayoutSameTownButton;
    this.relLayoutSearch = relLayoutSearch;
    this.relLayoutUser = relLayoutUser;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.searchIdWhite = searchIdWhite;
    this.toolBar = toolBar;
    this.toolBarTextview = toolBarTextview;
    this.username = username;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupSeeAllMembersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupSeeAllMembersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_see_all_members, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupSeeAllMembersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.button_administrator_see_more;
      TextView buttonAdministratorSeeMore = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdministratorSeeMore == null) {
        break missingId;
      }

      id = R.id.button_contributor_see_more;
      TextView buttonContributorSeeMore = ViewBindings.findChildViewById(rootView, id);
      if (buttonContributorSeeMore == null) {
        break missingId;
      }

      id = R.id.button_live_in_same_town_see_more;
      TextView buttonLiveInSameTownSeeMore = ViewBindings.findChildViewById(rootView, id);
      if (buttonLiveInSameTownSeeMore == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.edit_search;
      MyEditText editSearch = ViewBindings.findChildViewById(rootView, id);
      if (editSearch == null) {
        break missingId;
      }

      id = R.id.erase;
      ImageView erase = ViewBindings.findChildViewById(rootView, id);
      if (erase == null) {
        break missingId;
      }

      id = R.id.full_name;
      TextView fullName = ViewBindings.findChildViewById(rootView, id);
      if (fullName == null) {
        break missingId;
      }

      id = R.id.group_icon;
      ImageView groupIcon = ViewBindings.findChildViewById(rootView, id);
      if (groupIcon == null) {
        break missingId;
      }

      id = R.id.linLayout_administrators;
      LinearLayout linLayoutAdministrators = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAdministrators == null) {
        break missingId;
      }

      id = R.id.linLayout_all_members;
      LinearLayout linLayoutAllMembers = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAllMembers == null) {
        break missingId;
      }

      id = R.id.linLayout_contributors;
      LinearLayout linLayoutContributors = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutContributors == null) {
        break missingId;
      }

      id = R.id.linLayout_live_in_same_town;
      LinearLayout linLayoutLiveInSameTown = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutLiveInSameTown == null) {
        break missingId;
      }

      id = R.id.linLayout_members;
      LinearLayout linLayoutMembers = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutMembers == null) {
        break missingId;
      }

      id = R.id.linLayout_recyclerview;
      LinearLayout linLayoutRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutRecyclerview == null) {
        break missingId;
      }

      id = R.id.live_in_same_town;
      TextView liveInSameTown = ViewBindings.findChildViewById(rootView, id);
      if (liveInSameTown == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.profile_photo;
      CircleImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.recyclerView_administrators;
      RecyclerView recyclerViewAdministrators = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAdministrators == null) {
        break missingId;
      }

      id = R.id.recyclerView_all_members;
      RecyclerView recyclerViewAllMembers = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAllMembers == null) {
        break missingId;
      }

      id = R.id.recyclerView_contributors;
      RecyclerView recyclerViewContributors = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewContributors == null) {
        break missingId;
      }

      id = R.id.recyclerView_live_in_same_town;
      RecyclerView recyclerViewLiveInSameTown = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewLiveInSameTown == null) {
        break missingId;
      }

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      id = R.id.relLayout_admin_button;
      RelativeLayout relLayoutAdminButton = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAdminButton == null) {
        break missingId;
      }

      id = R.id.relLayout_contributor_button;
      RelativeLayout relLayoutContributorButton = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutContributorButton == null) {
        break missingId;
      }

      id = R.id.relLayout_invite;
      RelativeLayout relLayoutInvite = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutInvite == null) {
        break missingId;
      }

      id = R.id.relLayout_same_town_button;
      RelativeLayout relLayoutSameTownButton = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSameTownButton == null) {
        break missingId;
      }

      id = R.id.relLayout_search;
      RelativeLayout relLayoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSearch == null) {
        break missingId;
      }

      id = R.id.relLayout_user;
      RelativeLayout relLayoutUser = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUser == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.search_id_white;
      ImageView searchIdWhite = ViewBindings.findChildViewById(rootView, id);
      if (searchIdWhite == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_textview;
      TextView toolBarTextview = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTextview == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ActivityGroupSeeAllMembersBinding((RelativeLayout) rootView, arrowBack,
          buttonAdministratorSeeMore, buttonContributorSeeMore, buttonLiveInSameTownSeeMore, close,
          editSearch, erase, fullName, groupIcon, linLayoutAdministrators, linLayoutAllMembers,
          linLayoutContributors, linLayoutLiveInSameTown, linLayoutMembers, linLayoutRecyclerview,
          liveInSameTown, nestedScrollView, parent, profilePhoto, recyclerViewAdministrators,
          recyclerViewAllMembers, recyclerViewContributors, recyclerViewLiveInSameTown, relLayout,
          relLayoutAdminButton, relLayoutContributorButton, relLayoutInvite,
          relLayoutSameTownButton, relLayoutSearch, relLayoutUser, relLayoutViewOverlay,
          searchIdWhite, toolBar, toolBarTextview, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
