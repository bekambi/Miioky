// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBottomsheetMarketSelectStoreBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout linLayoutRent;

  @NonNull
  public final LinearLayout linLayoutSell;

  @NonNull
  public final LinearLayout linLayoutViewBar;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView tvSellIn;

  private LayoutBottomsheetMarketSelectStoreBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout linLayoutRent, @NonNull LinearLayout linLayoutSell,
      @NonNull LinearLayout linLayoutViewBar, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerView, @NonNull TextView tvSellIn) {
    this.rootView = rootView;
    this.linLayoutRent = linLayoutRent;
    this.linLayoutSell = linLayoutSell;
    this.linLayoutViewBar = linLayoutViewBar;
    this.progressBar = progressBar;
    this.recyclerView = recyclerView;
    this.tvSellIn = tvSellIn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBottomsheetMarketSelectStoreBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBottomsheetMarketSelectStoreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bottomsheet_market_select_store, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBottomsheetMarketSelectStoreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linLayout_rent;
      LinearLayout linLayoutRent = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutRent == null) {
        break missingId;
      }

      id = R.id.linLayout_sell;
      LinearLayout linLayoutSell = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutSell == null) {
        break missingId;
      }

      id = R.id.linLayout_view_bar;
      LinearLayout linLayoutViewBar = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutViewBar == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.tv_sell_in;
      TextView tvSellIn = ViewBindings.findChildViewById(rootView, id);
      if (tvSellIn == null) {
        break missingId;
      }

      return new LayoutBottomsheetMarketSelectStoreBinding((RelativeLayout) rootView, linLayoutRent,
          linLayoutSell, linLayoutViewBar, progressBar, recyclerView, tvSellIn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
