// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupPrivateViewProfileDiscoverBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final TextView buttonCancel;

  @NonNull
  public final TextView buttonCancelBottom;

  @NonNull
  public final TextView buttonJoin;

  @NonNull
  public final TextView buttonJoinBottom;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView close;

  @NonNull
  public final TextView dateGroupCreation;

  @NonNull
  public final TextView groupMsg;

  @NonNull
  public final TextView groupName;

  @NonNull
  public final ImageView iconsEye;

  @NonNull
  public final ImageView iconsLock;

  @NonNull
  public final ImageView iconsTime;

  @NonNull
  public final ImageView iconsWorld;

  @NonNull
  public final LinearLayout linLayoutAbout;

  @NonNull
  public final LinearLayout linLayoutAdminGroupRules;

  @NonNull
  public final LinearLayout linLayoutFootern;

  @NonNull
  public final LinearLayout linLayoutHeader;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final TextView privatePublic;

  @NonNull
  public final ImageView profilePhoto;

  @NonNull
  public final ImageView profilePhotoToolbar;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout relLayoutButtonCancel;

  @NonNull
  public final RelativeLayout relLayoutButtonCancelBottom;

  @NonNull
  public final RelativeLayout relLayoutButtonJoin;

  @NonNull
  public final RelativeLayout relLayoutButtonsJoinBottom;

  @NonNull
  public final RelativeLayout relLayoutButtonsJoinCancel;

  @NonNull
  public final RelativeLayout relLayoutButtonsJoinCancelBottom;

  @NonNull
  public final RelativeLayout relLayoutGoAboutClass;

  @NonNull
  public final RelativeLayout relLayoutGoGroupHistory;

  @NonNull
  public final RelativeLayout relLayoutNotMember;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final RelativeLayout relayoutProfile;

  @NonNull
  public final TextView ruleTitle;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarGroupName;

  @NonNull
  public final TextView totalMembers;

  private ActivityGroupPrivateViewProfileDiscoverBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull TextView buttonCancel,
      @NonNull TextView buttonCancelBottom, @NonNull TextView buttonJoin,
      @NonNull TextView buttonJoinBottom, @NonNull CardView cardView, @NonNull ImageView close,
      @NonNull TextView dateGroupCreation, @NonNull TextView groupMsg, @NonNull TextView groupName,
      @NonNull ImageView iconsEye, @NonNull ImageView iconsLock, @NonNull ImageView iconsTime,
      @NonNull ImageView iconsWorld, @NonNull LinearLayout linLayoutAbout,
      @NonNull LinearLayout linLayoutAdminGroupRules, @NonNull LinearLayout linLayoutFootern,
      @NonNull LinearLayout linLayoutHeader, @NonNull NestedScrollView nestedScrollView,
      @NonNull RelativeLayout parent, @NonNull TextView privatePublic,
      @NonNull ImageView profilePhoto, @NonNull ImageView profilePhotoToolbar,
      @NonNull RecyclerView recyclerView, @NonNull RelativeLayout relLayoutButtonCancel,
      @NonNull RelativeLayout relLayoutButtonCancelBottom,
      @NonNull RelativeLayout relLayoutButtonJoin,
      @NonNull RelativeLayout relLayoutButtonsJoinBottom,
      @NonNull RelativeLayout relLayoutButtonsJoinCancel,
      @NonNull RelativeLayout relLayoutButtonsJoinCancelBottom,
      @NonNull RelativeLayout relLayoutGoAboutClass,
      @NonNull RelativeLayout relLayoutGoGroupHistory, @NonNull RelativeLayout relLayoutNotMember,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull RelativeLayout relayoutProfile,
      @NonNull TextView ruleTitle, @NonNull Toolbar toolBar, @NonNull TextView toolBarGroupName,
      @NonNull TextView totalMembers) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.buttonCancel = buttonCancel;
    this.buttonCancelBottom = buttonCancelBottom;
    this.buttonJoin = buttonJoin;
    this.buttonJoinBottom = buttonJoinBottom;
    this.cardView = cardView;
    this.close = close;
    this.dateGroupCreation = dateGroupCreation;
    this.groupMsg = groupMsg;
    this.groupName = groupName;
    this.iconsEye = iconsEye;
    this.iconsLock = iconsLock;
    this.iconsTime = iconsTime;
    this.iconsWorld = iconsWorld;
    this.linLayoutAbout = linLayoutAbout;
    this.linLayoutAdminGroupRules = linLayoutAdminGroupRules;
    this.linLayoutFootern = linLayoutFootern;
    this.linLayoutHeader = linLayoutHeader;
    this.nestedScrollView = nestedScrollView;
    this.parent = parent;
    this.privatePublic = privatePublic;
    this.profilePhoto = profilePhoto;
    this.profilePhotoToolbar = profilePhotoToolbar;
    this.recyclerView = recyclerView;
    this.relLayoutButtonCancel = relLayoutButtonCancel;
    this.relLayoutButtonCancelBottom = relLayoutButtonCancelBottom;
    this.relLayoutButtonJoin = relLayoutButtonJoin;
    this.relLayoutButtonsJoinBottom = relLayoutButtonsJoinBottom;
    this.relLayoutButtonsJoinCancel = relLayoutButtonsJoinCancel;
    this.relLayoutButtonsJoinCancelBottom = relLayoutButtonsJoinCancelBottom;
    this.relLayoutGoAboutClass = relLayoutGoAboutClass;
    this.relLayoutGoGroupHistory = relLayoutGoGroupHistory;
    this.relLayoutNotMember = relLayoutNotMember;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.relayoutProfile = relayoutProfile;
    this.ruleTitle = ruleTitle;
    this.toolBar = toolBar;
    this.toolBarGroupName = toolBarGroupName;
    this.totalMembers = totalMembers;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupPrivateViewProfileDiscoverBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupPrivateViewProfileDiscoverBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_private_view_profile_discover, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupPrivateViewProfileDiscoverBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.button_cancel;
      TextView buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.button_cancel_bottom;
      TextView buttonCancelBottom = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancelBottom == null) {
        break missingId;
      }

      id = R.id.button_join;
      TextView buttonJoin = ViewBindings.findChildViewById(rootView, id);
      if (buttonJoin == null) {
        break missingId;
      }

      id = R.id.button_join_bottom;
      TextView buttonJoinBottom = ViewBindings.findChildViewById(rootView, id);
      if (buttonJoinBottom == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.date_group_creation;
      TextView dateGroupCreation = ViewBindings.findChildViewById(rootView, id);
      if (dateGroupCreation == null) {
        break missingId;
      }

      id = R.id.group_msg;
      TextView groupMsg = ViewBindings.findChildViewById(rootView, id);
      if (groupMsg == null) {
        break missingId;
      }

      id = R.id.group_name;
      TextView groupName = ViewBindings.findChildViewById(rootView, id);
      if (groupName == null) {
        break missingId;
      }

      id = R.id.icons_eye;
      ImageView iconsEye = ViewBindings.findChildViewById(rootView, id);
      if (iconsEye == null) {
        break missingId;
      }

      id = R.id.icons_lock;
      ImageView iconsLock = ViewBindings.findChildViewById(rootView, id);
      if (iconsLock == null) {
        break missingId;
      }

      id = R.id.icons_time;
      ImageView iconsTime = ViewBindings.findChildViewById(rootView, id);
      if (iconsTime == null) {
        break missingId;
      }

      id = R.id.icons_world;
      ImageView iconsWorld = ViewBindings.findChildViewById(rootView, id);
      if (iconsWorld == null) {
        break missingId;
      }

      id = R.id.linLayout_about;
      LinearLayout linLayoutAbout = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAbout == null) {
        break missingId;
      }

      id = R.id.linLayout_admin_group_rules;
      LinearLayout linLayoutAdminGroupRules = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAdminGroupRules == null) {
        break missingId;
      }

      id = R.id.linLayout_footern;
      LinearLayout linLayoutFootern = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutFootern == null) {
        break missingId;
      }

      id = R.id.linLayout_header;
      LinearLayout linLayoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutHeader == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.private_public;
      TextView privatePublic = ViewBindings.findChildViewById(rootView, id);
      if (privatePublic == null) {
        break missingId;
      }

      id = R.id.profile_photo;
      ImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.profile_photo_toolbar;
      ImageView profilePhotoToolbar = ViewBindings.findChildViewById(rootView, id);
      if (profilePhotoToolbar == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relLayout_button_cancel;
      RelativeLayout relLayoutButtonCancel = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonCancel == null) {
        break missingId;
      }

      id = R.id.relLayout_button_cancel_bottom;
      RelativeLayout relLayoutButtonCancelBottom = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonCancelBottom == null) {
        break missingId;
      }

      id = R.id.relLayout_button_join;
      RelativeLayout relLayoutButtonJoin = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonJoin == null) {
        break missingId;
      }

      id = R.id.relLayout_buttons_join_bottom;
      RelativeLayout relLayoutButtonsJoinBottom = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonsJoinBottom == null) {
        break missingId;
      }

      id = R.id.relLayout_buttons_join_cancel;
      RelativeLayout relLayoutButtonsJoinCancel = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonsJoinCancel == null) {
        break missingId;
      }

      id = R.id.relLayout_buttons_join_cancel_bottom;
      RelativeLayout relLayoutButtonsJoinCancelBottom = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonsJoinCancelBottom == null) {
        break missingId;
      }

      id = R.id.relLayout_go_about_class;
      RelativeLayout relLayoutGoAboutClass = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutGoAboutClass == null) {
        break missingId;
      }

      id = R.id.relLayout_go_group_history;
      RelativeLayout relLayoutGoGroupHistory = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutGoGroupHistory == null) {
        break missingId;
      }

      id = R.id.relLayout_not_member;
      RelativeLayout relLayoutNotMember = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNotMember == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.relayout_profile;
      RelativeLayout relayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (relayoutProfile == null) {
        break missingId;
      }

      id = R.id.rule_title;
      TextView ruleTitle = ViewBindings.findChildViewById(rootView, id);
      if (ruleTitle == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_group_name;
      TextView toolBarGroupName = ViewBindings.findChildViewById(rootView, id);
      if (toolBarGroupName == null) {
        break missingId;
      }

      id = R.id.total_members;
      TextView totalMembers = ViewBindings.findChildViewById(rootView, id);
      if (totalMembers == null) {
        break missingId;
      }

      return new ActivityGroupPrivateViewProfileDiscoverBinding((RelativeLayout) rootView,
          arrowBack, buttonCancel, buttonCancelBottom, buttonJoin, buttonJoinBottom, cardView,
          close, dateGroupCreation, groupMsg, groupName, iconsEye, iconsLock, iconsTime, iconsWorld,
          linLayoutAbout, linLayoutAdminGroupRules, linLayoutFootern, linLayoutHeader,
          nestedScrollView, parent, privatePublic, profilePhoto, profilePhotoToolbar, recyclerView,
          relLayoutButtonCancel, relLayoutButtonCancelBottom, relLayoutButtonJoin,
          relLayoutButtonsJoinBottom, relLayoutButtonsJoinCancel, relLayoutButtonsJoinCancelBottom,
          relLayoutGoAboutClass, relLayoutGoGroupHistory, relLayoutNotMember, relLayoutViewOverlay,
          relayoutProfile, ruleTitle, toolBar, toolBarGroupName, totalMembers);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
