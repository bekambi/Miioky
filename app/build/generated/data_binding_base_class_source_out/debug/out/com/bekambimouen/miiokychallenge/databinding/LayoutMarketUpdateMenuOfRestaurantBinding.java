// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutMarketUpdateMenuOfRestaurantBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView button;

  @NonNull
  public final MyEditText editMenuOfTheDay;

  @NonNull
  public final TextView menuOfTheDay;

  @NonNull
  public final RelativeLayout relLayoutMenuOfTheDay;

  private LayoutMarketUpdateMenuOfRestaurantBinding(@NonNull LinearLayout rootView,
      @NonNull TextView button, @NonNull MyEditText editMenuOfTheDay,
      @NonNull TextView menuOfTheDay, @NonNull RelativeLayout relLayoutMenuOfTheDay) {
    this.rootView = rootView;
    this.button = button;
    this.editMenuOfTheDay = editMenuOfTheDay;
    this.menuOfTheDay = menuOfTheDay;
    this.relLayoutMenuOfTheDay = relLayoutMenuOfTheDay;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutMarketUpdateMenuOfRestaurantBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutMarketUpdateMenuOfRestaurantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_market_update_menu_of_restaurant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutMarketUpdateMenuOfRestaurantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      TextView button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.edit_menu_of_the_day;
      MyEditText editMenuOfTheDay = ViewBindings.findChildViewById(rootView, id);
      if (editMenuOfTheDay == null) {
        break missingId;
      }

      id = R.id.menu_of_the_day;
      TextView menuOfTheDay = ViewBindings.findChildViewById(rootView, id);
      if (menuOfTheDay == null) {
        break missingId;
      }

      id = R.id.relLayout_menu_of_the_day;
      RelativeLayout relLayoutMenuOfTheDay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMenuOfTheDay == null) {
        break missingId;
      }

      return new LayoutMarketUpdateMenuOfRestaurantBinding((LinearLayout) rootView, button,
          editMenuOfTheDay, menuOfTheDay, relLayoutMenuOfTheDay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
