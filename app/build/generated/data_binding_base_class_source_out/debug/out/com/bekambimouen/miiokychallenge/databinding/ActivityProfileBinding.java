// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RelativeLayout relLayout1;

  @NonNull
  public final RelativeLayout relLayout2;

  @NonNull
  public final RelativeLayout relLayoutNoConnexion;

  @NonNull
  public final RelativeLayout relLayoutSpotlight;

  @NonNull
  public final RelativeLayout relLayoutSuggestions;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  private ActivityProfileBinding(@NonNull RelativeLayout rootView,
      @NonNull NestedScrollView nestedScrollView, @NonNull RelativeLayout parent,
      @NonNull RelativeLayout relLayout1, @NonNull RelativeLayout relLayout2,
      @NonNull RelativeLayout relLayoutNoConnexion, @NonNull RelativeLayout relLayoutSpotlight,
      @NonNull RelativeLayout relLayoutSuggestions, @NonNull RelativeLayout relLayoutViewOverlay) {
    this.rootView = rootView;
    this.nestedScrollView = nestedScrollView;
    this.parent = parent;
    this.relLayout1 = relLayout1;
    this.relLayout2 = relLayout2;
    this.relLayoutNoConnexion = relLayoutNoConnexion;
    this.relLayoutSpotlight = relLayoutSpotlight;
    this.relLayoutSuggestions = relLayoutSuggestions;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.relLayout1;
      RelativeLayout relLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout1 == null) {
        break missingId;
      }

      id = R.id.relLayout2;
      RelativeLayout relLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout2 == null) {
        break missingId;
      }

      id = R.id.relLayout_no_connexion;
      RelativeLayout relLayoutNoConnexion = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNoConnexion == null) {
        break missingId;
      }

      id = R.id.relLayout_spotlight;
      RelativeLayout relLayoutSpotlight = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSpotlight == null) {
        break missingId;
      }

      id = R.id.relLayout_suggestions;
      RelativeLayout relLayoutSuggestions = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSuggestions == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      return new ActivityProfileBinding((RelativeLayout) rootView, nestedScrollView, parent,
          relLayout1, relLayout2, relLayoutNoConnexion, relLayoutSpotlight, relLayoutSuggestions,
          relLayoutViewOverlay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
