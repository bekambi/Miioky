// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.bekambimouen.miiokychallenge.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView appName;

  @NonNull
  public final ProgressBar horizontalProgressBar;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final RelativeLayout relLayoutAppName;

  @NonNull
  public final RelativeLayout relLayoutGoHome;

  @NonNull
  public final RelativeLayout relLayoutHeader;

  @NonNull
  public final RelativeLayout relLayoutTabLayout;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final RelativeLayout relLayoutWelcome;

  @NonNull
  public final ImageView searchIdWhite;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView tvMii;

  @NonNull
  public final TextView tvOky;

  @NonNull
  public final ViewPager2 viewPager;

  private ActivityHomeBinding(@NonNull RelativeLayout rootView, @NonNull TextView appName,
      @NonNull ProgressBar horizontalProgressBar, @NonNull RelativeLayout main,
      @NonNull RelativeLayout relLayoutAppName, @NonNull RelativeLayout relLayoutGoHome,
      @NonNull RelativeLayout relLayoutHeader, @NonNull RelativeLayout relLayoutTabLayout,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull RelativeLayout relLayoutWelcome,
      @NonNull ImageView searchIdWhite, @NonNull TabLayout tabLayout, @NonNull TextView tvMii,
      @NonNull TextView tvOky, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.appName = appName;
    this.horizontalProgressBar = horizontalProgressBar;
    this.main = main;
    this.relLayoutAppName = relLayoutAppName;
    this.relLayoutGoHome = relLayoutGoHome;
    this.relLayoutHeader = relLayoutHeader;
    this.relLayoutTabLayout = relLayoutTabLayout;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.relLayoutWelcome = relLayoutWelcome;
    this.searchIdWhite = searchIdWhite;
    this.tabLayout = tabLayout;
    this.tvMii = tvMii;
    this.tvOky = tvOky;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_name;
      TextView appName = ViewBindings.findChildViewById(rootView, id);
      if (appName == null) {
        break missingId;
      }

      id = R.id.horizontal_progressBar;
      ProgressBar horizontalProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (horizontalProgressBar == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.relLayout_app_name;
      RelativeLayout relLayoutAppName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAppName == null) {
        break missingId;
      }

      id = R.id.relLayout_go_home;
      RelativeLayout relLayoutGoHome = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutGoHome == null) {
        break missingId;
      }

      id = R.id.relLayout_header;
      RelativeLayout relLayoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutHeader == null) {
        break missingId;
      }

      id = R.id.relLayout_tabLayout;
      RelativeLayout relLayoutTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutTabLayout == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.relLayout_welcome;
      RelativeLayout relLayoutWelcome = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutWelcome == null) {
        break missingId;
      }

      id = R.id.search_id_white;
      ImageView searchIdWhite = ViewBindings.findChildViewById(rootView, id);
      if (searchIdWhite == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.tv_mii;
      TextView tvMii = ViewBindings.findChildViewById(rootView, id);
      if (tvMii == null) {
        break missingId;
      }

      id = R.id.tv_oky;
      TextView tvOky = ViewBindings.findChildViewById(rootView, id);
      if (tvOky == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityHomeBinding((RelativeLayout) rootView, appName, horizontalProgressBar,
          main, relLayoutAppName, relLayoutGoHome, relLayoutHeader, relLayoutTabLayout,
          relLayoutViewOverlay, relLayoutWelcome, searchIdWhite, tabLayout, tvMii, tvOky,
          viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
