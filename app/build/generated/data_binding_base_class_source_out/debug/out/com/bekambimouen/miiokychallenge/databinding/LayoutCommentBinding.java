// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.like_button_animation.SmallBangView;
import com.csguys.viewmoretextview.ViewMoreTextView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutCommentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardViewFirstComment;

  @NonNull
  public final ViewMoreTextView comment;

  @NonNull
  public final ViewMoreTextView commentFirstComment;

  @NonNull
  public final TextView commentLikes;

  @NonNull
  public final TextView commentLikesFirstComment;

  @NonNull
  public final CircleImageView commentProfileImage;

  @NonNull
  public final CircleImageView commentProfileImageFirstComment;

  @NonNull
  public final RelativeLayout commentReply;

  @NonNull
  public final RelativeLayout commentReplyFirstComment;

  @NonNull
  public final TextView commentTimePosted;

  @NonNull
  public final TextView commentTimePostedFirstComment;

  @NonNull
  public final TextView commentUsername;

  @NonNull
  public final TextView commentUsernameFirstComment;

  @NonNull
  public final RelativeLayout deletedComment;

  @NonNull
  public final ImageView image;

  @NonNull
  public final ImageView imageFirstComment;

  @NonNull
  public final ImageView imgPlay;

  @NonNull
  public final SmallBangView likeHeart;

  @NonNull
  public final SmallBangView likeHeartFirstComment;

  @NonNull
  public final RelativeLayout likes;

  @NonNull
  public final LinearLayout linLayout;

  @NonNull
  public final LinearLayout linLayoutFirstComment;

  @NonNull
  public final ImageView menuItem;

  @NonNull
  public final TextView nberOfCommentComments;

  @NonNull
  public final TextView othersComments;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RelativeLayout relLayout1;

  @NonNull
  public final RelativeLayout relLayoutFirstComment;

  @NonNull
  public final RelativeLayout relLayoutImgPlay;

  @NonNull
  public final RelativeLayout relLayoutImgPlayFirstComment;

  @NonNull
  public final RelativeLayout relLayoutMenuItem;

  @NonNull
  public final RelativeLayout seeComments;

  @NonNull
  public final TextView seeTheComments;

  @NonNull
  public final ImageView thumbnail;

  @NonNull
  public final ImageView thumbnailFirstComment;

  @NonNull
  public final View view;

  private LayoutCommentBinding(@NonNull LinearLayout rootView, @NonNull CardView cardView,
      @NonNull CardView cardViewFirstComment, @NonNull ViewMoreTextView comment,
      @NonNull ViewMoreTextView commentFirstComment, @NonNull TextView commentLikes,
      @NonNull TextView commentLikesFirstComment, @NonNull CircleImageView commentProfileImage,
      @NonNull CircleImageView commentProfileImageFirstComment,
      @NonNull RelativeLayout commentReply, @NonNull RelativeLayout commentReplyFirstComment,
      @NonNull TextView commentTimePosted, @NonNull TextView commentTimePostedFirstComment,
      @NonNull TextView commentUsername, @NonNull TextView commentUsernameFirstComment,
      @NonNull RelativeLayout deletedComment, @NonNull ImageView image,
      @NonNull ImageView imageFirstComment, @NonNull ImageView imgPlay,
      @NonNull SmallBangView likeHeart, @NonNull SmallBangView likeHeartFirstComment,
      @NonNull RelativeLayout likes, @NonNull LinearLayout linLayout,
      @NonNull LinearLayout linLayoutFirstComment, @NonNull ImageView menuItem,
      @NonNull TextView nberOfCommentComments, @NonNull TextView othersComments,
      @NonNull RelativeLayout parent, @NonNull RelativeLayout relLayout1,
      @NonNull RelativeLayout relLayoutFirstComment, @NonNull RelativeLayout relLayoutImgPlay,
      @NonNull RelativeLayout relLayoutImgPlayFirstComment,
      @NonNull RelativeLayout relLayoutMenuItem, @NonNull RelativeLayout seeComments,
      @NonNull TextView seeTheComments, @NonNull ImageView thumbnail,
      @NonNull ImageView thumbnailFirstComment, @NonNull View view) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.cardViewFirstComment = cardViewFirstComment;
    this.comment = comment;
    this.commentFirstComment = commentFirstComment;
    this.commentLikes = commentLikes;
    this.commentLikesFirstComment = commentLikesFirstComment;
    this.commentProfileImage = commentProfileImage;
    this.commentProfileImageFirstComment = commentProfileImageFirstComment;
    this.commentReply = commentReply;
    this.commentReplyFirstComment = commentReplyFirstComment;
    this.commentTimePosted = commentTimePosted;
    this.commentTimePostedFirstComment = commentTimePostedFirstComment;
    this.commentUsername = commentUsername;
    this.commentUsernameFirstComment = commentUsernameFirstComment;
    this.deletedComment = deletedComment;
    this.image = image;
    this.imageFirstComment = imageFirstComment;
    this.imgPlay = imgPlay;
    this.likeHeart = likeHeart;
    this.likeHeartFirstComment = likeHeartFirstComment;
    this.likes = likes;
    this.linLayout = linLayout;
    this.linLayoutFirstComment = linLayoutFirstComment;
    this.menuItem = menuItem;
    this.nberOfCommentComments = nberOfCommentComments;
    this.othersComments = othersComments;
    this.parent = parent;
    this.relLayout1 = relLayout1;
    this.relLayoutFirstComment = relLayoutFirstComment;
    this.relLayoutImgPlay = relLayoutImgPlay;
    this.relLayoutImgPlayFirstComment = relLayoutImgPlayFirstComment;
    this.relLayoutMenuItem = relLayoutMenuItem;
    this.seeComments = seeComments;
    this.seeTheComments = seeTheComments;
    this.thumbnail = thumbnail;
    this.thumbnailFirstComment = thumbnailFirstComment;
    this.view = view;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutCommentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutCommentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_comment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutCommentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cardView_first_comment;
      CardView cardViewFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (cardViewFirstComment == null) {
        break missingId;
      }

      id = R.id.comment;
      ViewMoreTextView comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.comment_first_comment;
      ViewMoreTextView commentFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (commentFirstComment == null) {
        break missingId;
      }

      id = R.id.comment_likes;
      TextView commentLikes = ViewBindings.findChildViewById(rootView, id);
      if (commentLikes == null) {
        break missingId;
      }

      id = R.id.comment_likes_first_comment;
      TextView commentLikesFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (commentLikesFirstComment == null) {
        break missingId;
      }

      id = R.id.comment_profile_image;
      CircleImageView commentProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (commentProfileImage == null) {
        break missingId;
      }

      id = R.id.comment_profile_image_first_comment;
      CircleImageView commentProfileImageFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (commentProfileImageFirstComment == null) {
        break missingId;
      }

      id = R.id.comment_reply;
      RelativeLayout commentReply = ViewBindings.findChildViewById(rootView, id);
      if (commentReply == null) {
        break missingId;
      }

      id = R.id.comment_reply_first_comment;
      RelativeLayout commentReplyFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (commentReplyFirstComment == null) {
        break missingId;
      }

      id = R.id.comment_time_posted;
      TextView commentTimePosted = ViewBindings.findChildViewById(rootView, id);
      if (commentTimePosted == null) {
        break missingId;
      }

      id = R.id.comment_time_posted_first_comment;
      TextView commentTimePostedFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (commentTimePostedFirstComment == null) {
        break missingId;
      }

      id = R.id.comment_username;
      TextView commentUsername = ViewBindings.findChildViewById(rootView, id);
      if (commentUsername == null) {
        break missingId;
      }

      id = R.id.comment_username_first_comment;
      TextView commentUsernameFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (commentUsernameFirstComment == null) {
        break missingId;
      }

      id = R.id.deleted_comment;
      RelativeLayout deletedComment = ViewBindings.findChildViewById(rootView, id);
      if (deletedComment == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.image_first_comment;
      ImageView imageFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (imageFirstComment == null) {
        break missingId;
      }

      id = R.id.img_play;
      ImageView imgPlay = ViewBindings.findChildViewById(rootView, id);
      if (imgPlay == null) {
        break missingId;
      }

      id = R.id.like_heart;
      SmallBangView likeHeart = ViewBindings.findChildViewById(rootView, id);
      if (likeHeart == null) {
        break missingId;
      }

      id = R.id.like_heart_first_comment;
      SmallBangView likeHeartFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (likeHeartFirstComment == null) {
        break missingId;
      }

      id = R.id.likes;
      RelativeLayout likes = ViewBindings.findChildViewById(rootView, id);
      if (likes == null) {
        break missingId;
      }

      id = R.id.linLayout;
      LinearLayout linLayout = ViewBindings.findChildViewById(rootView, id);
      if (linLayout == null) {
        break missingId;
      }

      id = R.id.linLayout_first_comment;
      LinearLayout linLayoutFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutFirstComment == null) {
        break missingId;
      }

      id = R.id.menu_item;
      ImageView menuItem = ViewBindings.findChildViewById(rootView, id);
      if (menuItem == null) {
        break missingId;
      }

      id = R.id.nber_of_comment_comments;
      TextView nberOfCommentComments = ViewBindings.findChildViewById(rootView, id);
      if (nberOfCommentComments == null) {
        break missingId;
      }

      id = R.id.others_comments;
      TextView othersComments = ViewBindings.findChildViewById(rootView, id);
      if (othersComments == null) {
        break missingId;
      }

      id = R.id.parent;
      RelativeLayout parent = ViewBindings.findChildViewById(rootView, id);
      if (parent == null) {
        break missingId;
      }

      id = R.id.relLayout1;
      RelativeLayout relLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout1 == null) {
        break missingId;
      }

      id = R.id.relLayout_first_comment;
      RelativeLayout relLayoutFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFirstComment == null) {
        break missingId;
      }

      id = R.id.relLayout_img_play;
      RelativeLayout relLayoutImgPlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutImgPlay == null) {
        break missingId;
      }

      id = R.id.relLayout_img_play_first_comment;
      RelativeLayout relLayoutImgPlayFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutImgPlayFirstComment == null) {
        break missingId;
      }

      id = R.id.relLayout_menu_item;
      RelativeLayout relLayoutMenuItem = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMenuItem == null) {
        break missingId;
      }

      id = R.id.see_comments;
      RelativeLayout seeComments = ViewBindings.findChildViewById(rootView, id);
      if (seeComments == null) {
        break missingId;
      }

      id = R.id.see_the_comments;
      TextView seeTheComments = ViewBindings.findChildViewById(rootView, id);
      if (seeTheComments == null) {
        break missingId;
      }

      id = R.id.thumbnail;
      ImageView thumbnail = ViewBindings.findChildViewById(rootView, id);
      if (thumbnail == null) {
        break missingId;
      }

      id = R.id.thumbnail_first_comment;
      ImageView thumbnailFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (thumbnailFirstComment == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new LayoutCommentBinding((LinearLayout) rootView, cardView, cardViewFirstComment,
          comment, commentFirstComment, commentLikes, commentLikesFirstComment, commentProfileImage,
          commentProfileImageFirstComment, commentReply, commentReplyFirstComment,
          commentTimePosted, commentTimePostedFirstComment, commentUsername,
          commentUsernameFirstComment, deletedComment, image, imageFirstComment, imgPlay, likeHeart,
          likeHeartFirstComment, likes, linLayout, linLayoutFirstComment, menuItem,
          nberOfCommentComments, othersComments, parent, relLayout1, relLayoutFirstComment,
          relLayoutImgPlay, relLayoutImgPlayFirstComment, relLayoutMenuItem, seeComments,
          seeTheComments, thumbnail, thumbnailFirstComment, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
