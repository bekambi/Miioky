// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInvitationFromSameTownBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MyEditText editSearch;

  @NonNull
  public final ImageView erase;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView liveTownName;

  @NonNull
  public final ProgressBar loadingProgressBar;

  @NonNull
  public final TextView noYetPublication;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout relLayoutNotPubYet;

  @NonNull
  public final RelativeLayout relLayoutSearch;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final TextView sameLiveTown;

  @NonNull
  public final ImageView searchIdWhite;

  private FragmentInvitationFromSameTownBinding(@NonNull RelativeLayout rootView,
      @NonNull MyEditText editSearch, @NonNull ImageView erase, @NonNull ImageView imageView,
      @NonNull TextView liveTownName, @NonNull ProgressBar loadingProgressBar,
      @NonNull TextView noYetPublication, @NonNull RecyclerView recyclerView,
      @NonNull RelativeLayout relLayoutNotPubYet, @NonNull RelativeLayout relLayoutSearch,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull TextView sameLiveTown,
      @NonNull ImageView searchIdWhite) {
    this.rootView = rootView;
    this.editSearch = editSearch;
    this.erase = erase;
    this.imageView = imageView;
    this.liveTownName = liveTownName;
    this.loadingProgressBar = loadingProgressBar;
    this.noYetPublication = noYetPublication;
    this.recyclerView = recyclerView;
    this.relLayoutNotPubYet = relLayoutNotPubYet;
    this.relLayoutSearch = relLayoutSearch;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.sameLiveTown = sameLiveTown;
    this.searchIdWhite = searchIdWhite;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInvitationFromSameTownBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInvitationFromSameTownBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_invitation_from_same_town, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInvitationFromSameTownBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_search;
      MyEditText editSearch = ViewBindings.findChildViewById(rootView, id);
      if (editSearch == null) {
        break missingId;
      }

      id = R.id.erase;
      ImageView erase = ViewBindings.findChildViewById(rootView, id);
      if (erase == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.live_town_name;
      TextView liveTownName = ViewBindings.findChildViewById(rootView, id);
      if (liveTownName == null) {
        break missingId;
      }

      id = R.id.loading_progressBar;
      ProgressBar loadingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBar == null) {
        break missingId;
      }

      id = R.id.no_yet_publication;
      TextView noYetPublication = ViewBindings.findChildViewById(rootView, id);
      if (noYetPublication == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relLayout_not_pub_yet;
      RelativeLayout relLayoutNotPubYet = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNotPubYet == null) {
        break missingId;
      }

      id = R.id.relLayout_search;
      RelativeLayout relLayoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSearch == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.same_live_town;
      TextView sameLiveTown = ViewBindings.findChildViewById(rootView, id);
      if (sameLiveTown == null) {
        break missingId;
      }

      id = R.id.search_id_white;
      ImageView searchIdWhite = ViewBindings.findChildViewById(rootView, id);
      if (searchIdWhite == null) {
        break missingId;
      }

      return new FragmentInvitationFromSameTownBinding((RelativeLayout) rootView, editSearch, erase,
          imageView, liveTownName, loadingProgressBar, noYetPublication, recyclerView,
          relLayoutNotPubYet, relLayoutSearch, relLayoutViewOverlay, sameLiveTown, searchIdWhite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
