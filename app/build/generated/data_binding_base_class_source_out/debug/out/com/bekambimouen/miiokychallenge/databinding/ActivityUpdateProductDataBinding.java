// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateProductDataBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final ImageView close;

  @NonNull
  public final TextView countryDevise1;

  @NonNull
  public final TextView countryDevise2;

  @NonNull
  public final MyEditText editDescription;

  @NonNull
  public final AutoCompleteTextView editNeighborhood;

  @NonNull
  public final MyEditText editOldPrice;

  @NonNull
  public final MyEditText editPrice;

  @NonNull
  public final MyEditText editProductName;

  @NonNull
  public final TextView neighborhood;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RelativeLayout relLayout4;

  @NonNull
  public final RelativeLayout relLayout51;

  @NonNull
  public final RelativeLayout relLayout52;

  @NonNull
  public final RelativeLayout relLayout7;

  @NonNull
  public final RelativeLayout relLayoutDescription;

  @NonNull
  public final RelativeLayout relLayoutNeighborhood;

  @NonNull
  public final RelativeLayout relLayoutNeighborhoodSection;

  @NonNull
  public final RelativeLayout relLayoutOldPrice;

  @NonNull
  public final RelativeLayout relLayoutPrice;

  @NonNull
  public final RelativeLayout relLayoutProduct;

  @NonNull
  public final RelativeLayout relLayoutUpdate;

  @NonNull
  public final TextView textPublish;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView tvMsg;

  @NonNull
  public final View viewBar;

  @NonNull
  public final View viewBar2;

  private ActivityUpdateProductDataBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull ImageView close, @NonNull TextView countryDevise1,
      @NonNull TextView countryDevise2, @NonNull MyEditText editDescription,
      @NonNull AutoCompleteTextView editNeighborhood, @NonNull MyEditText editOldPrice,
      @NonNull MyEditText editPrice, @NonNull MyEditText editProductName,
      @NonNull TextView neighborhood, @NonNull TouchDetectableScrollView nestedScrollView,
      @NonNull RelativeLayout parent, @NonNull RelativeLayout relLayout4,
      @NonNull RelativeLayout relLayout51, @NonNull RelativeLayout relLayout52,
      @NonNull RelativeLayout relLayout7, @NonNull RelativeLayout relLayoutDescription,
      @NonNull RelativeLayout relLayoutNeighborhood,
      @NonNull RelativeLayout relLayoutNeighborhoodSection,
      @NonNull RelativeLayout relLayoutOldPrice, @NonNull RelativeLayout relLayoutPrice,
      @NonNull RelativeLayout relLayoutProduct, @NonNull RelativeLayout relLayoutUpdate,
      @NonNull TextView textPublish, @NonNull Toolbar toolBar, @NonNull TextView tvMsg,
      @NonNull View viewBar, @NonNull View viewBar2) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.close = close;
    this.countryDevise1 = countryDevise1;
    this.countryDevise2 = countryDevise2;
    this.editDescription = editDescription;
    this.editNeighborhood = editNeighborhood;
    this.editOldPrice = editOldPrice;
    this.editPrice = editPrice;
    this.editProductName = editProductName;
    this.neighborhood = neighborhood;
    this.nestedScrollView = nestedScrollView;
    this.parent = parent;
    this.relLayout4 = relLayout4;
    this.relLayout51 = relLayout51;
    this.relLayout52 = relLayout52;
    this.relLayout7 = relLayout7;
    this.relLayoutDescription = relLayoutDescription;
    this.relLayoutNeighborhood = relLayoutNeighborhood;
    this.relLayoutNeighborhoodSection = relLayoutNeighborhoodSection;
    this.relLayoutOldPrice = relLayoutOldPrice;
    this.relLayoutPrice = relLayoutPrice;
    this.relLayoutProduct = relLayoutProduct;
    this.relLayoutUpdate = relLayoutUpdate;
    this.textPublish = textPublish;
    this.toolBar = toolBar;
    this.tvMsg = tvMsg;
    this.viewBar = viewBar;
    this.viewBar2 = viewBar2;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateProductDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateProductDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_product_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateProductDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.country_devise1;
      TextView countryDevise1 = ViewBindings.findChildViewById(rootView, id);
      if (countryDevise1 == null) {
        break missingId;
      }

      id = R.id.country_devise2;
      TextView countryDevise2 = ViewBindings.findChildViewById(rootView, id);
      if (countryDevise2 == null) {
        break missingId;
      }

      id = R.id.edit_description;
      MyEditText editDescription = ViewBindings.findChildViewById(rootView, id);
      if (editDescription == null) {
        break missingId;
      }

      id = R.id.edit_neighborhood;
      AutoCompleteTextView editNeighborhood = ViewBindings.findChildViewById(rootView, id);
      if (editNeighborhood == null) {
        break missingId;
      }

      id = R.id.edit_old_price;
      MyEditText editOldPrice = ViewBindings.findChildViewById(rootView, id);
      if (editOldPrice == null) {
        break missingId;
      }

      id = R.id.edit_price;
      MyEditText editPrice = ViewBindings.findChildViewById(rootView, id);
      if (editPrice == null) {
        break missingId;
      }

      id = R.id.edit_product_name;
      MyEditText editProductName = ViewBindings.findChildViewById(rootView, id);
      if (editProductName == null) {
        break missingId;
      }

      id = R.id.neighborhood;
      TextView neighborhood = ViewBindings.findChildViewById(rootView, id);
      if (neighborhood == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.relLayout4;
      RelativeLayout relLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout4 == null) {
        break missingId;
      }

      id = R.id.relLayout51;
      RelativeLayout relLayout51 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout51 == null) {
        break missingId;
      }

      id = R.id.relLayout52;
      RelativeLayout relLayout52 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout52 == null) {
        break missingId;
      }

      id = R.id.relLayout7;
      RelativeLayout relLayout7 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout7 == null) {
        break missingId;
      }

      id = R.id.relLayout_description;
      RelativeLayout relLayoutDescription = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutDescription == null) {
        break missingId;
      }

      id = R.id.relLayout_neighborhood;
      RelativeLayout relLayoutNeighborhood = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNeighborhood == null) {
        break missingId;
      }

      id = R.id.relLayout_neighborhood_section;
      RelativeLayout relLayoutNeighborhoodSection = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNeighborhoodSection == null) {
        break missingId;
      }

      id = R.id.relLayout_old_price;
      RelativeLayout relLayoutOldPrice = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutOldPrice == null) {
        break missingId;
      }

      id = R.id.relLayout_price;
      RelativeLayout relLayoutPrice = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPrice == null) {
        break missingId;
      }

      id = R.id.relLayout_product;
      RelativeLayout relLayoutProduct = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutProduct == null) {
        break missingId;
      }

      id = R.id.relLayout_update;
      RelativeLayout relLayoutUpdate = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdate == null) {
        break missingId;
      }

      id = R.id.text_publish;
      TextView textPublish = ViewBindings.findChildViewById(rootView, id);
      if (textPublish == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.tv_msg;
      TextView tvMsg = ViewBindings.findChildViewById(rootView, id);
      if (tvMsg == null) {
        break missingId;
      }

      id = R.id.view_bar;
      View viewBar = ViewBindings.findChildViewById(rootView, id);
      if (viewBar == null) {
        break missingId;
      }

      id = R.id.view_bar2;
      View viewBar2 = ViewBindings.findChildViewById(rootView, id);
      if (viewBar2 == null) {
        break missingId;
      }

      return new ActivityUpdateProductDataBinding((RelativeLayout) rootView, arrowBack, close,
          countryDevise1, countryDevise2, editDescription, editNeighborhood, editOldPrice,
          editPrice, editProductName, neighborhood, nestedScrollView, parent, relLayout4,
          relLayout51, relLayout52, relLayout7, relLayoutDescription, relLayoutNeighborhood,
          relLayoutNeighborhoodSection, relLayoutOldPrice, relLayoutPrice, relLayoutProduct,
          relLayoutUpdate, textPublish, toolBar, tvMsg, viewBar, viewBar2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
