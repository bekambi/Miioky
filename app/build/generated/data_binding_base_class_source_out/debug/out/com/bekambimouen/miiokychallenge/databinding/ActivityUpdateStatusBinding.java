// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateStatusBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final ImageView done;

  @NonNull
  public final ImageView done1;

  @NonNull
  public final MyEditText editStatus;

  @NonNull
  public final LinearLayout linLayout1;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RelativeLayout relLayout;

  @NonNull
  public final RelativeLayout relLayout1;

  @NonNull
  public final TextView text1;

  @NonNull
  public final TextView title;

  @NonNull
  public final Toolbar toolbar;

  private ActivityUpdateStatusBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull ImageView done, @NonNull ImageView done1,
      @NonNull MyEditText editStatus, @NonNull LinearLayout linLayout1,
      @NonNull RelativeLayout parent, @NonNull RelativeLayout relLayout,
      @NonNull RelativeLayout relLayout1, @NonNull TextView text1, @NonNull TextView title,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.done = done;
    this.done1 = done1;
    this.editStatus = editStatus;
    this.linLayout1 = linLayout1;
    this.parent = parent;
    this.relLayout = relLayout;
    this.relLayout1 = relLayout1;
    this.text1 = text1;
    this.title = title;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateStatusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateStatusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_status, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateStatusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.done;
      ImageView done = ViewBindings.findChildViewById(rootView, id);
      if (done == null) {
        break missingId;
      }

      id = R.id.done1;
      ImageView done1 = ViewBindings.findChildViewById(rootView, id);
      if (done1 == null) {
        break missingId;
      }

      id = R.id.edit_status;
      MyEditText editStatus = ViewBindings.findChildViewById(rootView, id);
      if (editStatus == null) {
        break missingId;
      }

      id = R.id.linLayout1;
      LinearLayout linLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (linLayout1 == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      id = R.id.relLayout1;
      RelativeLayout relLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout1 == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityUpdateStatusBinding((RelativeLayout) rootView, arrowBack, done, done1,
          editStatus, linLayout1, parent, relLayout, relLayout1, text1, title, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
