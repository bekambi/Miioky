// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.ozcanalasalvar.library.view.datePicker.DatePicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBirthDayBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final AppCompatButton btnNext;

  @NonNull
  public final DatePicker datepicker;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final RelativeLayout relOlds;

  @NonNull
  public final RelativeLayout resultOlds;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView tvDay;

  @NonNull
  public final TextView tvMonth;

  @NonNull
  public final TextView tvOlds;

  @NonNull
  public final TextView tvUserYearOlds;

  @NonNull
  public final TextView tvYear;

  private ActivityRegisterBirthDayBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull AppCompatButton btnNext,
      @NonNull DatePicker datepicker, @NonNull LinearLayout main, @NonNull RelativeLayout relOlds,
      @NonNull RelativeLayout resultOlds, @NonNull Toolbar toolBar, @NonNull TextView tvDay,
      @NonNull TextView tvMonth, @NonNull TextView tvOlds, @NonNull TextView tvUserYearOlds,
      @NonNull TextView tvYear) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.btnNext = btnNext;
    this.datepicker = datepicker;
    this.main = main;
    this.relOlds = relOlds;
    this.resultOlds = resultOlds;
    this.toolBar = toolBar;
    this.tvDay = tvDay;
    this.tvMonth = tvMonth;
    this.tvOlds = tvOlds;
    this.tvUserYearOlds = tvUserYearOlds;
    this.tvYear = tvYear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBirthDayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBirthDayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register_birth_day, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBirthDayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.btn_next;
      AppCompatButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.datepicker;
      DatePicker datepicker = ViewBindings.findChildViewById(rootView, id);
      if (datepicker == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      id = R.id.rel_olds;
      RelativeLayout relOlds = ViewBindings.findChildViewById(rootView, id);
      if (relOlds == null) {
        break missingId;
      }

      id = R.id.result_olds;
      RelativeLayout resultOlds = ViewBindings.findChildViewById(rootView, id);
      if (resultOlds == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.tv_day;
      TextView tvDay = ViewBindings.findChildViewById(rootView, id);
      if (tvDay == null) {
        break missingId;
      }

      id = R.id.tv_month;
      TextView tvMonth = ViewBindings.findChildViewById(rootView, id);
      if (tvMonth == null) {
        break missingId;
      }

      id = R.id.tv_olds;
      TextView tvOlds = ViewBindings.findChildViewById(rootView, id);
      if (tvOlds == null) {
        break missingId;
      }

      id = R.id.tv_user_year_olds;
      TextView tvUserYearOlds = ViewBindings.findChildViewById(rootView, id);
      if (tvUserYearOlds == null) {
        break missingId;
      }

      id = R.id.tv_year;
      TextView tvYear = ViewBindings.findChildViewById(rootView, id);
      if (tvYear == null) {
        break missingId;
      }

      return new ActivityRegisterBirthDayBinding((LinearLayout) rootView, arrowBack, btnNext,
          datepicker, main, relOlds, resultOlds, toolBar, tvDay, tvMonth, tvOlds, tvUserYearOlds,
          tvYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
