// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.csguys.viewmoretextview.ViewMoreTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupImageDoubleFullImageShareBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView addDescription;

  @NonNull
  public final ImageView back;

  @NonNull
  public final ViewMoreTextView caption;

  @NonNull
  public final TextView category;

  @NonNull
  public final ImageView icon;

  @NonNull
  public final ImageView imageview;

  @NonNull
  public final ImageView ivShare;

  @NonNull
  public final LinearLayout linLayoutAddDescription;

  @NonNull
  public final LinearLayout linLayoutAllData;

  @NonNull
  public final LinearLayout linLayoutComment;

  @NonNull
  public final LinearLayout linLayoutLikeAndComment;

  @NonNull
  public final LinearLayout linLayoutShare;

  @NonNull
  public final ImageView menuItem;

  @NonNull
  public final ImageView messagePhotoInsta;

  @NonNull
  public final TextView numberOfComments;

  @NonNull
  public final TextView numberOfShare;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout relLayoutUsername;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final RelativeLayout relLayoutWriteTo;

  @NonNull
  public final TextView theUser;

  @NonNull
  public final TextView tpsPublication;

  @NonNull
  public final TextView translateComment;

  @NonNull
  public final TextView username;

  private ActivityGroupImageDoubleFullImageShareBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView addDescription, @NonNull ImageView back, @NonNull ViewMoreTextView caption,
      @NonNull TextView category, @NonNull ImageView icon, @NonNull ImageView imageview,
      @NonNull ImageView ivShare, @NonNull LinearLayout linLayoutAddDescription,
      @NonNull LinearLayout linLayoutAllData, @NonNull LinearLayout linLayoutComment,
      @NonNull LinearLayout linLayoutLikeAndComment, @NonNull LinearLayout linLayoutShare,
      @NonNull ImageView menuItem, @NonNull ImageView messagePhotoInsta,
      @NonNull TextView numberOfComments, @NonNull TextView numberOfShare,
      @NonNull RelativeLayout parent, @NonNull RecyclerView recyclerView,
      @NonNull RelativeLayout relLayoutUsername, @NonNull RelativeLayout relLayoutViewOverlay,
      @NonNull RelativeLayout relLayoutWriteTo, @NonNull TextView theUser,
      @NonNull TextView tpsPublication, @NonNull TextView translateComment,
      @NonNull TextView username) {
    this.rootView = rootView;
    this.addDescription = addDescription;
    this.back = back;
    this.caption = caption;
    this.category = category;
    this.icon = icon;
    this.imageview = imageview;
    this.ivShare = ivShare;
    this.linLayoutAddDescription = linLayoutAddDescription;
    this.linLayoutAllData = linLayoutAllData;
    this.linLayoutComment = linLayoutComment;
    this.linLayoutLikeAndComment = linLayoutLikeAndComment;
    this.linLayoutShare = linLayoutShare;
    this.menuItem = menuItem;
    this.messagePhotoInsta = messagePhotoInsta;
    this.numberOfComments = numberOfComments;
    this.numberOfShare = numberOfShare;
    this.parent = parent;
    this.recyclerView = recyclerView;
    this.relLayoutUsername = relLayoutUsername;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.relLayoutWriteTo = relLayoutWriteTo;
    this.theUser = theUser;
    this.tpsPublication = tpsPublication;
    this.translateComment = translateComment;
    this.username = username;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupImageDoubleFullImageShareBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupImageDoubleFullImageShareBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_image_double_full_image_share, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupImageDoubleFullImageShareBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_description;
      TextView addDescription = ViewBindings.findChildViewById(rootView, id);
      if (addDescription == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.caption;
      ViewMoreTextView caption = ViewBindings.findChildViewById(rootView, id);
      if (caption == null) {
        break missingId;
      }

      id = R.id.category;
      TextView category = ViewBindings.findChildViewById(rootView, id);
      if (category == null) {
        break missingId;
      }

      id = R.id.icon;
      ImageView icon = ViewBindings.findChildViewById(rootView, id);
      if (icon == null) {
        break missingId;
      }

      id = R.id.imageview;
      ImageView imageview = ViewBindings.findChildViewById(rootView, id);
      if (imageview == null) {
        break missingId;
      }

      id = R.id.iv_share;
      ImageView ivShare = ViewBindings.findChildViewById(rootView, id);
      if (ivShare == null) {
        break missingId;
      }

      id = R.id.linLayout_add_description;
      LinearLayout linLayoutAddDescription = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAddDescription == null) {
        break missingId;
      }

      id = R.id.linLayout_all_data;
      LinearLayout linLayoutAllData = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAllData == null) {
        break missingId;
      }

      id = R.id.linLayout_comment;
      LinearLayout linLayoutComment = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutComment == null) {
        break missingId;
      }

      id = R.id.linLayout_like_and_comment;
      LinearLayout linLayoutLikeAndComment = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutLikeAndComment == null) {
        break missingId;
      }

      id = R.id.linLayout_share;
      LinearLayout linLayoutShare = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutShare == null) {
        break missingId;
      }

      id = R.id.menu_item;
      ImageView menuItem = ViewBindings.findChildViewById(rootView, id);
      if (menuItem == null) {
        break missingId;
      }

      id = R.id.message_photo_insta;
      ImageView messagePhotoInsta = ViewBindings.findChildViewById(rootView, id);
      if (messagePhotoInsta == null) {
        break missingId;
      }

      id = R.id.number_of_comments;
      TextView numberOfComments = ViewBindings.findChildViewById(rootView, id);
      if (numberOfComments == null) {
        break missingId;
      }

      id = R.id.number_of_share;
      TextView numberOfShare = ViewBindings.findChildViewById(rootView, id);
      if (numberOfShare == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relLayout_username;
      RelativeLayout relLayoutUsername = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUsername == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.relLayout_write_to;
      RelativeLayout relLayoutWriteTo = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutWriteTo == null) {
        break missingId;
      }

      id = R.id.the_user;
      TextView theUser = ViewBindings.findChildViewById(rootView, id);
      if (theUser == null) {
        break missingId;
      }

      id = R.id.tps_publication;
      TextView tpsPublication = ViewBindings.findChildViewById(rootView, id);
      if (tpsPublication == null) {
        break missingId;
      }

      id = R.id.translate_comment;
      TextView translateComment = ViewBindings.findChildViewById(rootView, id);
      if (translateComment == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ActivityGroupImageDoubleFullImageShareBinding((RelativeLayout) rootView,
          addDescription, back, caption, category, icon, imageview, ivShare,
          linLayoutAddDescription, linLayoutAllData, linLayoutComment, linLayoutLikeAndComment,
          linLayoutShare, menuItem, messagePhotoInsta, numberOfComments, numberOfShare, parent,
          recyclerView, relLayoutUsername, relLayoutViewOverlay, relLayoutWriteTo, theUser,
          tpsPublication, translateComment, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
