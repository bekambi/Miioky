// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFollowApprobationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final TextView numberOfSubscriptionRequest;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RecyclerView recyclerViewSubscriptionRequest;

  @NonNull
  public final RelativeLayout relLayout1;

  @NonNull
  public final RelativeLayout relLayoutSubscriptionRequest;

  @NonNull
  public final RelativeLayout relLayoutSuggestion;

  @NonNull
  public final RelativeLayout relLayoutSuggestionFriend;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final RelativeLayout relLayoutYourFollowers;

  @NonNull
  public final HorizontalScrollView scrollView;

  @NonNull
  public final TextView seeAll;

  @NonNull
  public final TextView subscriptionRequest;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView tvVoirTout;

  private FragmentFollowApprobationBinding(@NonNull RelativeLayout rootView,
      @NonNull TouchDetectableScrollView nestedScrollView,
      @NonNull TextView numberOfSubscriptionRequest, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerView, @NonNull RecyclerView recyclerViewSubscriptionRequest,
      @NonNull RelativeLayout relLayout1, @NonNull RelativeLayout relLayoutSubscriptionRequest,
      @NonNull RelativeLayout relLayoutSuggestion,
      @NonNull RelativeLayout relLayoutSuggestionFriend,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull RelativeLayout relLayoutYourFollowers,
      @NonNull HorizontalScrollView scrollView, @NonNull TextView seeAll,
      @NonNull TextView subscriptionRequest, @NonNull TextView text, @NonNull TextView tvVoirTout) {
    this.rootView = rootView;
    this.nestedScrollView = nestedScrollView;
    this.numberOfSubscriptionRequest = numberOfSubscriptionRequest;
    this.progressBar = progressBar;
    this.recyclerView = recyclerView;
    this.recyclerViewSubscriptionRequest = recyclerViewSubscriptionRequest;
    this.relLayout1 = relLayout1;
    this.relLayoutSubscriptionRequest = relLayoutSubscriptionRequest;
    this.relLayoutSuggestion = relLayoutSuggestion;
    this.relLayoutSuggestionFriend = relLayoutSuggestionFriend;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.relLayoutYourFollowers = relLayoutYourFollowers;
    this.scrollView = scrollView;
    this.seeAll = seeAll;
    this.subscriptionRequest = subscriptionRequest;
    this.text = text;
    this.tvVoirTout = tvVoirTout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFollowApprobationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFollowApprobationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_follow_approbation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFollowApprobationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.number_of_subscription_request;
      TextView numberOfSubscriptionRequest = ViewBindings.findChildViewById(rootView, id);
      if (numberOfSubscriptionRequest == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.recyclerView_subscription_request;
      RecyclerView recyclerViewSubscriptionRequest = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewSubscriptionRequest == null) {
        break missingId;
      }

      id = R.id.relLayout1;
      RelativeLayout relLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout1 == null) {
        break missingId;
      }

      id = R.id.relLayout_subscription_request;
      RelativeLayout relLayoutSubscriptionRequest = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSubscriptionRequest == null) {
        break missingId;
      }

      id = R.id.relLayout_suggestion;
      RelativeLayout relLayoutSuggestion = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSuggestion == null) {
        break missingId;
      }

      id = R.id.relLayout_suggestion_friend;
      RelativeLayout relLayoutSuggestionFriend = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSuggestionFriend == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.relLayout_your_followers;
      RelativeLayout relLayoutYourFollowers = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutYourFollowers == null) {
        break missingId;
      }

      id = R.id.scrollView;
      HorizontalScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.see_all;
      TextView seeAll = ViewBindings.findChildViewById(rootView, id);
      if (seeAll == null) {
        break missingId;
      }

      id = R.id.subscription_request;
      TextView subscriptionRequest = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionRequest == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.tv_voir_tout;
      TextView tvVoirTout = ViewBindings.findChildViewById(rootView, id);
      if (tvVoirTout == null) {
        break missingId;
      }

      return new FragmentFollowApprobationBinding((RelativeLayout) rootView, nestedScrollView,
          numberOfSubscriptionRequest, progressBar, recyclerView, recyclerViewSubscriptionRequest,
          relLayout1, relLayoutSubscriptionRequest, relLayoutSuggestion, relLayoutSuggestionFriend,
          relLayoutViewOverlay, relLayoutYourFollowers, scrollView, seeAll, subscriptionRequest,
          text, tvVoirTout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
