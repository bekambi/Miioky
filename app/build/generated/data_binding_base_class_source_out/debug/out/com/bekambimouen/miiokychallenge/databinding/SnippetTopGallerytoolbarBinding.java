// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SnippetTopGallerytoolbarBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final TextView boutonValidate;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView imgPlayUn;

  @NonNull
  public final ImageView ivCloseShare;

  @NonNull
  public final ImageView ivPhoto;

  @NonNull
  public final RelativeLayout menuItem;

  @NonNull
  public final Toolbar profileToolBar;

  @NonNull
  public final RelativeLayout relLayout;

  @NonNull
  public final RelativeLayout relLayoutPhoto;

  @NonNull
  public final TextView toolBarTextview;

  @NonNull
  public final ImageView toolbarPhoto;

  @NonNull
  public final TextView tvNext;

  private SnippetTopGallerytoolbarBinding(@NonNull View rootView, @NonNull RelativeLayout arrowBack,
      @NonNull TextView boutonValidate, @NonNull CardView cardView, @NonNull ImageView imgPlayUn,
      @NonNull ImageView ivCloseShare, @NonNull ImageView ivPhoto, @NonNull RelativeLayout menuItem,
      @NonNull Toolbar profileToolBar, @NonNull RelativeLayout relLayout,
      @NonNull RelativeLayout relLayoutPhoto, @NonNull TextView toolBarTextview,
      @NonNull ImageView toolbarPhoto, @NonNull TextView tvNext) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.boutonValidate = boutonValidate;
    this.cardView = cardView;
    this.imgPlayUn = imgPlayUn;
    this.ivCloseShare = ivCloseShare;
    this.ivPhoto = ivPhoto;
    this.menuItem = menuItem;
    this.profileToolBar = profileToolBar;
    this.relLayout = relLayout;
    this.relLayoutPhoto = relLayoutPhoto;
    this.toolBarTextview = toolBarTextview;
    this.toolbarPhoto = toolbarPhoto;
    this.tvNext = tvNext;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static SnippetTopGallerytoolbarBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.snippet_top_gallerytoolbar, parent);
    return bind(parent);
  }

  @NonNull
  public static SnippetTopGallerytoolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.bouton_validate;
      TextView boutonValidate = ViewBindings.findChildViewById(rootView, id);
      if (boutonValidate == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.img_play_un;
      ImageView imgPlayUn = ViewBindings.findChildViewById(rootView, id);
      if (imgPlayUn == null) {
        break missingId;
      }

      id = R.id.ivCloseShare;
      ImageView ivCloseShare = ViewBindings.findChildViewById(rootView, id);
      if (ivCloseShare == null) {
        break missingId;
      }

      id = R.id.iv_photo;
      ImageView ivPhoto = ViewBindings.findChildViewById(rootView, id);
      if (ivPhoto == null) {
        break missingId;
      }

      id = R.id.menu_item;
      RelativeLayout menuItem = ViewBindings.findChildViewById(rootView, id);
      if (menuItem == null) {
        break missingId;
      }

      id = R.id.profileToolBar;
      Toolbar profileToolBar = ViewBindings.findChildViewById(rootView, id);
      if (profileToolBar == null) {
        break missingId;
      }

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      id = R.id.relLayout_photo;
      RelativeLayout relLayoutPhoto = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPhoto == null) {
        break missingId;
      }

      id = R.id.toolBar_textview;
      TextView toolBarTextview = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTextview == null) {
        break missingId;
      }

      id = R.id.toolbar_photo;
      ImageView toolbarPhoto = ViewBindings.findChildViewById(rootView, id);
      if (toolbarPhoto == null) {
        break missingId;
      }

      id = R.id.tv_Next;
      TextView tvNext = ViewBindings.findChildViewById(rootView, id);
      if (tvNext == null) {
        break missingId;
      }

      return new SnippetTopGallerytoolbarBinding(rootView, arrowBack, boutonValidate, cardView,
          imgPlayUn, ivCloseShare, ivPhoto, menuItem, profileToolBar, relLayout, relLayoutPhoto,
          toolBarTextview, toolbarPhoto, tvNext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
