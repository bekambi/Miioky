// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SnippetPubInstaDownloadPhotoBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final MyEditText editCaptionDownloadPhoto;

  @NonNull
  public final ProgressBar progressbarDownloadPhoto;

  @NonNull
  public final RecyclerView recyclerViewDownloadPhoto;

  @NonNull
  public final RelativeLayout relLayoutArrowBackDownloadPhoto;

  @NonNull
  public final RelativeLayout relLayoutPublish;

  @NonNull
  public final Toolbar toolbarDownloadPhoto;

  @NonNull
  public final TextView tvPublish;

  private SnippetPubInstaDownloadPhotoBinding(@NonNull View rootView,
      @NonNull MyEditText editCaptionDownloadPhoto, @NonNull ProgressBar progressbarDownloadPhoto,
      @NonNull RecyclerView recyclerViewDownloadPhoto,
      @NonNull RelativeLayout relLayoutArrowBackDownloadPhoto,
      @NonNull RelativeLayout relLayoutPublish, @NonNull Toolbar toolbarDownloadPhoto,
      @NonNull TextView tvPublish) {
    this.rootView = rootView;
    this.editCaptionDownloadPhoto = editCaptionDownloadPhoto;
    this.progressbarDownloadPhoto = progressbarDownloadPhoto;
    this.recyclerViewDownloadPhoto = recyclerViewDownloadPhoto;
    this.relLayoutArrowBackDownloadPhoto = relLayoutArrowBackDownloadPhoto;
    this.relLayoutPublish = relLayoutPublish;
    this.toolbarDownloadPhoto = toolbarDownloadPhoto;
    this.tvPublish = tvPublish;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static SnippetPubInstaDownloadPhotoBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.snippet_pub_insta_download_photo, parent);
    return bind(parent);
  }

  @NonNull
  public static SnippetPubInstaDownloadPhotoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_caption_download_photo;
      MyEditText editCaptionDownloadPhoto = ViewBindings.findChildViewById(rootView, id);
      if (editCaptionDownloadPhoto == null) {
        break missingId;
      }

      id = R.id.progressbar_download_photo;
      ProgressBar progressbarDownloadPhoto = ViewBindings.findChildViewById(rootView, id);
      if (progressbarDownloadPhoto == null) {
        break missingId;
      }

      id = R.id.recyclerView_download_photo;
      RecyclerView recyclerViewDownloadPhoto = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewDownloadPhoto == null) {
        break missingId;
      }

      id = R.id.relLayout_arrowBack_download_photo;
      RelativeLayout relLayoutArrowBackDownloadPhoto = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutArrowBackDownloadPhoto == null) {
        break missingId;
      }

      id = R.id.relLayout_publish;
      RelativeLayout relLayoutPublish = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPublish == null) {
        break missingId;
      }

      id = R.id.toolbar_download_photo;
      Toolbar toolbarDownloadPhoto = ViewBindings.findChildViewById(rootView, id);
      if (toolbarDownloadPhoto == null) {
        break missingId;
      }

      id = R.id.tv_publish;
      TextView tvPublish = ViewBindings.findChildViewById(rootView, id);
      if (tvPublish == null) {
        break missingId;
      }

      return new SnippetPubInstaDownloadPhotoBinding(rootView, editCaptionDownloadPhoto,
          progressbarDownloadPhoto, recyclerViewDownloadPhoto, relLayoutArrowBackDownloadPhoto,
          relLayoutPublish, toolbarDownloadPhoto, tvPublish);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
