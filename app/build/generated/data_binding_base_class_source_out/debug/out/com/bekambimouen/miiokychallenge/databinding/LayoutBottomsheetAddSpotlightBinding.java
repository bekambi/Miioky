// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBottomsheetAddSpotlightBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText addTitle;

  @NonNull
  public final RelativeLayout barreBottomsheet;

  @NonNull
  public final TextView buttonAddSpotlight;

  @NonNull
  public final CircleImageView coverPhoto;

  @NonNull
  public final RecyclerView recyclerBottomsheet;

  @NonNull
  public final RelativeLayout relLayout1;

  @NonNull
  public final RelativeLayout relLayoutFilterDone;

  @NonNull
  public final RelativeLayout relLayoutOneItem;

  @NonNull
  public final TextView text;

  @NonNull
  public final View view;

  private LayoutBottomsheetAddSpotlightBinding(@NonNull RelativeLayout rootView,
      @NonNull EditText addTitle, @NonNull RelativeLayout barreBottomsheet,
      @NonNull TextView buttonAddSpotlight, @NonNull CircleImageView coverPhoto,
      @NonNull RecyclerView recyclerBottomsheet, @NonNull RelativeLayout relLayout1,
      @NonNull RelativeLayout relLayoutFilterDone, @NonNull RelativeLayout relLayoutOneItem,
      @NonNull TextView text, @NonNull View view) {
    this.rootView = rootView;
    this.addTitle = addTitle;
    this.barreBottomsheet = barreBottomsheet;
    this.buttonAddSpotlight = buttonAddSpotlight;
    this.coverPhoto = coverPhoto;
    this.recyclerBottomsheet = recyclerBottomsheet;
    this.relLayout1 = relLayout1;
    this.relLayoutFilterDone = relLayoutFilterDone;
    this.relLayoutOneItem = relLayoutOneItem;
    this.text = text;
    this.view = view;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBottomsheetAddSpotlightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBottomsheetAddSpotlightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bottomsheet_add_spotlight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBottomsheetAddSpotlightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_title;
      EditText addTitle = ViewBindings.findChildViewById(rootView, id);
      if (addTitle == null) {
        break missingId;
      }

      id = R.id.barre_bottomsheet;
      RelativeLayout barreBottomsheet = ViewBindings.findChildViewById(rootView, id);
      if (barreBottomsheet == null) {
        break missingId;
      }

      id = R.id.button_add_spotlight;
      TextView buttonAddSpotlight = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddSpotlight == null) {
        break missingId;
      }

      id = R.id.cover_photo;
      CircleImageView coverPhoto = ViewBindings.findChildViewById(rootView, id);
      if (coverPhoto == null) {
        break missingId;
      }

      id = R.id.recycler_bottomsheet;
      RecyclerView recyclerBottomsheet = ViewBindings.findChildViewById(rootView, id);
      if (recyclerBottomsheet == null) {
        break missingId;
      }

      id = R.id.relLayout1;
      RelativeLayout relLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (relLayout1 == null) {
        break missingId;
      }

      id = R.id.relLayout_filter_done;
      RelativeLayout relLayoutFilterDone = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFilterDone == null) {
        break missingId;
      }

      id = R.id.relLayout_one_item;
      RelativeLayout relLayoutOneItem = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutOneItem == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new LayoutBottomsheetAddSpotlightBinding((RelativeLayout) rootView, addTitle,
          barreBottomsheet, buttonAddSpotlight, coverPhoto, recyclerBottomsheet, relLayout1,
          relLayoutFilterDone, relLayoutOneItem, text, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
