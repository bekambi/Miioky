// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDownloadResponseChallengeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView categoryDeux;

  @NonNull
  public final TextView categoryUn;

  @NonNull
  public final FrameLayout frameBattleVideosDeux;

  @NonNull
  public final FrameLayout frameUn;

  @NonNull
  public final TextView inviteComment;

  @NonNull
  public final TextView lS;

  @NonNull
  public final TextView lV;

  @NonNull
  public final ProgressBar mainProgressBar;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RelativeLayout relLayoutArrowBack;

  @NonNull
  public final RelativeLayout relLayoutCategoryDeux;

  @NonNull
  public final RelativeLayout relLayoutCategoryUn;

  @NonNull
  public final RelativeLayout relLayoutImgPlayDeux;

  @NonNull
  public final RelativeLayout relLayoutImgPlayUn;

  @NonNull
  public final RelativeLayout relLayoutPublish;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final MyEditText responseDescription;

  @NonNull
  public final ImageView thumbnailDeux;

  @NonNull
  public final ImageView thumbnailUn;

  @NonNull
  public final Toolbar toolbarPubPhoto;

  @NonNull
  public final TextView tvMsgVote;

  private ActivityDownloadResponseChallengeBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView categoryDeux, @NonNull TextView categoryUn,
      @NonNull FrameLayout frameBattleVideosDeux, @NonNull FrameLayout frameUn,
      @NonNull TextView inviteComment, @NonNull TextView lS, @NonNull TextView lV,
      @NonNull ProgressBar mainProgressBar, @NonNull RelativeLayout parent,
      @NonNull RelativeLayout relLayoutArrowBack, @NonNull RelativeLayout relLayoutCategoryDeux,
      @NonNull RelativeLayout relLayoutCategoryUn, @NonNull RelativeLayout relLayoutImgPlayDeux,
      @NonNull RelativeLayout relLayoutImgPlayUn, @NonNull RelativeLayout relLayoutPublish,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull MyEditText responseDescription,
      @NonNull ImageView thumbnailDeux, @NonNull ImageView thumbnailUn,
      @NonNull Toolbar toolbarPubPhoto, @NonNull TextView tvMsgVote) {
    this.rootView = rootView;
    this.categoryDeux = categoryDeux;
    this.categoryUn = categoryUn;
    this.frameBattleVideosDeux = frameBattleVideosDeux;
    this.frameUn = frameUn;
    this.inviteComment = inviteComment;
    this.lS = lS;
    this.lV = lV;
    this.mainProgressBar = mainProgressBar;
    this.parent = parent;
    this.relLayoutArrowBack = relLayoutArrowBack;
    this.relLayoutCategoryDeux = relLayoutCategoryDeux;
    this.relLayoutCategoryUn = relLayoutCategoryUn;
    this.relLayoutImgPlayDeux = relLayoutImgPlayDeux;
    this.relLayoutImgPlayUn = relLayoutImgPlayUn;
    this.relLayoutPublish = relLayoutPublish;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.responseDescription = responseDescription;
    this.thumbnailDeux = thumbnailDeux;
    this.thumbnailUn = thumbnailUn;
    this.toolbarPubPhoto = toolbarPubPhoto;
    this.tvMsgVote = tvMsgVote;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDownloadResponseChallengeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDownloadResponseChallengeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_download_response_challenge, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDownloadResponseChallengeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_deux;
      TextView categoryDeux = ViewBindings.findChildViewById(rootView, id);
      if (categoryDeux == null) {
        break missingId;
      }

      id = R.id.category_un;
      TextView categoryUn = ViewBindings.findChildViewById(rootView, id);
      if (categoryUn == null) {
        break missingId;
      }

      id = R.id.frame_battle_videos_deux;
      FrameLayout frameBattleVideosDeux = ViewBindings.findChildViewById(rootView, id);
      if (frameBattleVideosDeux == null) {
        break missingId;
      }

      id = R.id.frame_un;
      FrameLayout frameUn = ViewBindings.findChildViewById(rootView, id);
      if (frameUn == null) {
        break missingId;
      }

      id = R.id.invite_comment;
      TextView inviteComment = ViewBindings.findChildViewById(rootView, id);
      if (inviteComment == null) {
        break missingId;
      }

      id = R.id.l_s;
      TextView lS = ViewBindings.findChildViewById(rootView, id);
      if (lS == null) {
        break missingId;
      }

      id = R.id.l_v;
      TextView lV = ViewBindings.findChildViewById(rootView, id);
      if (lV == null) {
        break missingId;
      }

      id = R.id.main_progressBar;
      ProgressBar mainProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (mainProgressBar == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.relLayout_arrowBack;
      RelativeLayout relLayoutArrowBack = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutArrowBack == null) {
        break missingId;
      }

      id = R.id.relLayout_category_deux;
      RelativeLayout relLayoutCategoryDeux = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCategoryDeux == null) {
        break missingId;
      }

      id = R.id.relLayout_category_un;
      RelativeLayout relLayoutCategoryUn = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCategoryUn == null) {
        break missingId;
      }

      id = R.id.relLayout_img_play_deux;
      RelativeLayout relLayoutImgPlayDeux = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutImgPlayDeux == null) {
        break missingId;
      }

      id = R.id.relLayout_img_play_un;
      RelativeLayout relLayoutImgPlayUn = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutImgPlayUn == null) {
        break missingId;
      }

      id = R.id.relLayout_publish;
      RelativeLayout relLayoutPublish = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPublish == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.response_description;
      MyEditText responseDescription = ViewBindings.findChildViewById(rootView, id);
      if (responseDescription == null) {
        break missingId;
      }

      id = R.id.thumbnail_deux;
      ImageView thumbnailDeux = ViewBindings.findChildViewById(rootView, id);
      if (thumbnailDeux == null) {
        break missingId;
      }

      id = R.id.thumbnail_un;
      ImageView thumbnailUn = ViewBindings.findChildViewById(rootView, id);
      if (thumbnailUn == null) {
        break missingId;
      }

      id = R.id.toolbar_pub_photo;
      Toolbar toolbarPubPhoto = ViewBindings.findChildViewById(rootView, id);
      if (toolbarPubPhoto == null) {
        break missingId;
      }

      id = R.id.tv_msg_vote;
      TextView tvMsgVote = ViewBindings.findChildViewById(rootView, id);
      if (tvMsgVote == null) {
        break missingId;
      }

      return new ActivityDownloadResponseChallengeBinding((RelativeLayout) rootView, categoryDeux,
          categoryUn, frameBattleVideosDeux, frameUn, inviteComment, lS, lV, mainProgressBar,
          parent, relLayoutArrowBack, relLayoutCategoryDeux, relLayoutCategoryUn,
          relLayoutImgPlayDeux, relLayoutImgPlayUn, relLayoutPublish, relLayoutViewOverlay,
          responseDescription, thumbnailDeux, thumbnailUn, toolbarPubPhoto, tvMsgVote);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
