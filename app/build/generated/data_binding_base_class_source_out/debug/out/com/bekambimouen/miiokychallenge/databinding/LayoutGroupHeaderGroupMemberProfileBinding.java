// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutGroupHeaderGroupMemberProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView bio;

  @NonNull
  public final TextView btnInvite;

  @NonNull
  public final TextView btnManage;

  @NonNull
  public final TextView dateFollowing;

  @NonNull
  public final TextView discussion;

  @NonNull
  public final ImageView iconsMemberPoints;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout linLayoutAboutMe;

  @NonNull
  public final LinearLayout linLayoutMember;

  @NonNull
  public final LinearLayout linLayoutPoints;

  @NonNull
  public final TextView noYetPublication;

  @NonNull
  public final TextView numberOfFollowersAndFriend;

  @NonNull
  public final LinearLayout parent;

  @NonNull
  public final ImageView profilePhoto;

  @NonNull
  public final RelativeLayout relLayoutDiscussion;

  @NonNull
  public final RelativeLayout relLayoutNotMember;

  @NonNull
  public final RelativeLayout relLayoutNotPubYet;

  @NonNull
  public final RelativeLayout relLayoutSeeNotMemberProfile;

  @NonNull
  public final RelativeLayout relLayoutSeeTheProfile;

  @NonNull
  public final RelativeLayout relLayoutUpdate;

  @NonNull
  public final TextView seeTheProfile;

  @NonNull
  public final TextView txtPoints;

  @NonNull
  public final CircleImageView userProfilePhoto;

  @NonNull
  public final TextView username;

  private LayoutGroupHeaderGroupMemberProfileBinding(@NonNull LinearLayout rootView,
      @NonNull TextView bio, @NonNull TextView btnInvite, @NonNull TextView btnManage,
      @NonNull TextView dateFollowing, @NonNull TextView discussion,
      @NonNull ImageView iconsMemberPoints, @NonNull ImageView imageView,
      @NonNull LinearLayout linLayoutAboutMe, @NonNull LinearLayout linLayoutMember,
      @NonNull LinearLayout linLayoutPoints, @NonNull TextView noYetPublication,
      @NonNull TextView numberOfFollowersAndFriend, @NonNull LinearLayout parent,
      @NonNull ImageView profilePhoto, @NonNull RelativeLayout relLayoutDiscussion,
      @NonNull RelativeLayout relLayoutNotMember, @NonNull RelativeLayout relLayoutNotPubYet,
      @NonNull RelativeLayout relLayoutSeeNotMemberProfile,
      @NonNull RelativeLayout relLayoutSeeTheProfile, @NonNull RelativeLayout relLayoutUpdate,
      @NonNull TextView seeTheProfile, @NonNull TextView txtPoints,
      @NonNull CircleImageView userProfilePhoto, @NonNull TextView username) {
    this.rootView = rootView;
    this.bio = bio;
    this.btnInvite = btnInvite;
    this.btnManage = btnManage;
    this.dateFollowing = dateFollowing;
    this.discussion = discussion;
    this.iconsMemberPoints = iconsMemberPoints;
    this.imageView = imageView;
    this.linLayoutAboutMe = linLayoutAboutMe;
    this.linLayoutMember = linLayoutMember;
    this.linLayoutPoints = linLayoutPoints;
    this.noYetPublication = noYetPublication;
    this.numberOfFollowersAndFriend = numberOfFollowersAndFriend;
    this.parent = parent;
    this.profilePhoto = profilePhoto;
    this.relLayoutDiscussion = relLayoutDiscussion;
    this.relLayoutNotMember = relLayoutNotMember;
    this.relLayoutNotPubYet = relLayoutNotPubYet;
    this.relLayoutSeeNotMemberProfile = relLayoutSeeNotMemberProfile;
    this.relLayoutSeeTheProfile = relLayoutSeeTheProfile;
    this.relLayoutUpdate = relLayoutUpdate;
    this.seeTheProfile = seeTheProfile;
    this.txtPoints = txtPoints;
    this.userProfilePhoto = userProfilePhoto;
    this.username = username;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutGroupHeaderGroupMemberProfileBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutGroupHeaderGroupMemberProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_group_header_group_member_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutGroupHeaderGroupMemberProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bio;
      TextView bio = ViewBindings.findChildViewById(rootView, id);
      if (bio == null) {
        break missingId;
      }

      id = R.id.btn_invite;
      TextView btnInvite = ViewBindings.findChildViewById(rootView, id);
      if (btnInvite == null) {
        break missingId;
      }

      id = R.id.btn_manage;
      TextView btnManage = ViewBindings.findChildViewById(rootView, id);
      if (btnManage == null) {
        break missingId;
      }

      id = R.id.date_following;
      TextView dateFollowing = ViewBindings.findChildViewById(rootView, id);
      if (dateFollowing == null) {
        break missingId;
      }

      id = R.id.discussion;
      TextView discussion = ViewBindings.findChildViewById(rootView, id);
      if (discussion == null) {
        break missingId;
      }

      id = R.id.icons_member_points;
      ImageView iconsMemberPoints = ViewBindings.findChildViewById(rootView, id);
      if (iconsMemberPoints == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linLayout_about_me;
      LinearLayout linLayoutAboutMe = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAboutMe == null) {
        break missingId;
      }

      id = R.id.linLayout_member;
      LinearLayout linLayoutMember = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutMember == null) {
        break missingId;
      }

      id = R.id.linLayout_points;
      LinearLayout linLayoutPoints = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutPoints == null) {
        break missingId;
      }

      id = R.id.no_yet_publication;
      TextView noYetPublication = ViewBindings.findChildViewById(rootView, id);
      if (noYetPublication == null) {
        break missingId;
      }

      id = R.id.number_of_followers_and_friend;
      TextView numberOfFollowersAndFriend = ViewBindings.findChildViewById(rootView, id);
      if (numberOfFollowersAndFriend == null) {
        break missingId;
      }

      LinearLayout parent = (LinearLayout) rootView;

      id = R.id.profile_photo;
      ImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.relLayoutDiscussion;
      RelativeLayout relLayoutDiscussion = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutDiscussion == null) {
        break missingId;
      }

      id = R.id.relLayout_not_member;
      RelativeLayout relLayoutNotMember = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNotMember == null) {
        break missingId;
      }

      id = R.id.relLayout_not_pub_yet;
      RelativeLayout relLayoutNotPubYet = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNotPubYet == null) {
        break missingId;
      }

      id = R.id.relLayout_see_not_member_profile;
      RelativeLayout relLayoutSeeNotMemberProfile = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSeeNotMemberProfile == null) {
        break missingId;
      }

      id = R.id.relLayout_see_the_profile;
      RelativeLayout relLayoutSeeTheProfile = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSeeTheProfile == null) {
        break missingId;
      }

      id = R.id.relLayout_update;
      RelativeLayout relLayoutUpdate = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdate == null) {
        break missingId;
      }

      id = R.id.see_the_profile;
      TextView seeTheProfile = ViewBindings.findChildViewById(rootView, id);
      if (seeTheProfile == null) {
        break missingId;
      }

      id = R.id.txt_points;
      TextView txtPoints = ViewBindings.findChildViewById(rootView, id);
      if (txtPoints == null) {
        break missingId;
      }

      id = R.id.user_profile_photo;
      CircleImageView userProfilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (userProfilePhoto == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new LayoutGroupHeaderGroupMemberProfileBinding((LinearLayout) rootView, bio, btnInvite,
          btnManage, dateFollowing, discussion, iconsMemberPoints, imageView, linLayoutAboutMe,
          linLayoutMember, linLayoutPoints, noYetPublication, numberOfFollowersAndFriend, parent,
          profilePhoto, relLayoutDiscussion, relLayoutNotMember, relLayoutNotPubYet,
          relLayoutSeeNotMemberProfile, relLayoutSeeTheProfile, relLayoutUpdate, seeTheProfile,
          txtPoints, userProfilePhoto, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
