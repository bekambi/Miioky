// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBottomsheetUpdateProfileOrStoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView changeProfilePhoto;

  @NonNull
  public final LinearLayout linLayoutAddProfilePhoto;

  @NonNull
  public final LinearLayout linLayoutPublishAStory;

  @NonNull
  public final LinearLayout linLayoutViewBar;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final TextView publishAStory;

  private LayoutBottomsheetUpdateProfileOrStoryBinding(@NonNull LinearLayout rootView,
      @NonNull TextView changeProfilePhoto, @NonNull LinearLayout linLayoutAddProfilePhoto,
      @NonNull LinearLayout linLayoutPublishAStory, @NonNull LinearLayout linLayoutViewBar,
      @NonNull TouchDetectableScrollView nestedScrollView, @NonNull TextView publishAStory) {
    this.rootView = rootView;
    this.changeProfilePhoto = changeProfilePhoto;
    this.linLayoutAddProfilePhoto = linLayoutAddProfilePhoto;
    this.linLayoutPublishAStory = linLayoutPublishAStory;
    this.linLayoutViewBar = linLayoutViewBar;
    this.nestedScrollView = nestedScrollView;
    this.publishAStory = publishAStory;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBottomsheetUpdateProfileOrStoryBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBottomsheetUpdateProfileOrStoryBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bottomsheet_update_profile_or_story, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBottomsheetUpdateProfileOrStoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.change_profile_photo;
      TextView changeProfilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (changeProfilePhoto == null) {
        break missingId;
      }

      id = R.id.linLayout_add_profile_photo;
      LinearLayout linLayoutAddProfilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAddProfilePhoto == null) {
        break missingId;
      }

      id = R.id.linLayout_publish_a_story;
      LinearLayout linLayoutPublishAStory = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutPublishAStory == null) {
        break missingId;
      }

      id = R.id.linLayout_view_bar;
      LinearLayout linLayoutViewBar = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutViewBar == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.publish_a_story;
      TextView publishAStory = ViewBindings.findChildViewById(rootView, id);
      if (publishAStory == null) {
        break missingId;
      }

      return new LayoutBottomsheetUpdateProfileOrStoryBinding((LinearLayout) rootView,
          changeProfilePhoto, linLayoutAddProfilePhoto, linLayoutPublishAStory, linLayoutViewBar,
          nestedScrollView, publishAStory);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
