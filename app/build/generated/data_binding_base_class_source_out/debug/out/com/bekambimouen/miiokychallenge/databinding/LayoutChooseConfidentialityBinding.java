// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutChooseConfidentialityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnFinish;

  @NonNull
  public final TextView msgPrivate;

  @NonNull
  public final TextView msgPublic;

  @NonNull
  public final RadioButton radio1;

  @NonNull
  public final RadioButton radio2;

  @NonNull
  public final RadioGroup radios;

  @NonNull
  public final RelativeLayout relLayout;

  @NonNull
  public final TextView tvPrivate;

  @NonNull
  public final TextView tvPublic;

  private LayoutChooseConfidentialityBinding(@NonNull LinearLayout rootView,
      @NonNull TextView btnFinish, @NonNull TextView msgPrivate, @NonNull TextView msgPublic,
      @NonNull RadioButton radio1, @NonNull RadioButton radio2, @NonNull RadioGroup radios,
      @NonNull RelativeLayout relLayout, @NonNull TextView tvPrivate, @NonNull TextView tvPublic) {
    this.rootView = rootView;
    this.btnFinish = btnFinish;
    this.msgPrivate = msgPrivate;
    this.msgPublic = msgPublic;
    this.radio1 = radio1;
    this.radio2 = radio2;
    this.radios = radios;
    this.relLayout = relLayout;
    this.tvPrivate = tvPrivate;
    this.tvPublic = tvPublic;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutChooseConfidentialityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutChooseConfidentialityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_choose_confidentiality, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutChooseConfidentialityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_finish;
      TextView btnFinish = ViewBindings.findChildViewById(rootView, id);
      if (btnFinish == null) {
        break missingId;
      }

      id = R.id.msg_private;
      TextView msgPrivate = ViewBindings.findChildViewById(rootView, id);
      if (msgPrivate == null) {
        break missingId;
      }

      id = R.id.msg_public;
      TextView msgPublic = ViewBindings.findChildViewById(rootView, id);
      if (msgPublic == null) {
        break missingId;
      }

      id = R.id.radio1;
      RadioButton radio1 = ViewBindings.findChildViewById(rootView, id);
      if (radio1 == null) {
        break missingId;
      }

      id = R.id.radio2;
      RadioButton radio2 = ViewBindings.findChildViewById(rootView, id);
      if (radio2 == null) {
        break missingId;
      }

      id = R.id.radios;
      RadioGroup radios = ViewBindings.findChildViewById(rootView, id);
      if (radios == null) {
        break missingId;
      }

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      id = R.id.tv_private;
      TextView tvPrivate = ViewBindings.findChildViewById(rootView, id);
      if (tvPrivate == null) {
        break missingId;
      }

      id = R.id.tv_public;
      TextView tvPublic = ViewBindings.findChildViewById(rootView, id);
      if (tvPublic == null) {
        break missingId;
      }

      return new LayoutChooseConfidentialityBinding((LinearLayout) rootView, btnFinish, msgPrivate,
          msgPublic, radio1, radio2, radios, relLayout, tvPrivate, tvPublic);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
