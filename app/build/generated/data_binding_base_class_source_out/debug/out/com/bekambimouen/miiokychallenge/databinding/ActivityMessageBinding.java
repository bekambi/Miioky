// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import com.devlomi.record_view.RecordButton;
import com.devlomi.record_view.RecordView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMessageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView MessageActivityBtnSend;

  @NonNull
  public final MyEditText MessageActivityTextSend;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final ImageView arrowBackDelete;

  @NonNull
  public final ImageView cameraVideo;

  @NonNull
  public final ImageView delete;

  @NonNull
  public final ImageView iconePhoto;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RelativeLayout parentLayout;

  @NonNull
  public final ImageView phoneCall;

  @NonNull
  public final CircleImageView profilePhoto;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView receiversStatus;

  @NonNull
  public final RecordButton recordButton;

  @NonNull
  public final RecordView recordView;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout relLayout;

  @NonNull
  public final RelativeLayout relLayoutDelete;

  @NonNull
  public final RelativeLayout relLayoutFirstComment;

  @NonNull
  public final RelativeLayout relLayoutMessage;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final TextView selectionCount;

  @NonNull
  public final TextView text2;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView username;

  @NonNull
  public final View view;

  @NonNull
  public final TextView vueA;

  private ActivityMessageBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView MessageActivityBtnSend, @NonNull MyEditText MessageActivityTextSend,
      @NonNull RelativeLayout arrowBack, @NonNull ImageView arrowBackDelete,
      @NonNull ImageView cameraVideo, @NonNull ImageView delete, @NonNull ImageView iconePhoto,
      @NonNull ImageView imageView, @NonNull RelativeLayout parent,
      @NonNull RelativeLayout parentLayout, @NonNull ImageView phoneCall,
      @NonNull CircleImageView profilePhoto, @NonNull ProgressBar progressBar,
      @NonNull TextView receiversStatus, @NonNull RecordButton recordButton,
      @NonNull RecordView recordView, @NonNull RecyclerView recyclerView,
      @NonNull RelativeLayout relLayout, @NonNull RelativeLayout relLayoutDelete,
      @NonNull RelativeLayout relLayoutFirstComment, @NonNull RelativeLayout relLayoutMessage,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull TextView selectionCount,
      @NonNull TextView text2, @NonNull Toolbar toolbar, @NonNull TextView username,
      @NonNull View view, @NonNull TextView vueA) {
    this.rootView = rootView;
    this.MessageActivityBtnSend = MessageActivityBtnSend;
    this.MessageActivityTextSend = MessageActivityTextSend;
    this.arrowBack = arrowBack;
    this.arrowBackDelete = arrowBackDelete;
    this.cameraVideo = cameraVideo;
    this.delete = delete;
    this.iconePhoto = iconePhoto;
    this.imageView = imageView;
    this.parent = parent;
    this.parentLayout = parentLayout;
    this.phoneCall = phoneCall;
    this.profilePhoto = profilePhoto;
    this.progressBar = progressBar;
    this.receiversStatus = receiversStatus;
    this.recordButton = recordButton;
    this.recordView = recordView;
    this.recyclerView = recyclerView;
    this.relLayout = relLayout;
    this.relLayoutDelete = relLayoutDelete;
    this.relLayoutFirstComment = relLayoutFirstComment;
    this.relLayoutMessage = relLayoutMessage;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.selectionCount = selectionCount;
    this.text2 = text2;
    this.toolbar = toolbar;
    this.username = username;
    this.view = view;
    this.vueA = vueA;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.MessageActivity_btn_send;
      ImageView MessageActivityBtnSend = ViewBindings.findChildViewById(rootView, id);
      if (MessageActivityBtnSend == null) {
        break missingId;
      }

      id = R.id.MessageActivity_text_send;
      MyEditText MessageActivityTextSend = ViewBindings.findChildViewById(rootView, id);
      if (MessageActivityTextSend == null) {
        break missingId;
      }

      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.arrowBack_delete;
      ImageView arrowBackDelete = ViewBindings.findChildViewById(rootView, id);
      if (arrowBackDelete == null) {
        break missingId;
      }

      id = R.id.camera_video;
      ImageView cameraVideo = ViewBindings.findChildViewById(rootView, id);
      if (cameraVideo == null) {
        break missingId;
      }

      id = R.id.delete;
      ImageView delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.icone_photo;
      ImageView iconePhoto = ViewBindings.findChildViewById(rootView, id);
      if (iconePhoto == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.parent_layout;
      RelativeLayout parentLayout = ViewBindings.findChildViewById(rootView, id);
      if (parentLayout == null) {
        break missingId;
      }

      id = R.id.phone_call;
      ImageView phoneCall = ViewBindings.findChildViewById(rootView, id);
      if (phoneCall == null) {
        break missingId;
      }

      id = R.id.profile_photo;
      CircleImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.receiversStatus;
      TextView receiversStatus = ViewBindings.findChildViewById(rootView, id);
      if (receiversStatus == null) {
        break missingId;
      }

      id = R.id.record_button;
      RecordButton recordButton = ViewBindings.findChildViewById(rootView, id);
      if (recordButton == null) {
        break missingId;
      }

      id = R.id.record_view;
      RecordView recordView = ViewBindings.findChildViewById(rootView, id);
      if (recordView == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      id = R.id.relLayout_delete;
      RelativeLayout relLayoutDelete = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutDelete == null) {
        break missingId;
      }

      id = R.id.relLayout_first_comment;
      RelativeLayout relLayoutFirstComment = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFirstComment == null) {
        break missingId;
      }

      id = R.id.relLayout_message;
      RelativeLayout relLayoutMessage = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMessage == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.selection_count;
      TextView selectionCount = ViewBindings.findChildViewById(rootView, id);
      if (selectionCount == null) {
        break missingId;
      }

      id = R.id.text2;
      TextView text2 = ViewBindings.findChildViewById(rootView, id);
      if (text2 == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.vue_a;
      TextView vueA = ViewBindings.findChildViewById(rootView, id);
      if (vueA == null) {
        break missingId;
      }

      return new ActivityMessageBinding((RelativeLayout) rootView, MessageActivityBtnSend,
          MessageActivityTextSend, arrowBack, arrowBackDelete, cameraVideo, delete, iconePhoto,
          imageView, parent, parentLayout, phoneCall, profilePhoto, progressBar, receiversStatus,
          recordButton, recordView, recyclerView, relLayout, relLayoutDelete, relLayoutFirstComment,
          relLayoutMessage, relLayoutViewOverlay, selectionCount, text2, toolbar, username, view,
          vueA);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
