// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutMarketRecyclerviewYourStoreBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView itemsYouAreRented;

  @NonNull
  public final ProgressBar progressBarToRentOut;

  @NonNull
  public final RecyclerView recyclerViewToRentOut;

  @NonNull
  public final RecyclerView recyclerYourStores;

  @NonNull
  public final RelativeLayout relLayoutToRentOut;

  @NonNull
  public final TextView storesYouFollow;

  @NonNull
  public final TextView storesYouManage;

  private LayoutMarketRecyclerviewYourStoreBinding(@NonNull LinearLayout rootView,
      @NonNull TextView itemsYouAreRented, @NonNull ProgressBar progressBarToRentOut,
      @NonNull RecyclerView recyclerViewToRentOut, @NonNull RecyclerView recyclerYourStores,
      @NonNull RelativeLayout relLayoutToRentOut, @NonNull TextView storesYouFollow,
      @NonNull TextView storesYouManage) {
    this.rootView = rootView;
    this.itemsYouAreRented = itemsYouAreRented;
    this.progressBarToRentOut = progressBarToRentOut;
    this.recyclerViewToRentOut = recyclerViewToRentOut;
    this.recyclerYourStores = recyclerYourStores;
    this.relLayoutToRentOut = relLayoutToRentOut;
    this.storesYouFollow = storesYouFollow;
    this.storesYouManage = storesYouManage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutMarketRecyclerviewYourStoreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutMarketRecyclerviewYourStoreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_market_recyclerview_your_store, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutMarketRecyclerviewYourStoreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.items_you_are_rented;
      TextView itemsYouAreRented = ViewBindings.findChildViewById(rootView, id);
      if (itemsYouAreRented == null) {
        break missingId;
      }

      id = R.id.progressBar_to_rent_out;
      ProgressBar progressBarToRentOut = ViewBindings.findChildViewById(rootView, id);
      if (progressBarToRentOut == null) {
        break missingId;
      }

      id = R.id.recyclerView_to_rent_out;
      RecyclerView recyclerViewToRentOut = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewToRentOut == null) {
        break missingId;
      }

      id = R.id.recycler_your_stores;
      RecyclerView recyclerYourStores = ViewBindings.findChildViewById(rootView, id);
      if (recyclerYourStores == null) {
        break missingId;
      }

      id = R.id.relLayout_to_rent_out;
      RelativeLayout relLayoutToRentOut = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutToRentOut == null) {
        break missingId;
      }

      id = R.id.stores_you_follow;
      TextView storesYouFollow = ViewBindings.findChildViewById(rootView, id);
      if (storesYouFollow == null) {
        break missingId;
      }

      id = R.id.stores_you_manage;
      TextView storesYouManage = ViewBindings.findChildViewById(rootView, id);
      if (storesYouManage == null) {
        break missingId;
      }

      return new LayoutMarketRecyclerviewYourStoreBinding((LinearLayout) rootView,
          itemsYouAreRented, progressBarToRentOut, recyclerViewToRentOut, recyclerYourStores,
          relLayoutToRentOut, storesYouFollow, storesYouManage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
