// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.like_button_animation.SmallBangView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutStoreExplorerItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView commentIcon;

  @NonNull
  public final ImageView image;

  @NonNull
  public final SmallBangView likeHeart;

  @NonNull
  public final TextView numberOfComments;

  @NonNull
  public final TextView numberOfLikes;

  @NonNull
  public final RelativeLayout relLayoutCommentIcon;

  @NonNull
  public final ImageView storeImage;

  @NonNull
  public final TextView storeName;

  private LayoutStoreExplorerItemBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView commentIcon, @NonNull ImageView image, @NonNull SmallBangView likeHeart,
      @NonNull TextView numberOfComments, @NonNull TextView numberOfLikes,
      @NonNull RelativeLayout relLayoutCommentIcon, @NonNull ImageView storeImage,
      @NonNull TextView storeName) {
    this.rootView = rootView;
    this.commentIcon = commentIcon;
    this.image = image;
    this.likeHeart = likeHeart;
    this.numberOfComments = numberOfComments;
    this.numberOfLikes = numberOfLikes;
    this.relLayoutCommentIcon = relLayoutCommentIcon;
    this.storeImage = storeImage;
    this.storeName = storeName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutStoreExplorerItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutStoreExplorerItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_store_explorer_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutStoreExplorerItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comment_icon;
      ImageView commentIcon = ViewBindings.findChildViewById(rootView, id);
      if (commentIcon == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.like_heart;
      SmallBangView likeHeart = ViewBindings.findChildViewById(rootView, id);
      if (likeHeart == null) {
        break missingId;
      }

      id = R.id.number_of_comments;
      TextView numberOfComments = ViewBindings.findChildViewById(rootView, id);
      if (numberOfComments == null) {
        break missingId;
      }

      id = R.id.number_of_likes;
      TextView numberOfLikes = ViewBindings.findChildViewById(rootView, id);
      if (numberOfLikes == null) {
        break missingId;
      }

      id = R.id.relLayout_comment_icon;
      RelativeLayout relLayoutCommentIcon = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCommentIcon == null) {
        break missingId;
      }

      id = R.id.store_image;
      ImageView storeImage = ViewBindings.findChildViewById(rootView, id);
      if (storeImage == null) {
        break missingId;
      }

      id = R.id.store_name;
      TextView storeName = ViewBindings.findChildViewById(rootView, id);
      if (storeName == null) {
        break missingId;
      }

      return new LayoutStoreExplorerItemBinding((RelativeLayout) rootView, commentIcon, image,
          likeHeart, numberOfComments, numberOfLikes, relLayoutCommentIcon, storeImage, storeName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
