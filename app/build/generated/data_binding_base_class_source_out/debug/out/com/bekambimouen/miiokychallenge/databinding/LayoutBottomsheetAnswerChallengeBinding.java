// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBottomsheetAnswerChallengeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView category;

  @NonNull
  public final FrameLayout frameVideosUn;

  @NonNull
  public final LinearLayout linLayoutAnswerChallenge;

  @NonNull
  public final TextView publishAsStory;

  @NonNull
  public final RelativeLayout relLayoutImgPlayUn;

  @NonNull
  public final ImageView thumbnail;

  private LayoutBottomsheetAnswerChallengeBinding(@NonNull LinearLayout rootView,
      @NonNull TextView category, @NonNull FrameLayout frameVideosUn,
      @NonNull LinearLayout linLayoutAnswerChallenge, @NonNull TextView publishAsStory,
      @NonNull RelativeLayout relLayoutImgPlayUn, @NonNull ImageView thumbnail) {
    this.rootView = rootView;
    this.category = category;
    this.frameVideosUn = frameVideosUn;
    this.linLayoutAnswerChallenge = linLayoutAnswerChallenge;
    this.publishAsStory = publishAsStory;
    this.relLayoutImgPlayUn = relLayoutImgPlayUn;
    this.thumbnail = thumbnail;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBottomsheetAnswerChallengeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBottomsheetAnswerChallengeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bottomsheet_answer_challenge, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBottomsheetAnswerChallengeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category;
      TextView category = ViewBindings.findChildViewById(rootView, id);
      if (category == null) {
        break missingId;
      }

      id = R.id.frame_videos_un;
      FrameLayout frameVideosUn = ViewBindings.findChildViewById(rootView, id);
      if (frameVideosUn == null) {
        break missingId;
      }

      id = R.id.linLayout_answer_challenge;
      LinearLayout linLayoutAnswerChallenge = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAnswerChallenge == null) {
        break missingId;
      }

      id = R.id.publish_as_story;
      TextView publishAsStory = ViewBindings.findChildViewById(rootView, id);
      if (publishAsStory == null) {
        break missingId;
      }

      id = R.id.relLayout_img_play_un;
      RelativeLayout relLayoutImgPlayUn = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutImgPlayUn == null) {
        break missingId;
      }

      id = R.id.thumbnail;
      ImageView thumbnail = ViewBindings.findChildViewById(rootView, id);
      if (thumbnail == null) {
        break missingId;
      }

      return new LayoutBottomsheetAnswerChallengeBinding((LinearLayout) rootView, category,
          frameVideosUn, linLayoutAnswerChallenge, publishAsStory, relLayoutImgPlayUn, thumbnail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
