// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupMembershipBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final TextView buttonJoin;

  @NonNull
  public final TextView buttonRefuse;

  @NonNull
  public final ImageView close;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout linLayoutButtons;

  @NonNull
  public final LinearLayout linLayoutNumberOfMembership;

  @NonNull
  public final ProgressBar loadingProgressBar;

  @NonNull
  public final TextView noContentReport;

  @NonNull
  public final TextView numberOfDemand;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout relLayoutButtonCancel;

  @NonNull
  public final RelativeLayout relLayoutButtonJoin;

  @NonNull
  public final RelativeLayout relLayoutNoMembershipRequest;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarTextview;

  private ActivityGroupMembershipBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull TextView buttonJoin,
      @NonNull TextView buttonRefuse, @NonNull ImageView close, @NonNull ImageView imageView,
      @NonNull LinearLayout linLayoutButtons, @NonNull LinearLayout linLayoutNumberOfMembership,
      @NonNull ProgressBar loadingProgressBar, @NonNull TextView noContentReport,
      @NonNull TextView numberOfDemand, @NonNull RelativeLayout parent,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView recyclerView,
      @NonNull RelativeLayout relLayoutButtonCancel, @NonNull RelativeLayout relLayoutButtonJoin,
      @NonNull RelativeLayout relLayoutNoMembershipRequest,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull Toolbar toolBar,
      @NonNull TextView toolBarTextview) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.buttonJoin = buttonJoin;
    this.buttonRefuse = buttonRefuse;
    this.close = close;
    this.imageView = imageView;
    this.linLayoutButtons = linLayoutButtons;
    this.linLayoutNumberOfMembership = linLayoutNumberOfMembership;
    this.loadingProgressBar = loadingProgressBar;
    this.noContentReport = noContentReport;
    this.numberOfDemand = numberOfDemand;
    this.parent = parent;
    this.progressBar = progressBar;
    this.recyclerView = recyclerView;
    this.relLayoutButtonCancel = relLayoutButtonCancel;
    this.relLayoutButtonJoin = relLayoutButtonJoin;
    this.relLayoutNoMembershipRequest = relLayoutNoMembershipRequest;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.toolBar = toolBar;
    this.toolBarTextview = toolBarTextview;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupMembershipBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupMembershipBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_membership, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupMembershipBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.button_join;
      TextView buttonJoin = ViewBindings.findChildViewById(rootView, id);
      if (buttonJoin == null) {
        break missingId;
      }

      id = R.id.button_refuse;
      TextView buttonRefuse = ViewBindings.findChildViewById(rootView, id);
      if (buttonRefuse == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linLayout_buttons;
      LinearLayout linLayoutButtons = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutButtons == null) {
        break missingId;
      }

      id = R.id.linLayout_number_of_membership;
      LinearLayout linLayoutNumberOfMembership = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutNumberOfMembership == null) {
        break missingId;
      }

      id = R.id.loading_progressBar;
      ProgressBar loadingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBar == null) {
        break missingId;
      }

      id = R.id.no_content_report;
      TextView noContentReport = ViewBindings.findChildViewById(rootView, id);
      if (noContentReport == null) {
        break missingId;
      }

      id = R.id.number_of_demand;
      TextView numberOfDemand = ViewBindings.findChildViewById(rootView, id);
      if (numberOfDemand == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relLayout_button_cancel;
      RelativeLayout relLayoutButtonCancel = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonCancel == null) {
        break missingId;
      }

      id = R.id.relLayout_button_join;
      RelativeLayout relLayoutButtonJoin = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonJoin == null) {
        break missingId;
      }

      id = R.id.relLayout_no_membership_request;
      RelativeLayout relLayoutNoMembershipRequest = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNoMembershipRequest == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_textview;
      TextView toolBarTextview = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTextview == null) {
        break missingId;
      }

      return new ActivityGroupMembershipBinding((RelativeLayout) rootView, arrowBack, buttonJoin,
          buttonRefuse, close, imageView, linLayoutButtons, linLayoutNumberOfMembership,
          loadingProgressBar, noContentReport, numberOfDemand, parent, progressBar, recyclerView,
          relLayoutButtonCancel, relLayoutButtonJoin, relLayoutNoMembershipRequest,
          relLayoutViewOverlay, toolBar, toolBarTextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
