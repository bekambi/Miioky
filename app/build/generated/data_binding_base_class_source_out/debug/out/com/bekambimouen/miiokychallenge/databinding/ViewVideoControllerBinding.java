// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.video_trimmer.ui.widgets.CrystalRangeSeekbar;
import com.bekambimouen.miiokychallenge.video_trimmer.ui.widgets.CrystalSeekbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewVideoControllerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView imageEight;

  @NonNull
  public final ImageView imageFive;

  @NonNull
  public final ImageView imageFour;

  @NonNull
  public final ImageView imageOne;

  @NonNull
  public final ImageView imageSeven;

  @NonNull
  public final ImageView imageSix;

  @NonNull
  public final ImageView imageThree;

  @NonNull
  public final ImageView imageTwo;

  @NonNull
  public final CrystalRangeSeekbar rangeSeekBar;

  @NonNull
  public final CrystalSeekbar seekbarController;

  @NonNull
  public final LinearLayout viewImage;

  private ViewVideoControllerBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView imageEight, @NonNull ImageView imageFive, @NonNull ImageView imageFour,
      @NonNull ImageView imageOne, @NonNull ImageView imageSeven, @NonNull ImageView imageSix,
      @NonNull ImageView imageThree, @NonNull ImageView imageTwo,
      @NonNull CrystalRangeSeekbar rangeSeekBar, @NonNull CrystalSeekbar seekbarController,
      @NonNull LinearLayout viewImage) {
    this.rootView = rootView;
    this.imageEight = imageEight;
    this.imageFive = imageFive;
    this.imageFour = imageFour;
    this.imageOne = imageOne;
    this.imageSeven = imageSeven;
    this.imageSix = imageSix;
    this.imageThree = imageThree;
    this.imageTwo = imageTwo;
    this.rangeSeekBar = rangeSeekBar;
    this.seekbarController = seekbarController;
    this.viewImage = viewImage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewVideoControllerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewVideoControllerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_video_controller, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewVideoControllerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_eight;
      ImageView imageEight = ViewBindings.findChildViewById(rootView, id);
      if (imageEight == null) {
        break missingId;
      }

      id = R.id.image_five;
      ImageView imageFive = ViewBindings.findChildViewById(rootView, id);
      if (imageFive == null) {
        break missingId;
      }

      id = R.id.image_four;
      ImageView imageFour = ViewBindings.findChildViewById(rootView, id);
      if (imageFour == null) {
        break missingId;
      }

      id = R.id.image_one;
      ImageView imageOne = ViewBindings.findChildViewById(rootView, id);
      if (imageOne == null) {
        break missingId;
      }

      id = R.id.image_seven;
      ImageView imageSeven = ViewBindings.findChildViewById(rootView, id);
      if (imageSeven == null) {
        break missingId;
      }

      id = R.id.image_six;
      ImageView imageSix = ViewBindings.findChildViewById(rootView, id);
      if (imageSix == null) {
        break missingId;
      }

      id = R.id.image_three;
      ImageView imageThree = ViewBindings.findChildViewById(rootView, id);
      if (imageThree == null) {
        break missingId;
      }

      id = R.id.image_two;
      ImageView imageTwo = ViewBindings.findChildViewById(rootView, id);
      if (imageTwo == null) {
        break missingId;
      }

      id = R.id.range_seek_bar;
      CrystalRangeSeekbar rangeSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (rangeSeekBar == null) {
        break missingId;
      }

      id = R.id.seekbar_controller;
      CrystalSeekbar seekbarController = ViewBindings.findChildViewById(rootView, id);
      if (seekbarController == null) {
        break missingId;
      }

      id = R.id.view_image;
      LinearLayout viewImage = ViewBindings.findChildViewById(rootView, id);
      if (viewImage == null) {
        break missingId;
      }

      return new ViewVideoControllerBinding((RelativeLayout) rootView, imageEight, imageFive,
          imageFour, imageOne, imageSeven, imageSix, imageThree, imageTwo, rangeSeekBar,
          seekbarController, viewImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
