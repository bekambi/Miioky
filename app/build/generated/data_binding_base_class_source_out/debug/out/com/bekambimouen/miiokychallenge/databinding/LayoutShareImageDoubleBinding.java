// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutShareImageDoubleBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout frameBattleVideosDeux;

  @NonNull
  public final FrameLayout frameUn;

  @NonNull
  public final RelativeLayout relLayoutImgPlayDeux;

  @NonNull
  public final RelativeLayout relLayoutImgPlayUn;

  @NonNull
  public final ImageView thumbnailDeux;

  @NonNull
  public final ImageView thumbnailUn;

  private LayoutShareImageDoubleBinding(@NonNull LinearLayout rootView,
      @NonNull FrameLayout frameBattleVideosDeux, @NonNull FrameLayout frameUn,
      @NonNull RelativeLayout relLayoutImgPlayDeux, @NonNull RelativeLayout relLayoutImgPlayUn,
      @NonNull ImageView thumbnailDeux, @NonNull ImageView thumbnailUn) {
    this.rootView = rootView;
    this.frameBattleVideosDeux = frameBattleVideosDeux;
    this.frameUn = frameUn;
    this.relLayoutImgPlayDeux = relLayoutImgPlayDeux;
    this.relLayoutImgPlayUn = relLayoutImgPlayUn;
    this.thumbnailDeux = thumbnailDeux;
    this.thumbnailUn = thumbnailUn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutShareImageDoubleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutShareImageDoubleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_share_image_double, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutShareImageDoubleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frame_battle_videos_deux;
      FrameLayout frameBattleVideosDeux = ViewBindings.findChildViewById(rootView, id);
      if (frameBattleVideosDeux == null) {
        break missingId;
      }

      id = R.id.frame_un;
      FrameLayout frameUn = ViewBindings.findChildViewById(rootView, id);
      if (frameUn == null) {
        break missingId;
      }

      id = R.id.relLayout_img_play_deux;
      RelativeLayout relLayoutImgPlayDeux = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutImgPlayDeux == null) {
        break missingId;
      }

      id = R.id.relLayout_img_play_un;
      RelativeLayout relLayoutImgPlayUn = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutImgPlayUn == null) {
        break missingId;
      }

      id = R.id.thumbnail_deux;
      ImageView thumbnailDeux = ViewBindings.findChildViewById(rootView, id);
      if (thumbnailDeux == null) {
        break missingId;
      }

      id = R.id.thumbnail_un;
      ImageView thumbnailUn = ViewBindings.findChildViewById(rootView, id);
      if (thumbnailUn == null) {
        break missingId;
      }

      return new LayoutShareImageDoubleBinding((LinearLayout) rootView, frameBattleVideosDeux,
          frameUn, relLayoutImgPlayDeux, relLayoutImgPlayUn, thumbnailDeux, thumbnailUn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
