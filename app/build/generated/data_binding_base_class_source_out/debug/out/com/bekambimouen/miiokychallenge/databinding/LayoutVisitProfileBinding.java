// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutVisitProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView buttonFollow;

  @NonNull
  public final TextView buttonSent;

  @NonNull
  public final TextView buttonUnfollow;

  @NonNull
  public final TextView fullName;

  @NonNull
  public final TextView lastDate;

  @NonNull
  public final LinearLayout linLayoutUsername;

  @NonNull
  public final CircleImageView memberI;

  @NonNull
  public final CircleImageView memberIi;

  @NonNull
  public final TextView numberOfCommonFriends;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final CircleImageView profilePhoto;

  @NonNull
  public final RelativeLayout relLayout;

  @NonNull
  public final RelativeLayout relLayoutAllButtons;

  @NonNull
  public final RelativeLayout relLayoutAllProfilePhotos;

  @NonNull
  public final RelativeLayout relLayoutFollow;

  @NonNull
  public final RelativeLayout relLayoutMemberI;

  @NonNull
  public final RelativeLayout relLayoutMemberIi;

  @NonNull
  public final RelativeLayout relLayoutProfileFriends;

  @NonNull
  public final RelativeLayout relLayoutUnfriend;

  @NonNull
  public final TextView textFriend;

  @NonNull
  public final TextView username;

  @NonNull
  public final TextView views;

  private LayoutVisitProfileBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView buttonFollow, @NonNull TextView buttonSent,
      @NonNull TextView buttonUnfollow, @NonNull TextView fullName, @NonNull TextView lastDate,
      @NonNull LinearLayout linLayoutUsername, @NonNull CircleImageView memberI,
      @NonNull CircleImageView memberIi, @NonNull TextView numberOfCommonFriends,
      @NonNull RelativeLayout parent, @NonNull CircleImageView profilePhoto,
      @NonNull RelativeLayout relLayout, @NonNull RelativeLayout relLayoutAllButtons,
      @NonNull RelativeLayout relLayoutAllProfilePhotos, @NonNull RelativeLayout relLayoutFollow,
      @NonNull RelativeLayout relLayoutMemberI, @NonNull RelativeLayout relLayoutMemberIi,
      @NonNull RelativeLayout relLayoutProfileFriends, @NonNull RelativeLayout relLayoutUnfriend,
      @NonNull TextView textFriend, @NonNull TextView username, @NonNull TextView views) {
    this.rootView = rootView;
    this.buttonFollow = buttonFollow;
    this.buttonSent = buttonSent;
    this.buttonUnfollow = buttonUnfollow;
    this.fullName = fullName;
    this.lastDate = lastDate;
    this.linLayoutUsername = linLayoutUsername;
    this.memberI = memberI;
    this.memberIi = memberIi;
    this.numberOfCommonFriends = numberOfCommonFriends;
    this.parent = parent;
    this.profilePhoto = profilePhoto;
    this.relLayout = relLayout;
    this.relLayoutAllButtons = relLayoutAllButtons;
    this.relLayoutAllProfilePhotos = relLayoutAllProfilePhotos;
    this.relLayoutFollow = relLayoutFollow;
    this.relLayoutMemberI = relLayoutMemberI;
    this.relLayoutMemberIi = relLayoutMemberIi;
    this.relLayoutProfileFriends = relLayoutProfileFriends;
    this.relLayoutUnfriend = relLayoutUnfriend;
    this.textFriend = textFriend;
    this.username = username;
    this.views = views;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutVisitProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutVisitProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_visit_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutVisitProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_follow;
      TextView buttonFollow = ViewBindings.findChildViewById(rootView, id);
      if (buttonFollow == null) {
        break missingId;
      }

      id = R.id.button_sent;
      TextView buttonSent = ViewBindings.findChildViewById(rootView, id);
      if (buttonSent == null) {
        break missingId;
      }

      id = R.id.button_unfollow;
      TextView buttonUnfollow = ViewBindings.findChildViewById(rootView, id);
      if (buttonUnfollow == null) {
        break missingId;
      }

      id = R.id.full_name;
      TextView fullName = ViewBindings.findChildViewById(rootView, id);
      if (fullName == null) {
        break missingId;
      }

      id = R.id.last_date;
      TextView lastDate = ViewBindings.findChildViewById(rootView, id);
      if (lastDate == null) {
        break missingId;
      }

      id = R.id.linLayout_username;
      LinearLayout linLayoutUsername = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutUsername == null) {
        break missingId;
      }

      id = R.id.member_i;
      CircleImageView memberI = ViewBindings.findChildViewById(rootView, id);
      if (memberI == null) {
        break missingId;
      }

      id = R.id.member_ii;
      CircleImageView memberIi = ViewBindings.findChildViewById(rootView, id);
      if (memberIi == null) {
        break missingId;
      }

      id = R.id.number_of_common_friends;
      TextView numberOfCommonFriends = ViewBindings.findChildViewById(rootView, id);
      if (numberOfCommonFriends == null) {
        break missingId;
      }

      id = R.id.parent;
      RelativeLayout parent = ViewBindings.findChildViewById(rootView, id);
      if (parent == null) {
        break missingId;
      }

      id = R.id.profile_photo;
      CircleImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      id = R.id.relLayout_all_buttons;
      RelativeLayout relLayoutAllButtons = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAllButtons == null) {
        break missingId;
      }

      id = R.id.relLayout_all_profile_photos;
      RelativeLayout relLayoutAllProfilePhotos = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAllProfilePhotos == null) {
        break missingId;
      }

      id = R.id.relLayout_follow;
      RelativeLayout relLayoutFollow = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutFollow == null) {
        break missingId;
      }

      id = R.id.relLayout_member_i;
      RelativeLayout relLayoutMemberI = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMemberI == null) {
        break missingId;
      }

      id = R.id.relLayout_member_ii;
      RelativeLayout relLayoutMemberIi = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMemberIi == null) {
        break missingId;
      }

      id = R.id.relLayout_profile_friends;
      RelativeLayout relLayoutProfileFriends = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutProfileFriends == null) {
        break missingId;
      }

      id = R.id.relLayout_unfriend;
      RelativeLayout relLayoutUnfriend = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUnfriend == null) {
        break missingId;
      }

      id = R.id.text_friend;
      TextView textFriend = ViewBindings.findChildViewById(rootView, id);
      if (textFriend == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.views;
      TextView views = ViewBindings.findChildViewById(rootView, id);
      if (views == null) {
        break missingId;
      }

      return new LayoutVisitProfileBinding((RelativeLayout) rootView, buttonFollow, buttonSent,
          buttonUnfollow, fullName, lastDate, linLayoutUsername, memberI, memberIi,
          numberOfCommonFriends, parent, profilePhoto, relLayout, relLayoutAllButtons,
          relLayoutAllProfilePhotos, relLayoutFollow, relLayoutMemberI, relLayoutMemberIi,
          relLayoutProfileFriends, relLayoutUnfriend, textFriend, username, views);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
