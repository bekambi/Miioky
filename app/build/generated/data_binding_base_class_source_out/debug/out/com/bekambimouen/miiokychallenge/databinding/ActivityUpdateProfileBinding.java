// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView addCollege;

  @NonNull
  public final TextView addEstablishment;

  @NonNull
  public final TextView addWorkplace;

  @NonNull
  public final RelativeLayout backArrow;

  @NonNull
  public final TextView bio;

  @NonNull
  public final TextView buttonText;

  @NonNull
  public final AutoCompleteTextView editAddCollege;

  @NonNull
  public final MyEditText editAddCollegeHeader;

  @NonNull
  public final AutoCompleteTextView editAddEstablishment;

  @NonNull
  public final MyEditText editAddEstablishmentHeader;

  @NonNull
  public final AutoCompleteTextView editAddWorkplace;

  @NonNull
  public final MyEditText editAddWorkplaceHeader;

  @NonNull
  public final MyEditText editBio;

  @NonNull
  public final AutoCompleteTextView editEstablishmentName;

  @NonNull
  public final MyEditText editEstablishmentNameHeader;

  @NonNull
  public final MyEditText editName;

  @NonNull
  public final AutoCompleteTextView editNeighborhoodName;

  @NonNull
  public final AutoCompleteTextView editSchoolName;

  @NonNull
  public final MyEditText editSchoolNameHeader;

  @NonNull
  public final AutoCompleteTextView editTownName;

  @NonNull
  public final MyEditText editUsername;

  @NonNull
  public final AutoCompleteTextView editWorkplaceName;

  @NonNull
  public final MyEditText editWorkplaceNameHeader;

  @NonNull
  public final TextView establishmentName;

  @NonNull
  public final TextView genter;

  @NonNull
  public final LinearLayout linLayoutNberCharSequence;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final TextView maritalStatus;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView nberCharSequence;

  @NonNull
  public final TextView neighborhoodName;

  @NonNull
  public final TextView pseudo;

  @NonNull
  public final RadioButton radioBinaryName;

  @NonNull
  public final RadioButton radioDivorced;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final RadioGroup radioGroupGenter;

  @NonNull
  public final RadioButton radioInARelationshipWith;

  @NonNull
  public final RadioButton radioMan;

  @NonNull
  public final RadioButton radioMarried;

  @NonNull
  public final RadioButton radioOther;

  @NonNull
  public final RadioButton radioOtherGender;

  @NonNull
  public final RadioButton radioSeparated;

  @NonNull
  public final RadioButton radioSingle;

  @NonNull
  public final RadioButton radioWomen;

  @NonNull
  public final RelativeLayout relLayoutAddCollege;

  @NonNull
  public final RelativeLayout relLayoutAddEstablishment;

  @NonNull
  public final RelativeLayout relLayoutAddWorkplace;

  @NonNull
  public final RelativeLayout relLayoutBio;

  @NonNull
  public final RelativeLayout relLayoutButton;

  @NonNull
  public final RelativeLayout relLayoutCollege;

  @NonNull
  public final RelativeLayout relLayoutEstablishment;

  @NonNull
  public final RelativeLayout relLayoutEstablishmentName;

  @NonNull
  public final RelativeLayout relLayoutName;

  @NonNull
  public final RelativeLayout relLayoutNeighborhoodName;

  @NonNull
  public final RelativeLayout relLayoutSchoolName;

  @NonNull
  public final RelativeLayout relLayoutTownName;

  @NonNull
  public final RelativeLayout relLayoutUpdateBio;

  @NonNull
  public final RelativeLayout relLayoutUpdateEstablishmentName;

  @NonNull
  public final RelativeLayout relLayoutUpdateGenter;

  @NonNull
  public final RelativeLayout relLayoutUpdateMaritalStatus;

  @NonNull
  public final RelativeLayout relLayoutUpdateName;

  @NonNull
  public final RelativeLayout relLayoutUpdateNeighborhoodName;

  @NonNull
  public final RelativeLayout relLayoutUpdateSchoolName;

  @NonNull
  public final RelativeLayout relLayoutUpdateTownName;

  @NonNull
  public final RelativeLayout relLayoutUpdateUsername;

  @NonNull
  public final RelativeLayout relLayoutUpdateWorkplaceName;

  @NonNull
  public final RelativeLayout relLayoutUsername;

  @NonNull
  public final RelativeLayout relLayoutWorkplace;

  @NonNull
  public final RelativeLayout relLayoutWorkplaceName;

  @NonNull
  public final TextView schoolName;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView townName;

  @NonNull
  public final TextView txtUpdate;

  @NonNull
  public final TextView workplaceName;

  private ActivityUpdateProfileBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView addCollege, @NonNull TextView addEstablishment,
      @NonNull TextView addWorkplace, @NonNull RelativeLayout backArrow, @NonNull TextView bio,
      @NonNull TextView buttonText, @NonNull AutoCompleteTextView editAddCollege,
      @NonNull MyEditText editAddCollegeHeader, @NonNull AutoCompleteTextView editAddEstablishment,
      @NonNull MyEditText editAddEstablishmentHeader,
      @NonNull AutoCompleteTextView editAddWorkplace, @NonNull MyEditText editAddWorkplaceHeader,
      @NonNull MyEditText editBio, @NonNull AutoCompleteTextView editEstablishmentName,
      @NonNull MyEditText editEstablishmentNameHeader, @NonNull MyEditText editName,
      @NonNull AutoCompleteTextView editNeighborhoodName,
      @NonNull AutoCompleteTextView editSchoolName, @NonNull MyEditText editSchoolNameHeader,
      @NonNull AutoCompleteTextView editTownName, @NonNull MyEditText editUsername,
      @NonNull AutoCompleteTextView editWorkplaceName, @NonNull MyEditText editWorkplaceNameHeader,
      @NonNull TextView establishmentName, @NonNull TextView genter,
      @NonNull LinearLayout linLayoutNberCharSequence, @NonNull RelativeLayout main,
      @NonNull TextView maritalStatus, @NonNull TextView name, @NonNull TextView nberCharSequence,
      @NonNull TextView neighborhoodName, @NonNull TextView pseudo,
      @NonNull RadioButton radioBinaryName, @NonNull RadioButton radioDivorced,
      @NonNull RadioGroup radioGroup, @NonNull RadioGroup radioGroupGenter,
      @NonNull RadioButton radioInARelationshipWith, @NonNull RadioButton radioMan,
      @NonNull RadioButton radioMarried, @NonNull RadioButton radioOther,
      @NonNull RadioButton radioOtherGender, @NonNull RadioButton radioSeparated,
      @NonNull RadioButton radioSingle, @NonNull RadioButton radioWomen,
      @NonNull RelativeLayout relLayoutAddCollege,
      @NonNull RelativeLayout relLayoutAddEstablishment,
      @NonNull RelativeLayout relLayoutAddWorkplace, @NonNull RelativeLayout relLayoutBio,
      @NonNull RelativeLayout relLayoutButton, @NonNull RelativeLayout relLayoutCollege,
      @NonNull RelativeLayout relLayoutEstablishment,
      @NonNull RelativeLayout relLayoutEstablishmentName, @NonNull RelativeLayout relLayoutName,
      @NonNull RelativeLayout relLayoutNeighborhoodName,
      @NonNull RelativeLayout relLayoutSchoolName, @NonNull RelativeLayout relLayoutTownName,
      @NonNull RelativeLayout relLayoutUpdateBio,
      @NonNull RelativeLayout relLayoutUpdateEstablishmentName,
      @NonNull RelativeLayout relLayoutUpdateGenter,
      @NonNull RelativeLayout relLayoutUpdateMaritalStatus,
      @NonNull RelativeLayout relLayoutUpdateName,
      @NonNull RelativeLayout relLayoutUpdateNeighborhoodName,
      @NonNull RelativeLayout relLayoutUpdateSchoolName,
      @NonNull RelativeLayout relLayoutUpdateTownName,
      @NonNull RelativeLayout relLayoutUpdateUsername,
      @NonNull RelativeLayout relLayoutUpdateWorkplaceName,
      @NonNull RelativeLayout relLayoutUsername, @NonNull RelativeLayout relLayoutWorkplace,
      @NonNull RelativeLayout relLayoutWorkplaceName, @NonNull TextView schoolName,
      @NonNull Toolbar toolBar, @NonNull TextView townName, @NonNull TextView txtUpdate,
      @NonNull TextView workplaceName) {
    this.rootView = rootView;
    this.addCollege = addCollege;
    this.addEstablishment = addEstablishment;
    this.addWorkplace = addWorkplace;
    this.backArrow = backArrow;
    this.bio = bio;
    this.buttonText = buttonText;
    this.editAddCollege = editAddCollege;
    this.editAddCollegeHeader = editAddCollegeHeader;
    this.editAddEstablishment = editAddEstablishment;
    this.editAddEstablishmentHeader = editAddEstablishmentHeader;
    this.editAddWorkplace = editAddWorkplace;
    this.editAddWorkplaceHeader = editAddWorkplaceHeader;
    this.editBio = editBio;
    this.editEstablishmentName = editEstablishmentName;
    this.editEstablishmentNameHeader = editEstablishmentNameHeader;
    this.editName = editName;
    this.editNeighborhoodName = editNeighborhoodName;
    this.editSchoolName = editSchoolName;
    this.editSchoolNameHeader = editSchoolNameHeader;
    this.editTownName = editTownName;
    this.editUsername = editUsername;
    this.editWorkplaceName = editWorkplaceName;
    this.editWorkplaceNameHeader = editWorkplaceNameHeader;
    this.establishmentName = establishmentName;
    this.genter = genter;
    this.linLayoutNberCharSequence = linLayoutNberCharSequence;
    this.main = main;
    this.maritalStatus = maritalStatus;
    this.name = name;
    this.nberCharSequence = nberCharSequence;
    this.neighborhoodName = neighborhoodName;
    this.pseudo = pseudo;
    this.radioBinaryName = radioBinaryName;
    this.radioDivorced = radioDivorced;
    this.radioGroup = radioGroup;
    this.radioGroupGenter = radioGroupGenter;
    this.radioInARelationshipWith = radioInARelationshipWith;
    this.radioMan = radioMan;
    this.radioMarried = radioMarried;
    this.radioOther = radioOther;
    this.radioOtherGender = radioOtherGender;
    this.radioSeparated = radioSeparated;
    this.radioSingle = radioSingle;
    this.radioWomen = radioWomen;
    this.relLayoutAddCollege = relLayoutAddCollege;
    this.relLayoutAddEstablishment = relLayoutAddEstablishment;
    this.relLayoutAddWorkplace = relLayoutAddWorkplace;
    this.relLayoutBio = relLayoutBio;
    this.relLayoutButton = relLayoutButton;
    this.relLayoutCollege = relLayoutCollege;
    this.relLayoutEstablishment = relLayoutEstablishment;
    this.relLayoutEstablishmentName = relLayoutEstablishmentName;
    this.relLayoutName = relLayoutName;
    this.relLayoutNeighborhoodName = relLayoutNeighborhoodName;
    this.relLayoutSchoolName = relLayoutSchoolName;
    this.relLayoutTownName = relLayoutTownName;
    this.relLayoutUpdateBio = relLayoutUpdateBio;
    this.relLayoutUpdateEstablishmentName = relLayoutUpdateEstablishmentName;
    this.relLayoutUpdateGenter = relLayoutUpdateGenter;
    this.relLayoutUpdateMaritalStatus = relLayoutUpdateMaritalStatus;
    this.relLayoutUpdateName = relLayoutUpdateName;
    this.relLayoutUpdateNeighborhoodName = relLayoutUpdateNeighborhoodName;
    this.relLayoutUpdateSchoolName = relLayoutUpdateSchoolName;
    this.relLayoutUpdateTownName = relLayoutUpdateTownName;
    this.relLayoutUpdateUsername = relLayoutUpdateUsername;
    this.relLayoutUpdateWorkplaceName = relLayoutUpdateWorkplaceName;
    this.relLayoutUsername = relLayoutUsername;
    this.relLayoutWorkplace = relLayoutWorkplace;
    this.relLayoutWorkplaceName = relLayoutWorkplaceName;
    this.schoolName = schoolName;
    this.toolBar = toolBar;
    this.townName = townName;
    this.txtUpdate = txtUpdate;
    this.workplaceName = workplaceName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_college;
      TextView addCollege = ViewBindings.findChildViewById(rootView, id);
      if (addCollege == null) {
        break missingId;
      }

      id = R.id.add_establishment;
      TextView addEstablishment = ViewBindings.findChildViewById(rootView, id);
      if (addEstablishment == null) {
        break missingId;
      }

      id = R.id.add_workplace;
      TextView addWorkplace = ViewBindings.findChildViewById(rootView, id);
      if (addWorkplace == null) {
        break missingId;
      }

      id = R.id.backArrow;
      RelativeLayout backArrow = ViewBindings.findChildViewById(rootView, id);
      if (backArrow == null) {
        break missingId;
      }

      id = R.id.bio;
      TextView bio = ViewBindings.findChildViewById(rootView, id);
      if (bio == null) {
        break missingId;
      }

      id = R.id.button_text;
      TextView buttonText = ViewBindings.findChildViewById(rootView, id);
      if (buttonText == null) {
        break missingId;
      }

      id = R.id.edit_add_college;
      AutoCompleteTextView editAddCollege = ViewBindings.findChildViewById(rootView, id);
      if (editAddCollege == null) {
        break missingId;
      }

      id = R.id.edit_add_college_header;
      MyEditText editAddCollegeHeader = ViewBindings.findChildViewById(rootView, id);
      if (editAddCollegeHeader == null) {
        break missingId;
      }

      id = R.id.edit_add_establishment;
      AutoCompleteTextView editAddEstablishment = ViewBindings.findChildViewById(rootView, id);
      if (editAddEstablishment == null) {
        break missingId;
      }

      id = R.id.edit_add_establishment_header;
      MyEditText editAddEstablishmentHeader = ViewBindings.findChildViewById(rootView, id);
      if (editAddEstablishmentHeader == null) {
        break missingId;
      }

      id = R.id.edit_add_workplace;
      AutoCompleteTextView editAddWorkplace = ViewBindings.findChildViewById(rootView, id);
      if (editAddWorkplace == null) {
        break missingId;
      }

      id = R.id.edit_add_workplace_header;
      MyEditText editAddWorkplaceHeader = ViewBindings.findChildViewById(rootView, id);
      if (editAddWorkplaceHeader == null) {
        break missingId;
      }

      id = R.id.edit_bio;
      MyEditText editBio = ViewBindings.findChildViewById(rootView, id);
      if (editBio == null) {
        break missingId;
      }

      id = R.id.edit_establishment_name;
      AutoCompleteTextView editEstablishmentName = ViewBindings.findChildViewById(rootView, id);
      if (editEstablishmentName == null) {
        break missingId;
      }

      id = R.id.edit_establishment_name_header;
      MyEditText editEstablishmentNameHeader = ViewBindings.findChildViewById(rootView, id);
      if (editEstablishmentNameHeader == null) {
        break missingId;
      }

      id = R.id.edit_name;
      MyEditText editName = ViewBindings.findChildViewById(rootView, id);
      if (editName == null) {
        break missingId;
      }

      id = R.id.edit_neighborhood_name;
      AutoCompleteTextView editNeighborhoodName = ViewBindings.findChildViewById(rootView, id);
      if (editNeighborhoodName == null) {
        break missingId;
      }

      id = R.id.edit_school_name;
      AutoCompleteTextView editSchoolName = ViewBindings.findChildViewById(rootView, id);
      if (editSchoolName == null) {
        break missingId;
      }

      id = R.id.edit_school_name_header;
      MyEditText editSchoolNameHeader = ViewBindings.findChildViewById(rootView, id);
      if (editSchoolNameHeader == null) {
        break missingId;
      }

      id = R.id.edit_town_name;
      AutoCompleteTextView editTownName = ViewBindings.findChildViewById(rootView, id);
      if (editTownName == null) {
        break missingId;
      }

      id = R.id.edit_username;
      MyEditText editUsername = ViewBindings.findChildViewById(rootView, id);
      if (editUsername == null) {
        break missingId;
      }

      id = R.id.edit_workplace_name;
      AutoCompleteTextView editWorkplaceName = ViewBindings.findChildViewById(rootView, id);
      if (editWorkplaceName == null) {
        break missingId;
      }

      id = R.id.edit_workplace_name_header;
      MyEditText editWorkplaceNameHeader = ViewBindings.findChildViewById(rootView, id);
      if (editWorkplaceNameHeader == null) {
        break missingId;
      }

      id = R.id.establishment_name;
      TextView establishmentName = ViewBindings.findChildViewById(rootView, id);
      if (establishmentName == null) {
        break missingId;
      }

      id = R.id.genter;
      TextView genter = ViewBindings.findChildViewById(rootView, id);
      if (genter == null) {
        break missingId;
      }

      id = R.id.linLayout_nber_char_sequence;
      LinearLayout linLayoutNberCharSequence = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutNberCharSequence == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.marital_status;
      TextView maritalStatus = ViewBindings.findChildViewById(rootView, id);
      if (maritalStatus == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.nber_char_sequence;
      TextView nberCharSequence = ViewBindings.findChildViewById(rootView, id);
      if (nberCharSequence == null) {
        break missingId;
      }

      id = R.id.neighborhood_name;
      TextView neighborhoodName = ViewBindings.findChildViewById(rootView, id);
      if (neighborhoodName == null) {
        break missingId;
      }

      id = R.id.pseudo;
      TextView pseudo = ViewBindings.findChildViewById(rootView, id);
      if (pseudo == null) {
        break missingId;
      }

      id = R.id.radio_binary_name;
      RadioButton radioBinaryName = ViewBindings.findChildViewById(rootView, id);
      if (radioBinaryName == null) {
        break missingId;
      }

      id = R.id.radio_divorced;
      RadioButton radioDivorced = ViewBindings.findChildViewById(rootView, id);
      if (radioDivorced == null) {
        break missingId;
      }

      id = R.id.radioGroup;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.radioGroup_genter;
      RadioGroup radioGroupGenter = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupGenter == null) {
        break missingId;
      }

      id = R.id.radio_in_a_relationship_with;
      RadioButton radioInARelationshipWith = ViewBindings.findChildViewById(rootView, id);
      if (radioInARelationshipWith == null) {
        break missingId;
      }

      id = R.id.radio_man;
      RadioButton radioMan = ViewBindings.findChildViewById(rootView, id);
      if (radioMan == null) {
        break missingId;
      }

      id = R.id.radio_married;
      RadioButton radioMarried = ViewBindings.findChildViewById(rootView, id);
      if (radioMarried == null) {
        break missingId;
      }

      id = R.id.radio_other;
      RadioButton radioOther = ViewBindings.findChildViewById(rootView, id);
      if (radioOther == null) {
        break missingId;
      }

      id = R.id.radio_other_gender;
      RadioButton radioOtherGender = ViewBindings.findChildViewById(rootView, id);
      if (radioOtherGender == null) {
        break missingId;
      }

      id = R.id.radio_separated;
      RadioButton radioSeparated = ViewBindings.findChildViewById(rootView, id);
      if (radioSeparated == null) {
        break missingId;
      }

      id = R.id.radio_single;
      RadioButton radioSingle = ViewBindings.findChildViewById(rootView, id);
      if (radioSingle == null) {
        break missingId;
      }

      id = R.id.radio_women;
      RadioButton radioWomen = ViewBindings.findChildViewById(rootView, id);
      if (radioWomen == null) {
        break missingId;
      }

      id = R.id.relLayout_add_college;
      RelativeLayout relLayoutAddCollege = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAddCollege == null) {
        break missingId;
      }

      id = R.id.relLayout_add_establishment;
      RelativeLayout relLayoutAddEstablishment = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAddEstablishment == null) {
        break missingId;
      }

      id = R.id.relLayout_add_workplace;
      RelativeLayout relLayoutAddWorkplace = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAddWorkplace == null) {
        break missingId;
      }

      id = R.id.relLayout_bio;
      RelativeLayout relLayoutBio = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutBio == null) {
        break missingId;
      }

      id = R.id.relLayout_button;
      RelativeLayout relLayoutButton = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButton == null) {
        break missingId;
      }

      id = R.id.relLayout_college;
      RelativeLayout relLayoutCollege = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCollege == null) {
        break missingId;
      }

      id = R.id.relLayout_establishment;
      RelativeLayout relLayoutEstablishment = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutEstablishment == null) {
        break missingId;
      }

      id = R.id.relLayout_establishment_name;
      RelativeLayout relLayoutEstablishmentName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutEstablishmentName == null) {
        break missingId;
      }

      id = R.id.relLayout_name;
      RelativeLayout relLayoutName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutName == null) {
        break missingId;
      }

      id = R.id.relLayout_neighborhood_name;
      RelativeLayout relLayoutNeighborhoodName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNeighborhoodName == null) {
        break missingId;
      }

      id = R.id.relLayout_school_name;
      RelativeLayout relLayoutSchoolName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSchoolName == null) {
        break missingId;
      }

      id = R.id.relLayout_town_name;
      RelativeLayout relLayoutTownName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutTownName == null) {
        break missingId;
      }

      id = R.id.relLayout_update_bio;
      RelativeLayout relLayoutUpdateBio = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdateBio == null) {
        break missingId;
      }

      id = R.id.relLayout_update_establishment_name;
      RelativeLayout relLayoutUpdateEstablishmentName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdateEstablishmentName == null) {
        break missingId;
      }

      id = R.id.relLayout_update_genter;
      RelativeLayout relLayoutUpdateGenter = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdateGenter == null) {
        break missingId;
      }

      id = R.id.relLayout_update_marital_status;
      RelativeLayout relLayoutUpdateMaritalStatus = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdateMaritalStatus == null) {
        break missingId;
      }

      id = R.id.relLayout_update_name;
      RelativeLayout relLayoutUpdateName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdateName == null) {
        break missingId;
      }

      id = R.id.relLayout_update_neighborhood_name;
      RelativeLayout relLayoutUpdateNeighborhoodName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdateNeighborhoodName == null) {
        break missingId;
      }

      id = R.id.relLayout_update_school_name;
      RelativeLayout relLayoutUpdateSchoolName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdateSchoolName == null) {
        break missingId;
      }

      id = R.id.relLayout_update_town_name;
      RelativeLayout relLayoutUpdateTownName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdateTownName == null) {
        break missingId;
      }

      id = R.id.relLayout_update_username;
      RelativeLayout relLayoutUpdateUsername = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdateUsername == null) {
        break missingId;
      }

      id = R.id.relLayout_update_workplace_name;
      RelativeLayout relLayoutUpdateWorkplaceName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUpdateWorkplaceName == null) {
        break missingId;
      }

      id = R.id.relLayout_username;
      RelativeLayout relLayoutUsername = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutUsername == null) {
        break missingId;
      }

      id = R.id.relLayout_workplace;
      RelativeLayout relLayoutWorkplace = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutWorkplace == null) {
        break missingId;
      }

      id = R.id.relLayout_workplace_name;
      RelativeLayout relLayoutWorkplaceName = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutWorkplaceName == null) {
        break missingId;
      }

      id = R.id.school_name;
      TextView schoolName = ViewBindings.findChildViewById(rootView, id);
      if (schoolName == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.town_name;
      TextView townName = ViewBindings.findChildViewById(rootView, id);
      if (townName == null) {
        break missingId;
      }

      id = R.id.txt_update;
      TextView txtUpdate = ViewBindings.findChildViewById(rootView, id);
      if (txtUpdate == null) {
        break missingId;
      }

      id = R.id.workplace_name;
      TextView workplaceName = ViewBindings.findChildViewById(rootView, id);
      if (workplaceName == null) {
        break missingId;
      }

      return new ActivityUpdateProfileBinding((RelativeLayout) rootView, addCollege,
          addEstablishment, addWorkplace, backArrow, bio, buttonText, editAddCollege,
          editAddCollegeHeader, editAddEstablishment, editAddEstablishmentHeader, editAddWorkplace,
          editAddWorkplaceHeader, editBio, editEstablishmentName, editEstablishmentNameHeader,
          editName, editNeighborhoodName, editSchoolName, editSchoolNameHeader, editTownName,
          editUsername, editWorkplaceName, editWorkplaceNameHeader, establishmentName, genter,
          linLayoutNberCharSequence, main, maritalStatus, name, nberCharSequence, neighborhoodName,
          pseudo, radioBinaryName, radioDivorced, radioGroup, radioGroupGenter,
          radioInARelationshipWith, radioMan, radioMarried, radioOther, radioOtherGender,
          radioSeparated, radioSingle, radioWomen, relLayoutAddCollege, relLayoutAddEstablishment,
          relLayoutAddWorkplace, relLayoutBio, relLayoutButton, relLayoutCollege,
          relLayoutEstablishment, relLayoutEstablishmentName, relLayoutName,
          relLayoutNeighborhoodName, relLayoutSchoolName, relLayoutTownName, relLayoutUpdateBio,
          relLayoutUpdateEstablishmentName, relLayoutUpdateGenter, relLayoutUpdateMaritalStatus,
          relLayoutUpdateName, relLayoutUpdateNeighborhoodName, relLayoutUpdateSchoolName,
          relLayoutUpdateTownName, relLayoutUpdateUsername, relLayoutUpdateWorkplaceName,
          relLayoutUsername, relLayoutWorkplace, relLayoutWorkplaceName, schoolName, toolBar,
          townName, txtUpdate, workplaceName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
