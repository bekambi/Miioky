// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupExplorerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final HorizontalScrollView horizontalScrollview;

  @NonNull
  public final ImageView parameter;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RelativeLayout relLayoutAdd;

  @NonNull
  public final RelativeLayout relLayoutDiscover;

  @NonNull
  public final RelativeLayout relLayoutParameters;

  @NonNull
  public final RelativeLayout relLayoutRecommendations;

  @NonNull
  public final RelativeLayout relLayoutSearch;

  @NonNull
  public final RelativeLayout relLayoutSeeYourGroups;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final ImageView searchIdWhite;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView tvDiscover;

  @NonNull
  public final TextView tvRecommendations;

  @NonNull
  public final TextView tvSeeYourGroups;

  @NonNull
  public final ViewPager2 viewPager;

  private ActivityGroupExplorerBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull HorizontalScrollView horizontalScrollview,
      @NonNull ImageView parameter, @NonNull RelativeLayout parent,
      @NonNull RelativeLayout relLayoutAdd, @NonNull RelativeLayout relLayoutDiscover,
      @NonNull RelativeLayout relLayoutParameters, @NonNull RelativeLayout relLayoutRecommendations,
      @NonNull RelativeLayout relLayoutSearch, @NonNull RelativeLayout relLayoutSeeYourGroups,
      @NonNull RelativeLayout relLayoutViewOverlay, @NonNull ImageView searchIdWhite,
      @NonNull Toolbar toolBar, @NonNull TextView tvDiscover, @NonNull TextView tvRecommendations,
      @NonNull TextView tvSeeYourGroups, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.horizontalScrollview = horizontalScrollview;
    this.parameter = parameter;
    this.parent = parent;
    this.relLayoutAdd = relLayoutAdd;
    this.relLayoutDiscover = relLayoutDiscover;
    this.relLayoutParameters = relLayoutParameters;
    this.relLayoutRecommendations = relLayoutRecommendations;
    this.relLayoutSearch = relLayoutSearch;
    this.relLayoutSeeYourGroups = relLayoutSeeYourGroups;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.searchIdWhite = searchIdWhite;
    this.toolBar = toolBar;
    this.tvDiscover = tvDiscover;
    this.tvRecommendations = tvRecommendations;
    this.tvSeeYourGroups = tvSeeYourGroups;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupExplorerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupExplorerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_explorer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupExplorerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.horizontal_scrollview;
      HorizontalScrollView horizontalScrollview = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScrollview == null) {
        break missingId;
      }

      id = R.id.parameter;
      ImageView parameter = ViewBindings.findChildViewById(rootView, id);
      if (parameter == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.relLayout_add;
      RelativeLayout relLayoutAdd = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutAdd == null) {
        break missingId;
      }

      id = R.id.relLayout_discover;
      RelativeLayout relLayoutDiscover = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutDiscover == null) {
        break missingId;
      }

      id = R.id.relLayout_parameters;
      RelativeLayout relLayoutParameters = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutParameters == null) {
        break missingId;
      }

      id = R.id.relLayout_recommendations;
      RelativeLayout relLayoutRecommendations = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutRecommendations == null) {
        break missingId;
      }

      id = R.id.relLayout_search;
      RelativeLayout relLayoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSearch == null) {
        break missingId;
      }

      id = R.id.relLayout_see_your_groups;
      RelativeLayout relLayoutSeeYourGroups = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSeeYourGroups == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.search_id_white;
      ImageView searchIdWhite = ViewBindings.findChildViewById(rootView, id);
      if (searchIdWhite == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.tv_discover;
      TextView tvDiscover = ViewBindings.findChildViewById(rootView, id);
      if (tvDiscover == null) {
        break missingId;
      }

      id = R.id.tv_recommendations;
      TextView tvRecommendations = ViewBindings.findChildViewById(rootView, id);
      if (tvRecommendations == null) {
        break missingId;
      }

      id = R.id.tv_see_your_groups;
      TextView tvSeeYourGroups = ViewBindings.findChildViewById(rootView, id);
      if (tvSeeYourGroups == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityGroupExplorerBinding((RelativeLayout) rootView, arrowBack,
          horizontalScrollview, parameter, parent, relLayoutAdd, relLayoutDiscover,
          relLayoutParameters, relLayoutRecommendations, relLayoutSearch, relLayoutSeeYourGroups,
          relLayoutViewOverlay, searchIdWhite, toolBar, tvDiscover, tvRecommendations,
          tvSeeYourGroups, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
