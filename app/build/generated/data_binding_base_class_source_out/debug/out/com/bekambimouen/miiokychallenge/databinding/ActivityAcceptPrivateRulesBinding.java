// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAcceptPrivateRulesBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView adminGroupRules;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final TextView buttonJoinBottom;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CheckBox checkBox;

  @NonNull
  public final ImageView close;

  @NonNull
  public final TextView groupName;

  @NonNull
  public final ImageView groupProfilePhoto;

  @NonNull
  public final TextView groupRules;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout relLayoutButtonsJoinBottom;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarTitle;

  @NonNull
  public final TextView totalMembers;

  @NonNull
  public final TextView txtMsg;

  private ActivityAcceptPrivateRulesBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView adminGroupRules, @NonNull RelativeLayout arrowBack,
      @NonNull TextView buttonJoinBottom, @NonNull CardView cardView, @NonNull CheckBox checkBox,
      @NonNull ImageView close, @NonNull TextView groupName, @NonNull ImageView groupProfilePhoto,
      @NonNull TextView groupRules, @NonNull TouchDetectableScrollView nestedScrollView,
      @NonNull RelativeLayout parent, @NonNull RecyclerView recyclerView,
      @NonNull RelativeLayout relLayoutButtonsJoinBottom, @NonNull Toolbar toolBar,
      @NonNull TextView toolBarTitle, @NonNull TextView totalMembers, @NonNull TextView txtMsg) {
    this.rootView = rootView;
    this.adminGroupRules = adminGroupRules;
    this.arrowBack = arrowBack;
    this.buttonJoinBottom = buttonJoinBottom;
    this.cardView = cardView;
    this.checkBox = checkBox;
    this.close = close;
    this.groupName = groupName;
    this.groupProfilePhoto = groupProfilePhoto;
    this.groupRules = groupRules;
    this.nestedScrollView = nestedScrollView;
    this.parent = parent;
    this.recyclerView = recyclerView;
    this.relLayoutButtonsJoinBottom = relLayoutButtonsJoinBottom;
    this.toolBar = toolBar;
    this.toolBarTitle = toolBarTitle;
    this.totalMembers = totalMembers;
    this.txtMsg = txtMsg;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAcceptPrivateRulesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAcceptPrivateRulesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_accept_private_rules, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAcceptPrivateRulesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.admin_group_rules;
      TextView adminGroupRules = ViewBindings.findChildViewById(rootView, id);
      if (adminGroupRules == null) {
        break missingId;
      }

      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.button_join_bottom;
      TextView buttonJoinBottom = ViewBindings.findChildViewById(rootView, id);
      if (buttonJoinBottom == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.checkBox;
      CheckBox checkBox = ViewBindings.findChildViewById(rootView, id);
      if (checkBox == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.group_name;
      TextView groupName = ViewBindings.findChildViewById(rootView, id);
      if (groupName == null) {
        break missingId;
      }

      id = R.id.group_profile_photo;
      ImageView groupProfilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (groupProfilePhoto == null) {
        break missingId;
      }

      id = R.id.group_rules;
      TextView groupRules = ViewBindings.findChildViewById(rootView, id);
      if (groupRules == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relLayout_buttons_join_bottom;
      RelativeLayout relLayoutButtonsJoinBottom = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutButtonsJoinBottom == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_title;
      TextView toolBarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTitle == null) {
        break missingId;
      }

      id = R.id.total_members;
      TextView totalMembers = ViewBindings.findChildViewById(rootView, id);
      if (totalMembers == null) {
        break missingId;
      }

      id = R.id.txt_msg;
      TextView txtMsg = ViewBindings.findChildViewById(rootView, id);
      if (txtMsg == null) {
        break missingId;
      }

      return new ActivityAcceptPrivateRulesBinding((RelativeLayout) rootView, adminGroupRules,
          arrowBack, buttonJoinBottom, cardView, checkBox, close, groupName, groupProfilePhoto,
          groupRules, nestedScrollView, parent, recyclerView, relLayoutButtonsJoinBottom, toolBar,
          toolBarTitle, totalMembers, txtMsg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
