// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupAddRulesWithExampleBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final RelativeLayout arrowBackListOfRules;

  @NonNull
  public final RelativeLayout arrowBackVerifyRules;

  @NonNull
  public final RelativeLayout arrowBackWriteRules;

  @NonNull
  public final TextView buttonCreateAnotherRule;

  @NonNull
  public final TextView buttonStart;

  @NonNull
  public final TextView buttonSuspend;

  @NonNull
  public final ImageView close;

  @NonNull
  public final RelativeLayout closeRules;

  @NonNull
  public final MyEditText editRuleDetails;

  @NonNull
  public final MyEditText editRuleTitle;

  @NonNull
  public final TextView example1;

  @NonNull
  public final TextView example2;

  @NonNull
  public final TextView example3;

  @NonNull
  public final TextView example4;

  @NonNull
  public final TextView information;

  @NonNull
  public final RelativeLayout letterI;

  @NonNull
  public final LinearLayout linLayoutIconStart;

  @NonNull
  public final RelativeLayout linLayoutListRules;

  @NonNull
  public final LinearLayout linLayoutNberCharSeqTitleRule;

  @NonNull
  public final LinearLayout linLayoutNberCharSequence;

  @NonNull
  public final LinearLayout linLayoutRulesWithExamples;

  @NonNull
  public final RelativeLayout linLayoutVerifyRules;

  @NonNull
  public final LinearLayout linLayoutWriteRules;

  @NonNull
  public final TextView nberCharSeqTitleRule;

  @NonNull
  public final TextView nberRuleDetails;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final ImageView next0;

  @NonNull
  public final ImageView next1;

  @NonNull
  public final ImageView next2;

  @NonNull
  public final ImageView next3;

  @NonNull
  public final ImageView next4;

  @NonNull
  public final LinearLayout parent;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RelativeLayout publish;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RecyclerView recyclerViewVerify;

  @NonNull
  public final RelativeLayout relLayoutCreateAnotherRule;

  @NonNull
  public final RelativeLayout relLayoutNext;

  @NonNull
  public final RelativeLayout relLayoutPan;

  @NonNull
  public final RelativeLayout relLayoutRules0;

  @NonNull
  public final RelativeLayout relLayoutRules1;

  @NonNull
  public final RelativeLayout relLayoutRules2;

  @NonNull
  public final RelativeLayout relLayoutRules3;

  @NonNull
  public final RelativeLayout relLayoutRules4;

  @NonNull
  public final LinearLayout rules1;

  @NonNull
  public final LinearLayout rules2;

  @NonNull
  public final LinearLayout rules3;

  @NonNull
  public final LinearLayout rules4;

  @NonNull
  public final TextView titleExample1;

  @NonNull
  public final TextView titleExample2;

  @NonNull
  public final TextView titleExample3;

  @NonNull
  public final TextView titleExample4;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final Toolbar toolBarListOfRules;

  @NonNull
  public final Toolbar toolBarRules;

  @NonNull
  public final TextView toolBarTextview;

  @NonNull
  public final TextView toolBarTextviewListOfRules;

  @NonNull
  public final TextView toolBarTextviewRules;

  @NonNull
  public final TextView toolBarTextviewVerifyRules;

  @NonNull
  public final Toolbar toolBarVerifyRules;

  @NonNull
  public final RelativeLayout verify;

  @NonNull
  public final TextView youCanAddRule;

  private ActivityGroupAddRulesWithExampleBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull RelativeLayout arrowBackListOfRules,
      @NonNull RelativeLayout arrowBackVerifyRules, @NonNull RelativeLayout arrowBackWriteRules,
      @NonNull TextView buttonCreateAnotherRule, @NonNull TextView buttonStart,
      @NonNull TextView buttonSuspend, @NonNull ImageView close, @NonNull RelativeLayout closeRules,
      @NonNull MyEditText editRuleDetails, @NonNull MyEditText editRuleTitle,
      @NonNull TextView example1, @NonNull TextView example2, @NonNull TextView example3,
      @NonNull TextView example4, @NonNull TextView information, @NonNull RelativeLayout letterI,
      @NonNull LinearLayout linLayoutIconStart, @NonNull RelativeLayout linLayoutListRules,
      @NonNull LinearLayout linLayoutNberCharSeqTitleRule,
      @NonNull LinearLayout linLayoutNberCharSequence,
      @NonNull LinearLayout linLayoutRulesWithExamples,
      @NonNull RelativeLayout linLayoutVerifyRules, @NonNull LinearLayout linLayoutWriteRules,
      @NonNull TextView nberCharSeqTitleRule, @NonNull TextView nberRuleDetails,
      @NonNull TouchDetectableScrollView nestedScrollView, @NonNull ImageView next0,
      @NonNull ImageView next1, @NonNull ImageView next2, @NonNull ImageView next3,
      @NonNull ImageView next4, @NonNull LinearLayout parent, @NonNull ProgressBar progressBar,
      @NonNull RelativeLayout publish, @NonNull RecyclerView recyclerView,
      @NonNull RecyclerView recyclerViewVerify, @NonNull RelativeLayout relLayoutCreateAnotherRule,
      @NonNull RelativeLayout relLayoutNext, @NonNull RelativeLayout relLayoutPan,
      @NonNull RelativeLayout relLayoutRules0, @NonNull RelativeLayout relLayoutRules1,
      @NonNull RelativeLayout relLayoutRules2, @NonNull RelativeLayout relLayoutRules3,
      @NonNull RelativeLayout relLayoutRules4, @NonNull LinearLayout rules1,
      @NonNull LinearLayout rules2, @NonNull LinearLayout rules3, @NonNull LinearLayout rules4,
      @NonNull TextView titleExample1, @NonNull TextView titleExample2,
      @NonNull TextView titleExample3, @NonNull TextView titleExample4, @NonNull Toolbar toolBar,
      @NonNull Toolbar toolBarListOfRules, @NonNull Toolbar toolBarRules,
      @NonNull TextView toolBarTextview, @NonNull TextView toolBarTextviewListOfRules,
      @NonNull TextView toolBarTextviewRules, @NonNull TextView toolBarTextviewVerifyRules,
      @NonNull Toolbar toolBarVerifyRules, @NonNull RelativeLayout verify,
      @NonNull TextView youCanAddRule) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.arrowBackListOfRules = arrowBackListOfRules;
    this.arrowBackVerifyRules = arrowBackVerifyRules;
    this.arrowBackWriteRules = arrowBackWriteRules;
    this.buttonCreateAnotherRule = buttonCreateAnotherRule;
    this.buttonStart = buttonStart;
    this.buttonSuspend = buttonSuspend;
    this.close = close;
    this.closeRules = closeRules;
    this.editRuleDetails = editRuleDetails;
    this.editRuleTitle = editRuleTitle;
    this.example1 = example1;
    this.example2 = example2;
    this.example3 = example3;
    this.example4 = example4;
    this.information = information;
    this.letterI = letterI;
    this.linLayoutIconStart = linLayoutIconStart;
    this.linLayoutListRules = linLayoutListRules;
    this.linLayoutNberCharSeqTitleRule = linLayoutNberCharSeqTitleRule;
    this.linLayoutNberCharSequence = linLayoutNberCharSequence;
    this.linLayoutRulesWithExamples = linLayoutRulesWithExamples;
    this.linLayoutVerifyRules = linLayoutVerifyRules;
    this.linLayoutWriteRules = linLayoutWriteRules;
    this.nberCharSeqTitleRule = nberCharSeqTitleRule;
    this.nberRuleDetails = nberRuleDetails;
    this.nestedScrollView = nestedScrollView;
    this.next0 = next0;
    this.next1 = next1;
    this.next2 = next2;
    this.next3 = next3;
    this.next4 = next4;
    this.parent = parent;
    this.progressBar = progressBar;
    this.publish = publish;
    this.recyclerView = recyclerView;
    this.recyclerViewVerify = recyclerViewVerify;
    this.relLayoutCreateAnotherRule = relLayoutCreateAnotherRule;
    this.relLayoutNext = relLayoutNext;
    this.relLayoutPan = relLayoutPan;
    this.relLayoutRules0 = relLayoutRules0;
    this.relLayoutRules1 = relLayoutRules1;
    this.relLayoutRules2 = relLayoutRules2;
    this.relLayoutRules3 = relLayoutRules3;
    this.relLayoutRules4 = relLayoutRules4;
    this.rules1 = rules1;
    this.rules2 = rules2;
    this.rules3 = rules3;
    this.rules4 = rules4;
    this.titleExample1 = titleExample1;
    this.titleExample2 = titleExample2;
    this.titleExample3 = titleExample3;
    this.titleExample4 = titleExample4;
    this.toolBar = toolBar;
    this.toolBarListOfRules = toolBarListOfRules;
    this.toolBarRules = toolBarRules;
    this.toolBarTextview = toolBarTextview;
    this.toolBarTextviewListOfRules = toolBarTextviewListOfRules;
    this.toolBarTextviewRules = toolBarTextviewRules;
    this.toolBarTextviewVerifyRules = toolBarTextviewVerifyRules;
    this.toolBarVerifyRules = toolBarVerifyRules;
    this.verify = verify;
    this.youCanAddRule = youCanAddRule;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupAddRulesWithExampleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupAddRulesWithExampleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_add_rules_with_example, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupAddRulesWithExampleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.arrowBack_list_of_rules;
      RelativeLayout arrowBackListOfRules = ViewBindings.findChildViewById(rootView, id);
      if (arrowBackListOfRules == null) {
        break missingId;
      }

      id = R.id.arrowBack_verify_rules;
      RelativeLayout arrowBackVerifyRules = ViewBindings.findChildViewById(rootView, id);
      if (arrowBackVerifyRules == null) {
        break missingId;
      }

      id = R.id.arrowBack_write_rules;
      RelativeLayout arrowBackWriteRules = ViewBindings.findChildViewById(rootView, id);
      if (arrowBackWriteRules == null) {
        break missingId;
      }

      id = R.id.button_create_another_rule;
      TextView buttonCreateAnotherRule = ViewBindings.findChildViewById(rootView, id);
      if (buttonCreateAnotherRule == null) {
        break missingId;
      }

      id = R.id.button_start;
      TextView buttonStart = ViewBindings.findChildViewById(rootView, id);
      if (buttonStart == null) {
        break missingId;
      }

      id = R.id.button_suspend;
      TextView buttonSuspend = ViewBindings.findChildViewById(rootView, id);
      if (buttonSuspend == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.close_rules;
      RelativeLayout closeRules = ViewBindings.findChildViewById(rootView, id);
      if (closeRules == null) {
        break missingId;
      }

      id = R.id.edit_rule_details;
      MyEditText editRuleDetails = ViewBindings.findChildViewById(rootView, id);
      if (editRuleDetails == null) {
        break missingId;
      }

      id = R.id.edit_rule_title;
      MyEditText editRuleTitle = ViewBindings.findChildViewById(rootView, id);
      if (editRuleTitle == null) {
        break missingId;
      }

      id = R.id.example1;
      TextView example1 = ViewBindings.findChildViewById(rootView, id);
      if (example1 == null) {
        break missingId;
      }

      id = R.id.example2;
      TextView example2 = ViewBindings.findChildViewById(rootView, id);
      if (example2 == null) {
        break missingId;
      }

      id = R.id.example3;
      TextView example3 = ViewBindings.findChildViewById(rootView, id);
      if (example3 == null) {
        break missingId;
      }

      id = R.id.example4;
      TextView example4 = ViewBindings.findChildViewById(rootView, id);
      if (example4 == null) {
        break missingId;
      }

      id = R.id.information;
      TextView information = ViewBindings.findChildViewById(rootView, id);
      if (information == null) {
        break missingId;
      }

      id = R.id.letter_i;
      RelativeLayout letterI = ViewBindings.findChildViewById(rootView, id);
      if (letterI == null) {
        break missingId;
      }

      id = R.id.linLayout_icon_start;
      LinearLayout linLayoutIconStart = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutIconStart == null) {
        break missingId;
      }

      id = R.id.linLayout_list_rules;
      RelativeLayout linLayoutListRules = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutListRules == null) {
        break missingId;
      }

      id = R.id.linLayout_nber_char_seq_title_rule;
      LinearLayout linLayoutNberCharSeqTitleRule = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutNberCharSeqTitleRule == null) {
        break missingId;
      }

      id = R.id.linLayout_nber_char_sequence;
      LinearLayout linLayoutNberCharSequence = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutNberCharSequence == null) {
        break missingId;
      }

      id = R.id.linLayout_rules_with_examples;
      LinearLayout linLayoutRulesWithExamples = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutRulesWithExamples == null) {
        break missingId;
      }

      id = R.id.linLayout_verify_rules;
      RelativeLayout linLayoutVerifyRules = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutVerifyRules == null) {
        break missingId;
      }

      id = R.id.linLayout_write_rules;
      LinearLayout linLayoutWriteRules = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutWriteRules == null) {
        break missingId;
      }

      id = R.id.nber_char_seq_title_rule;
      TextView nberCharSeqTitleRule = ViewBindings.findChildViewById(rootView, id);
      if (nberCharSeqTitleRule == null) {
        break missingId;
      }

      id = R.id.nber_rule_details;
      TextView nberRuleDetails = ViewBindings.findChildViewById(rootView, id);
      if (nberRuleDetails == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.next0;
      ImageView next0 = ViewBindings.findChildViewById(rootView, id);
      if (next0 == null) {
        break missingId;
      }

      id = R.id.next1;
      ImageView next1 = ViewBindings.findChildViewById(rootView, id);
      if (next1 == null) {
        break missingId;
      }

      id = R.id.next2;
      ImageView next2 = ViewBindings.findChildViewById(rootView, id);
      if (next2 == null) {
        break missingId;
      }

      id = R.id.next3;
      ImageView next3 = ViewBindings.findChildViewById(rootView, id);
      if (next3 == null) {
        break missingId;
      }

      id = R.id.next4;
      ImageView next4 = ViewBindings.findChildViewById(rootView, id);
      if (next4 == null) {
        break missingId;
      }

      LinearLayout parent = (LinearLayout) rootView;

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.publish;
      RelativeLayout publish = ViewBindings.findChildViewById(rootView, id);
      if (publish == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.recyclerView_verify;
      RecyclerView recyclerViewVerify = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewVerify == null) {
        break missingId;
      }

      id = R.id.relLayout_create_another_rule;
      RelativeLayout relLayoutCreateAnotherRule = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutCreateAnotherRule == null) {
        break missingId;
      }

      id = R.id.relLayout_next;
      RelativeLayout relLayoutNext = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutNext == null) {
        break missingId;
      }

      id = R.id.relLayout_pan;
      RelativeLayout relLayoutPan = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutPan == null) {
        break missingId;
      }

      id = R.id.relLayout_rules0;
      RelativeLayout relLayoutRules0 = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutRules0 == null) {
        break missingId;
      }

      id = R.id.relLayout_rules1;
      RelativeLayout relLayoutRules1 = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutRules1 == null) {
        break missingId;
      }

      id = R.id.relLayout_rules2;
      RelativeLayout relLayoutRules2 = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutRules2 == null) {
        break missingId;
      }

      id = R.id.relLayout_rules3;
      RelativeLayout relLayoutRules3 = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutRules3 == null) {
        break missingId;
      }

      id = R.id.relLayout_rules4;
      RelativeLayout relLayoutRules4 = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutRules4 == null) {
        break missingId;
      }

      id = R.id.rules1;
      LinearLayout rules1 = ViewBindings.findChildViewById(rootView, id);
      if (rules1 == null) {
        break missingId;
      }

      id = R.id.rules2;
      LinearLayout rules2 = ViewBindings.findChildViewById(rootView, id);
      if (rules2 == null) {
        break missingId;
      }

      id = R.id.rules3;
      LinearLayout rules3 = ViewBindings.findChildViewById(rootView, id);
      if (rules3 == null) {
        break missingId;
      }

      id = R.id.rules4;
      LinearLayout rules4 = ViewBindings.findChildViewById(rootView, id);
      if (rules4 == null) {
        break missingId;
      }

      id = R.id.title_example1;
      TextView titleExample1 = ViewBindings.findChildViewById(rootView, id);
      if (titleExample1 == null) {
        break missingId;
      }

      id = R.id.title_example2;
      TextView titleExample2 = ViewBindings.findChildViewById(rootView, id);
      if (titleExample2 == null) {
        break missingId;
      }

      id = R.id.title_example3;
      TextView titleExample3 = ViewBindings.findChildViewById(rootView, id);
      if (titleExample3 == null) {
        break missingId;
      }

      id = R.id.title_example4;
      TextView titleExample4 = ViewBindings.findChildViewById(rootView, id);
      if (titleExample4 == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_list_of_rules;
      Toolbar toolBarListOfRules = ViewBindings.findChildViewById(rootView, id);
      if (toolBarListOfRules == null) {
        break missingId;
      }

      id = R.id.toolBar_rules;
      Toolbar toolBarRules = ViewBindings.findChildViewById(rootView, id);
      if (toolBarRules == null) {
        break missingId;
      }

      id = R.id.toolBar_textview;
      TextView toolBarTextview = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTextview == null) {
        break missingId;
      }

      id = R.id.toolBar_textview_list_of_rules;
      TextView toolBarTextviewListOfRules = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTextviewListOfRules == null) {
        break missingId;
      }

      id = R.id.toolBar_textview_rules;
      TextView toolBarTextviewRules = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTextviewRules == null) {
        break missingId;
      }

      id = R.id.toolBar_textview_verify_rules;
      TextView toolBarTextviewVerifyRules = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTextviewVerifyRules == null) {
        break missingId;
      }

      id = R.id.toolBar_verify_rules;
      Toolbar toolBarVerifyRules = ViewBindings.findChildViewById(rootView, id);
      if (toolBarVerifyRules == null) {
        break missingId;
      }

      id = R.id.verify;
      RelativeLayout verify = ViewBindings.findChildViewById(rootView, id);
      if (verify == null) {
        break missingId;
      }

      id = R.id.you_can_add_rule;
      TextView youCanAddRule = ViewBindings.findChildViewById(rootView, id);
      if (youCanAddRule == null) {
        break missingId;
      }

      return new ActivityGroupAddRulesWithExampleBinding((LinearLayout) rootView, arrowBack,
          arrowBackListOfRules, arrowBackVerifyRules, arrowBackWriteRules, buttonCreateAnotherRule,
          buttonStart, buttonSuspend, close, closeRules, editRuleDetails, editRuleTitle, example1,
          example2, example3, example4, information, letterI, linLayoutIconStart,
          linLayoutListRules, linLayoutNberCharSeqTitleRule, linLayoutNberCharSequence,
          linLayoutRulesWithExamples, linLayoutVerifyRules, linLayoutWriteRules,
          nberCharSeqTitleRule, nberRuleDetails, nestedScrollView, next0, next1, next2, next3,
          next4, parent, progressBar, publish, recyclerView, recyclerViewVerify,
          relLayoutCreateAnotherRule, relLayoutNext, relLayoutPan, relLayoutRules0, relLayoutRules1,
          relLayoutRules2, relLayoutRules3, relLayoutRules4, rules1, rules2, rules3, rules4,
          titleExample1, titleExample2, titleExample3, titleExample4, toolBar, toolBarListOfRules,
          toolBarRules, toolBarTextview, toolBarTextviewListOfRules, toolBarTextviewRules,
          toolBarTextviewVerifyRules, toolBarVerifyRules, verify, youCanAddRule);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
