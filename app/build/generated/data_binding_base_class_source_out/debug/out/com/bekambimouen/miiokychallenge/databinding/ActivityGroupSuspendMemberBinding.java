// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupSuspendMemberBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final TextView buttonSuspend;

  @NonNull
  public final TextView buttonSuspensionMessage;

  @NonNull
  public final ImageView close;

  @NonNull
  public final MyEditText editAboutGroup;

  @NonNull
  public final TextView goAddRules;

  @NonNull
  public final TextView leaveComment;

  @NonNull
  public final LinearLayout linLayoutButtonSuspend;

  @NonNull
  public final LinearLayout linLayoutInviteToWriteRules;

  @NonNull
  public final LinearLayout linLayoutNberCharSequence;

  @NonNull
  public final LinearLayout linLayoutRecyclerView;

  @NonNull
  public final TextView nberRuleDetails;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final ImageView next;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final RadioButton radioId1;

  @NonNull
  public final RadioButton radioId2;

  @NonNull
  public final RadioButton radioId3;

  @NonNull
  public final RadioButton radioId4;

  @NonNull
  public final RadioButton radioId5;

  @NonNull
  public final RadioButton radioId6;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout relLayoutEditAboutGroup;

  @NonNull
  public final RelativeLayout relLayoutSeeMore;

  @NonNull
  public final RelativeLayout relLayoutViewOverlay;

  @NonNull
  public final TextView seeMore;

  @NonNull
  public final TextView suspensionReason;

  @NonNull
  public final TextView suspensionTime;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView toolBarUserName;

  private ActivityGroupSuspendMemberBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull TextView buttonSuspend,
      @NonNull TextView buttonSuspensionMessage, @NonNull ImageView close,
      @NonNull MyEditText editAboutGroup, @NonNull TextView goAddRules,
      @NonNull TextView leaveComment, @NonNull LinearLayout linLayoutButtonSuspend,
      @NonNull LinearLayout linLayoutInviteToWriteRules,
      @NonNull LinearLayout linLayoutNberCharSequence, @NonNull LinearLayout linLayoutRecyclerView,
      @NonNull TextView nberRuleDetails, @NonNull TouchDetectableScrollView nestedScrollView,
      @NonNull ImageView next, @NonNull RelativeLayout parent, @NonNull RadioGroup radioGroup,
      @NonNull RadioButton radioId1, @NonNull RadioButton radioId2, @NonNull RadioButton radioId3,
      @NonNull RadioButton radioId4, @NonNull RadioButton radioId5, @NonNull RadioButton radioId6,
      @NonNull RecyclerView recyclerView, @NonNull RelativeLayout relLayoutEditAboutGroup,
      @NonNull RelativeLayout relLayoutSeeMore, @NonNull RelativeLayout relLayoutViewOverlay,
      @NonNull TextView seeMore, @NonNull TextView suspensionReason,
      @NonNull TextView suspensionTime, @NonNull Toolbar toolBar,
      @NonNull TextView toolBarUserName) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.buttonSuspend = buttonSuspend;
    this.buttonSuspensionMessage = buttonSuspensionMessage;
    this.close = close;
    this.editAboutGroup = editAboutGroup;
    this.goAddRules = goAddRules;
    this.leaveComment = leaveComment;
    this.linLayoutButtonSuspend = linLayoutButtonSuspend;
    this.linLayoutInviteToWriteRules = linLayoutInviteToWriteRules;
    this.linLayoutNberCharSequence = linLayoutNberCharSequence;
    this.linLayoutRecyclerView = linLayoutRecyclerView;
    this.nberRuleDetails = nberRuleDetails;
    this.nestedScrollView = nestedScrollView;
    this.next = next;
    this.parent = parent;
    this.radioGroup = radioGroup;
    this.radioId1 = radioId1;
    this.radioId2 = radioId2;
    this.radioId3 = radioId3;
    this.radioId4 = radioId4;
    this.radioId5 = radioId5;
    this.radioId6 = radioId6;
    this.recyclerView = recyclerView;
    this.relLayoutEditAboutGroup = relLayoutEditAboutGroup;
    this.relLayoutSeeMore = relLayoutSeeMore;
    this.relLayoutViewOverlay = relLayoutViewOverlay;
    this.seeMore = seeMore;
    this.suspensionReason = suspensionReason;
    this.suspensionTime = suspensionTime;
    this.toolBar = toolBar;
    this.toolBarUserName = toolBarUserName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupSuspendMemberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupSuspendMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_suspend_member, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupSuspendMemberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.button_suspend;
      TextView buttonSuspend = ViewBindings.findChildViewById(rootView, id);
      if (buttonSuspend == null) {
        break missingId;
      }

      id = R.id.button_suspension_message;
      TextView buttonSuspensionMessage = ViewBindings.findChildViewById(rootView, id);
      if (buttonSuspensionMessage == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.edit_about_group;
      MyEditText editAboutGroup = ViewBindings.findChildViewById(rootView, id);
      if (editAboutGroup == null) {
        break missingId;
      }

      id = R.id.go_add_rules;
      TextView goAddRules = ViewBindings.findChildViewById(rootView, id);
      if (goAddRules == null) {
        break missingId;
      }

      id = R.id.leave_comment;
      TextView leaveComment = ViewBindings.findChildViewById(rootView, id);
      if (leaveComment == null) {
        break missingId;
      }

      id = R.id.linLayout_button_suspend;
      LinearLayout linLayoutButtonSuspend = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutButtonSuspend == null) {
        break missingId;
      }

      id = R.id.linLayout_invite_to_write_rules;
      LinearLayout linLayoutInviteToWriteRules = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutInviteToWriteRules == null) {
        break missingId;
      }

      id = R.id.linLayout_nber_char_sequence;
      LinearLayout linLayoutNberCharSequence = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutNberCharSequence == null) {
        break missingId;
      }

      id = R.id.linLayout_recyclerView;
      LinearLayout linLayoutRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutRecyclerView == null) {
        break missingId;
      }

      id = R.id.nber_rule_details;
      TextView nberRuleDetails = ViewBindings.findChildViewById(rootView, id);
      if (nberRuleDetails == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.next;
      ImageView next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.radioGroup;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.radio_id1;
      RadioButton radioId1 = ViewBindings.findChildViewById(rootView, id);
      if (radioId1 == null) {
        break missingId;
      }

      id = R.id.radio_id2;
      RadioButton radioId2 = ViewBindings.findChildViewById(rootView, id);
      if (radioId2 == null) {
        break missingId;
      }

      id = R.id.radio_id3;
      RadioButton radioId3 = ViewBindings.findChildViewById(rootView, id);
      if (radioId3 == null) {
        break missingId;
      }

      id = R.id.radio_id4;
      RadioButton radioId4 = ViewBindings.findChildViewById(rootView, id);
      if (radioId4 == null) {
        break missingId;
      }

      id = R.id.radio_id5;
      RadioButton radioId5 = ViewBindings.findChildViewById(rootView, id);
      if (radioId5 == null) {
        break missingId;
      }

      id = R.id.radio_id6;
      RadioButton radioId6 = ViewBindings.findChildViewById(rootView, id);
      if (radioId6 == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relLayout_edit_about_group;
      RelativeLayout relLayoutEditAboutGroup = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutEditAboutGroup == null) {
        break missingId;
      }

      id = R.id.relLayout_see_more;
      RelativeLayout relLayoutSeeMore = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSeeMore == null) {
        break missingId;
      }

      id = R.id.relLayout_view_overlay;
      RelativeLayout relLayoutViewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutViewOverlay == null) {
        break missingId;
      }

      id = R.id.see_more;
      TextView seeMore = ViewBindings.findChildViewById(rootView, id);
      if (seeMore == null) {
        break missingId;
      }

      id = R.id.suspension_reason;
      TextView suspensionReason = ViewBindings.findChildViewById(rootView, id);
      if (suspensionReason == null) {
        break missingId;
      }

      id = R.id.suspension_time;
      TextView suspensionTime = ViewBindings.findChildViewById(rootView, id);
      if (suspensionTime == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.toolBar_user_name;
      TextView toolBarUserName = ViewBindings.findChildViewById(rootView, id);
      if (toolBarUserName == null) {
        break missingId;
      }

      return new ActivityGroupSuspendMemberBinding((RelativeLayout) rootView, arrowBack,
          buttonSuspend, buttonSuspensionMessage, close, editAboutGroup, goAddRules, leaveComment,
          linLayoutButtonSuspend, linLayoutInviteToWriteRules, linLayoutNberCharSequence,
          linLayoutRecyclerView, nberRuleDetails, nestedScrollView, next, parent, radioGroup,
          radioId1, radioId2, radioId3, radioId4, radioId5, radioId6, recyclerView,
          relLayoutEditAboutGroup, relLayoutSeeMore, relLayoutViewOverlay, seeMore,
          suspensionReason, suspensionTime, toolBar, toolBarUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
