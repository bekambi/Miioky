// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SnippetPubChatVideoBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final RelativeLayout arrowBackVideo;

  @NonNull
  public final ImageView ivVideo;

  @NonNull
  public final LinearLayout linLayoutSelectVideo;

  @NonNull
  public final RelativeLayout menuItemPubVideo;

  @NonNull
  public final RecyclerView recyclerViewVideo;

  @NonNull
  public final TextView toolBarTextviewPubVideo;

  @NonNull
  public final Toolbar toolbar;

  private SnippetPubChatVideoBinding(@NonNull View rootView, @NonNull RelativeLayout arrowBackVideo,
      @NonNull ImageView ivVideo, @NonNull LinearLayout linLayoutSelectVideo,
      @NonNull RelativeLayout menuItemPubVideo, @NonNull RecyclerView recyclerViewVideo,
      @NonNull TextView toolBarTextviewPubVideo, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.arrowBackVideo = arrowBackVideo;
    this.ivVideo = ivVideo;
    this.linLayoutSelectVideo = linLayoutSelectVideo;
    this.menuItemPubVideo = menuItemPubVideo;
    this.recyclerViewVideo = recyclerViewVideo;
    this.toolBarTextviewPubVideo = toolBarTextviewPubVideo;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static SnippetPubChatVideoBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.snippet_pub_chat_video, parent);
    return bind(parent);
  }

  @NonNull
  public static SnippetPubChatVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack_video;
      RelativeLayout arrowBackVideo = ViewBindings.findChildViewById(rootView, id);
      if (arrowBackVideo == null) {
        break missingId;
      }

      id = R.id.iv_video;
      ImageView ivVideo = ViewBindings.findChildViewById(rootView, id);
      if (ivVideo == null) {
        break missingId;
      }

      id = R.id.linLayout_select_video;
      LinearLayout linLayoutSelectVideo = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutSelectVideo == null) {
        break missingId;
      }

      id = R.id.menu_item_pub_video;
      RelativeLayout menuItemPubVideo = ViewBindings.findChildViewById(rootView, id);
      if (menuItemPubVideo == null) {
        break missingId;
      }

      id = R.id.recyclerView_video;
      RecyclerView recyclerViewVideo = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewVideo == null) {
        break missingId;
      }

      id = R.id.toolBar_textview_pub_video;
      TextView toolBarTextviewPubVideo = ViewBindings.findChildViewById(rootView, id);
      if (toolBarTextviewPubVideo == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new SnippetPubChatVideoBinding(rootView, arrowBackVideo, ivVideo, linLayoutSelectVideo,
          menuItemPubVideo, recyclerViewVideo, toolBarTextviewPubVideo, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
