// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBottomsheetChallengeCategoriesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView acapella;

  @NonNull
  public final TextView accessories;

  @NonNull
  public final TextView accommodation;

  @NonNull
  public final TextView animals;

  @NonNull
  public final TextView art;

  @NonNull
  public final TextView beauty;

  @NonNull
  public final TextView cinema;

  @NonNull
  public final TextView comedy;

  @NonNull
  public final TextView couple;

  @NonNull
  public final TextView dance;

  @NonNull
  public final TextView decoration;

  @NonNull
  public final TextView emotions;

  @NonNull
  public final TextView entertainment;

  @NonNull
  public final TextView event;

  @NonNull
  public final TextView games;

  @NonNull
  public final TextView interiorDecoration;

  @NonNull
  public final TextView journey;

  @NonNull
  public final TextView kitchen;

  @NonNull
  public final LinearLayout linLayoutViewBar;

  @NonNull
  public final TextView love;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final TextView restoration;

  @NonNull
  public final TextView sport;

  @NonNull
  public final TextView swag;

  @NonNull
  public final TextView vehicle;

  private LayoutBottomsheetChallengeCategoriesBinding(@NonNull LinearLayout rootView,
      @NonNull TextView acapella, @NonNull TextView accessories, @NonNull TextView accommodation,
      @NonNull TextView animals, @NonNull TextView art, @NonNull TextView beauty,
      @NonNull TextView cinema, @NonNull TextView comedy, @NonNull TextView couple,
      @NonNull TextView dance, @NonNull TextView decoration, @NonNull TextView emotions,
      @NonNull TextView entertainment, @NonNull TextView event, @NonNull TextView games,
      @NonNull TextView interiorDecoration, @NonNull TextView journey, @NonNull TextView kitchen,
      @NonNull LinearLayout linLayoutViewBar, @NonNull TextView love,
      @NonNull TouchDetectableScrollView nestedScrollView, @NonNull TextView restoration,
      @NonNull TextView sport, @NonNull TextView swag, @NonNull TextView vehicle) {
    this.rootView = rootView;
    this.acapella = acapella;
    this.accessories = accessories;
    this.accommodation = accommodation;
    this.animals = animals;
    this.art = art;
    this.beauty = beauty;
    this.cinema = cinema;
    this.comedy = comedy;
    this.couple = couple;
    this.dance = dance;
    this.decoration = decoration;
    this.emotions = emotions;
    this.entertainment = entertainment;
    this.event = event;
    this.games = games;
    this.interiorDecoration = interiorDecoration;
    this.journey = journey;
    this.kitchen = kitchen;
    this.linLayoutViewBar = linLayoutViewBar;
    this.love = love;
    this.nestedScrollView = nestedScrollView;
    this.restoration = restoration;
    this.sport = sport;
    this.swag = swag;
    this.vehicle = vehicle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBottomsheetChallengeCategoriesBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBottomsheetChallengeCategoriesBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bottomsheet_challenge_categories, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBottomsheetChallengeCategoriesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acapella;
      TextView acapella = ViewBindings.findChildViewById(rootView, id);
      if (acapella == null) {
        break missingId;
      }

      id = R.id.accessories;
      TextView accessories = ViewBindings.findChildViewById(rootView, id);
      if (accessories == null) {
        break missingId;
      }

      id = R.id.accommodation;
      TextView accommodation = ViewBindings.findChildViewById(rootView, id);
      if (accommodation == null) {
        break missingId;
      }

      id = R.id.animals;
      TextView animals = ViewBindings.findChildViewById(rootView, id);
      if (animals == null) {
        break missingId;
      }

      id = R.id.art;
      TextView art = ViewBindings.findChildViewById(rootView, id);
      if (art == null) {
        break missingId;
      }

      id = R.id.beauty;
      TextView beauty = ViewBindings.findChildViewById(rootView, id);
      if (beauty == null) {
        break missingId;
      }

      id = R.id.cinema;
      TextView cinema = ViewBindings.findChildViewById(rootView, id);
      if (cinema == null) {
        break missingId;
      }

      id = R.id.comedy;
      TextView comedy = ViewBindings.findChildViewById(rootView, id);
      if (comedy == null) {
        break missingId;
      }

      id = R.id.couple;
      TextView couple = ViewBindings.findChildViewById(rootView, id);
      if (couple == null) {
        break missingId;
      }

      id = R.id.dance;
      TextView dance = ViewBindings.findChildViewById(rootView, id);
      if (dance == null) {
        break missingId;
      }

      id = R.id.decoration;
      TextView decoration = ViewBindings.findChildViewById(rootView, id);
      if (decoration == null) {
        break missingId;
      }

      id = R.id.emotions;
      TextView emotions = ViewBindings.findChildViewById(rootView, id);
      if (emotions == null) {
        break missingId;
      }

      id = R.id.entertainment;
      TextView entertainment = ViewBindings.findChildViewById(rootView, id);
      if (entertainment == null) {
        break missingId;
      }

      id = R.id.event;
      TextView event = ViewBindings.findChildViewById(rootView, id);
      if (event == null) {
        break missingId;
      }

      id = R.id.games;
      TextView games = ViewBindings.findChildViewById(rootView, id);
      if (games == null) {
        break missingId;
      }

      id = R.id.interior_decoration;
      TextView interiorDecoration = ViewBindings.findChildViewById(rootView, id);
      if (interiorDecoration == null) {
        break missingId;
      }

      id = R.id.journey;
      TextView journey = ViewBindings.findChildViewById(rootView, id);
      if (journey == null) {
        break missingId;
      }

      id = R.id.kitchen;
      TextView kitchen = ViewBindings.findChildViewById(rootView, id);
      if (kitchen == null) {
        break missingId;
      }

      id = R.id.linLayout_view_bar;
      LinearLayout linLayoutViewBar = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutViewBar == null) {
        break missingId;
      }

      id = R.id.love;
      TextView love = ViewBindings.findChildViewById(rootView, id);
      if (love == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.restoration;
      TextView restoration = ViewBindings.findChildViewById(rootView, id);
      if (restoration == null) {
        break missingId;
      }

      id = R.id.sport;
      TextView sport = ViewBindings.findChildViewById(rootView, id);
      if (sport == null) {
        break missingId;
      }

      id = R.id.swag;
      TextView swag = ViewBindings.findChildViewById(rootView, id);
      if (swag == null) {
        break missingId;
      }

      id = R.id.vehicle;
      TextView vehicle = ViewBindings.findChildViewById(rootView, id);
      if (vehicle == null) {
        break missingId;
      }

      return new LayoutBottomsheetChallengeCategoriesBinding((LinearLayout) rootView, acapella,
          accessories, accommodation, animals, art, beauty, cinema, comedy, couple, dance,
          decoration, emotions, entertainment, event, games, interiorDecoration, journey, kitchen,
          linLayoutViewBar, love, nestedScrollView, restoration, sport, swag, vehicle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
