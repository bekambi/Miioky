// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyVideoView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityViewLocalVideoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final ImageView imgPause;

  @NonNull
  public final ImageView imgPlay;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final RelativeLayout relLayoutImgPlay;

  @NonNull
  public final MyVideoView videoView;

  private ActivityViewLocalVideoBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull ImageView imgPause, @NonNull ImageView imgPlay,
      @NonNull RelativeLayout parent, @NonNull RelativeLayout relLayoutImgPlay,
      @NonNull MyVideoView videoView) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.imgPause = imgPause;
    this.imgPlay = imgPlay;
    this.parent = parent;
    this.relLayoutImgPlay = relLayoutImgPlay;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewLocalVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewLocalVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_local_video, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewLocalVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.img_pause;
      ImageView imgPause = ViewBindings.findChildViewById(rootView, id);
      if (imgPause == null) {
        break missingId;
      }

      id = R.id.img_play;
      ImageView imgPlay = ViewBindings.findChildViewById(rootView, id);
      if (imgPlay == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.relLayout_img_play;
      RelativeLayout relLayoutImgPlay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutImgPlay == null) {
        break missingId;
      }

      id = R.id.videoView;
      MyVideoView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new ActivityViewLocalVideoBinding((RelativeLayout) rootView, arrowBack, imgPause,
          imgPlay, parent, relLayoutImgPlay, videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
