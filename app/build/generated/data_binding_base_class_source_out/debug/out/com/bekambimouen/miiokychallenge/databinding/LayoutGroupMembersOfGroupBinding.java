// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutGroupMembersOfGroupBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView fullName;

  @NonNull
  public final ImageView iconAdminOrModerator;

  @NonNull
  public final LinearLayout linLayoutAdministrators;

  @NonNull
  public final LinearLayout linLayoutContributors;

  @NonNull
  public final LinearLayout linLayoutFullName;

  @NonNull
  public final TextView pointsOfUserContribution;

  @NonNull
  public final CircleImageView profilePhoto;

  @NonNull
  public final RelativeLayout relLayoutMaster;

  @NonNull
  public final RelativeLayout relLayoutProfile;

  @NonNull
  public final TextView tvAdminOrModerator;

  @NonNull
  public final TextView username;

  @NonNull
  public final View viewOnline;

  private LayoutGroupMembersOfGroupBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView fullName, @NonNull ImageView iconAdminOrModerator,
      @NonNull LinearLayout linLayoutAdministrators, @NonNull LinearLayout linLayoutContributors,
      @NonNull LinearLayout linLayoutFullName, @NonNull TextView pointsOfUserContribution,
      @NonNull CircleImageView profilePhoto, @NonNull RelativeLayout relLayoutMaster,
      @NonNull RelativeLayout relLayoutProfile, @NonNull TextView tvAdminOrModerator,
      @NonNull TextView username, @NonNull View viewOnline) {
    this.rootView = rootView;
    this.fullName = fullName;
    this.iconAdminOrModerator = iconAdminOrModerator;
    this.linLayoutAdministrators = linLayoutAdministrators;
    this.linLayoutContributors = linLayoutContributors;
    this.linLayoutFullName = linLayoutFullName;
    this.pointsOfUserContribution = pointsOfUserContribution;
    this.profilePhoto = profilePhoto;
    this.relLayoutMaster = relLayoutMaster;
    this.relLayoutProfile = relLayoutProfile;
    this.tvAdminOrModerator = tvAdminOrModerator;
    this.username = username;
    this.viewOnline = viewOnline;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutGroupMembersOfGroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutGroupMembersOfGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_group_members_of_group, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutGroupMembersOfGroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.full_name;
      TextView fullName = ViewBindings.findChildViewById(rootView, id);
      if (fullName == null) {
        break missingId;
      }

      id = R.id.icon_admin_or_moderator;
      ImageView iconAdminOrModerator = ViewBindings.findChildViewById(rootView, id);
      if (iconAdminOrModerator == null) {
        break missingId;
      }

      id = R.id.linLayout_administrators;
      LinearLayout linLayoutAdministrators = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutAdministrators == null) {
        break missingId;
      }

      id = R.id.linLayout_contributors;
      LinearLayout linLayoutContributors = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutContributors == null) {
        break missingId;
      }

      id = R.id.linLayout_full_name;
      LinearLayout linLayoutFullName = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutFullName == null) {
        break missingId;
      }

      id = R.id.points_of_user_contribution;
      TextView pointsOfUserContribution = ViewBindings.findChildViewById(rootView, id);
      if (pointsOfUserContribution == null) {
        break missingId;
      }

      id = R.id.profile_photo;
      CircleImageView profilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (profilePhoto == null) {
        break missingId;
      }

      id = R.id.relLayout_master;
      RelativeLayout relLayoutMaster = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutMaster == null) {
        break missingId;
      }

      id = R.id.relLayout_profile;
      RelativeLayout relLayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutProfile == null) {
        break missingId;
      }

      id = R.id.tv_admin_or_moderator;
      TextView tvAdminOrModerator = ViewBindings.findChildViewById(rootView, id);
      if (tvAdminOrModerator == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.view_online;
      View viewOnline = ViewBindings.findChildViewById(rootView, id);
      if (viewOnline == null) {
        break missingId;
      }

      return new LayoutGroupMembersOfGroupBinding((RelativeLayout) rootView, fullName,
          iconAdminOrModerator, linLayoutAdministrators, linLayoutContributors, linLayoutFullName,
          pointsOfUserContribution, profilePhoto, relLayoutMaster, relLayoutProfile,
          tvAdminOrModerator, username, viewOnline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
