// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.MyEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutChooseFollowersToSendChallengeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MyEditText editSearch;

  @NonNull
  public final ImageView erase;

  @NonNull
  public final ProgressBar loadingProgressBar;

  @NonNull
  public final TextView numberChooseFollowers;

  @NonNull
  public final ProgressBar progressbarChooseFollowers;

  @NonNull
  public final RecyclerView recyclerViewChooseFollowers;

  @NonNull
  public final RelativeLayout relLayoutArrowBack;

  @NonNull
  public final RelativeLayout relLayoutDownloadChooseFollowers;

  @NonNull
  public final RelativeLayout relLayoutSearch;

  @NonNull
  public final ImageView searchIdWhite;

  @NonNull
  public final TextView send;

  @NonNull
  public final Toolbar toolbarChooseFollowers;

  private LayoutChooseFollowersToSendChallengeBinding(@NonNull RelativeLayout rootView,
      @NonNull MyEditText editSearch, @NonNull ImageView erase,
      @NonNull ProgressBar loadingProgressBar, @NonNull TextView numberChooseFollowers,
      @NonNull ProgressBar progressbarChooseFollowers,
      @NonNull RecyclerView recyclerViewChooseFollowers, @NonNull RelativeLayout relLayoutArrowBack,
      @NonNull RelativeLayout relLayoutDownloadChooseFollowers,
      @NonNull RelativeLayout relLayoutSearch, @NonNull ImageView searchIdWhite,
      @NonNull TextView send, @NonNull Toolbar toolbarChooseFollowers) {
    this.rootView = rootView;
    this.editSearch = editSearch;
    this.erase = erase;
    this.loadingProgressBar = loadingProgressBar;
    this.numberChooseFollowers = numberChooseFollowers;
    this.progressbarChooseFollowers = progressbarChooseFollowers;
    this.recyclerViewChooseFollowers = recyclerViewChooseFollowers;
    this.relLayoutArrowBack = relLayoutArrowBack;
    this.relLayoutDownloadChooseFollowers = relLayoutDownloadChooseFollowers;
    this.relLayoutSearch = relLayoutSearch;
    this.searchIdWhite = searchIdWhite;
    this.send = send;
    this.toolbarChooseFollowers = toolbarChooseFollowers;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutChooseFollowersToSendChallengeBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutChooseFollowersToSendChallengeBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_choose_followers_to_send_challenge, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutChooseFollowersToSendChallengeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_search;
      MyEditText editSearch = ViewBindings.findChildViewById(rootView, id);
      if (editSearch == null) {
        break missingId;
      }

      id = R.id.erase;
      ImageView erase = ViewBindings.findChildViewById(rootView, id);
      if (erase == null) {
        break missingId;
      }

      id = R.id.loading_progressBar;
      ProgressBar loadingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBar == null) {
        break missingId;
      }

      id = R.id.number_choose_followers;
      TextView numberChooseFollowers = ViewBindings.findChildViewById(rootView, id);
      if (numberChooseFollowers == null) {
        break missingId;
      }

      id = R.id.progressbar_choose_followers;
      ProgressBar progressbarChooseFollowers = ViewBindings.findChildViewById(rootView, id);
      if (progressbarChooseFollowers == null) {
        break missingId;
      }

      id = R.id.recyclerView_choose_followers;
      RecyclerView recyclerViewChooseFollowers = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewChooseFollowers == null) {
        break missingId;
      }

      id = R.id.relLayout_arrowBack;
      RelativeLayout relLayoutArrowBack = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutArrowBack == null) {
        break missingId;
      }

      id = R.id.relLayout_download_choose_followers;
      RelativeLayout relLayoutDownloadChooseFollowers = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutDownloadChooseFollowers == null) {
        break missingId;
      }

      id = R.id.relLayout_search;
      RelativeLayout relLayoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSearch == null) {
        break missingId;
      }

      id = R.id.search_id_white;
      ImageView searchIdWhite = ViewBindings.findChildViewById(rootView, id);
      if (searchIdWhite == null) {
        break missingId;
      }

      id = R.id.send;
      TextView send = ViewBindings.findChildViewById(rootView, id);
      if (send == null) {
        break missingId;
      }

      id = R.id.toolbar_choose_followers;
      Toolbar toolbarChooseFollowers = ViewBindings.findChildViewById(rootView, id);
      if (toolbarChooseFollowers == null) {
        break missingId;
      }

      return new LayoutChooseFollowersToSendChallengeBinding((RelativeLayout) rootView, editSearch,
          erase, loadingProgressBar, numberChooseFollowers, progressbarChooseFollowers,
          recyclerViewChooseFollowers, relLayoutArrowBack, relLayoutDownloadChooseFollowers,
          relLayoutSearch, searchIdWhite, send, toolbarChooseFollowers);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
