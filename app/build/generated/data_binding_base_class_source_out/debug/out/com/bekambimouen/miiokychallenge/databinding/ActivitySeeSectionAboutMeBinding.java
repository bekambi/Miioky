// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySeeSectionAboutMeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout arrowBack;

  @NonNull
  public final TextView gender;

  @NonNull
  public final TextView hometownName;

  @NonNull
  public final ImageView imageview;

  @NonNull
  public final ImageView imageview1;

  @NonNull
  public final ImageView imageview2;

  @NonNull
  public final ImageView imageviewHometown;

  @NonNull
  public final ImageView imageviewLiveCountry;

  @NonNull
  public final ImageView imageviewNativeCountry;

  @NonNull
  public final ImageView imageviewSchool;

  @NonNull
  public final LinearLayout linLayoutGender;

  @NonNull
  public final LinearLayout linLayoutMaritalStatus;

  @NonNull
  public final TextView liveCountry;

  @NonNull
  public final TextView maritalStatus;

  @NonNull
  public final TextView maritalStatusEmpty;

  @NonNull
  public final TextView nativeCountry;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  @NonNull
  public final LinearLayout parent;

  @NonNull
  public final RecyclerView recyclerViewEstablishment;

  @NonNull
  public final RecyclerView recyclerViewSchool;

  @NonNull
  public final RecyclerView recyclerViewWorkplace;

  @NonNull
  public final RelativeLayout relLayoutSchoolToDisplay;

  @NonNull
  public final RelativeLayout relLayoutWorkplaceToDisplay;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView townName;

  private ActivitySeeSectionAboutMeBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout arrowBack, @NonNull TextView gender, @NonNull TextView hometownName,
      @NonNull ImageView imageview, @NonNull ImageView imageview1, @NonNull ImageView imageview2,
      @NonNull ImageView imageviewHometown, @NonNull ImageView imageviewLiveCountry,
      @NonNull ImageView imageviewNativeCountry, @NonNull ImageView imageviewSchool,
      @NonNull LinearLayout linLayoutGender, @NonNull LinearLayout linLayoutMaritalStatus,
      @NonNull TextView liveCountry, @NonNull TextView maritalStatus,
      @NonNull TextView maritalStatusEmpty, @NonNull TextView nativeCountry,
      @NonNull TouchDetectableScrollView nestedScrollView, @NonNull LinearLayout parent,
      @NonNull RecyclerView recyclerViewEstablishment, @NonNull RecyclerView recyclerViewSchool,
      @NonNull RecyclerView recyclerViewWorkplace, @NonNull RelativeLayout relLayoutSchoolToDisplay,
      @NonNull RelativeLayout relLayoutWorkplaceToDisplay, @NonNull Toolbar toolBar,
      @NonNull TextView townName) {
    this.rootView = rootView;
    this.arrowBack = arrowBack;
    this.gender = gender;
    this.hometownName = hometownName;
    this.imageview = imageview;
    this.imageview1 = imageview1;
    this.imageview2 = imageview2;
    this.imageviewHometown = imageviewHometown;
    this.imageviewLiveCountry = imageviewLiveCountry;
    this.imageviewNativeCountry = imageviewNativeCountry;
    this.imageviewSchool = imageviewSchool;
    this.linLayoutGender = linLayoutGender;
    this.linLayoutMaritalStatus = linLayoutMaritalStatus;
    this.liveCountry = liveCountry;
    this.maritalStatus = maritalStatus;
    this.maritalStatusEmpty = maritalStatusEmpty;
    this.nativeCountry = nativeCountry;
    this.nestedScrollView = nestedScrollView;
    this.parent = parent;
    this.recyclerViewEstablishment = recyclerViewEstablishment;
    this.recyclerViewSchool = recyclerViewSchool;
    this.recyclerViewWorkplace = recyclerViewWorkplace;
    this.relLayoutSchoolToDisplay = relLayoutSchoolToDisplay;
    this.relLayoutWorkplaceToDisplay = relLayoutWorkplaceToDisplay;
    this.toolBar = toolBar;
    this.townName = townName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySeeSectionAboutMeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySeeSectionAboutMeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_see_section_about_me, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySeeSectionAboutMeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowBack;
      RelativeLayout arrowBack = ViewBindings.findChildViewById(rootView, id);
      if (arrowBack == null) {
        break missingId;
      }

      id = R.id.gender;
      TextView gender = ViewBindings.findChildViewById(rootView, id);
      if (gender == null) {
        break missingId;
      }

      id = R.id.hometown_name;
      TextView hometownName = ViewBindings.findChildViewById(rootView, id);
      if (hometownName == null) {
        break missingId;
      }

      id = R.id.imageview;
      ImageView imageview = ViewBindings.findChildViewById(rootView, id);
      if (imageview == null) {
        break missingId;
      }

      id = R.id.imageview1;
      ImageView imageview1 = ViewBindings.findChildViewById(rootView, id);
      if (imageview1 == null) {
        break missingId;
      }

      id = R.id.imageview2;
      ImageView imageview2 = ViewBindings.findChildViewById(rootView, id);
      if (imageview2 == null) {
        break missingId;
      }

      id = R.id.imageview_hometown;
      ImageView imageviewHometown = ViewBindings.findChildViewById(rootView, id);
      if (imageviewHometown == null) {
        break missingId;
      }

      id = R.id.imageview_live_country;
      ImageView imageviewLiveCountry = ViewBindings.findChildViewById(rootView, id);
      if (imageviewLiveCountry == null) {
        break missingId;
      }

      id = R.id.imageview_native_country;
      ImageView imageviewNativeCountry = ViewBindings.findChildViewById(rootView, id);
      if (imageviewNativeCountry == null) {
        break missingId;
      }

      id = R.id.imageview_school;
      ImageView imageviewSchool = ViewBindings.findChildViewById(rootView, id);
      if (imageviewSchool == null) {
        break missingId;
      }

      id = R.id.linLayout_gender;
      LinearLayout linLayoutGender = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutGender == null) {
        break missingId;
      }

      id = R.id.linLayout_marital_status;
      LinearLayout linLayoutMaritalStatus = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutMaritalStatus == null) {
        break missingId;
      }

      id = R.id.live_country;
      TextView liveCountry = ViewBindings.findChildViewById(rootView, id);
      if (liveCountry == null) {
        break missingId;
      }

      id = R.id.marital_status;
      TextView maritalStatus = ViewBindings.findChildViewById(rootView, id);
      if (maritalStatus == null) {
        break missingId;
      }

      id = R.id.marital_status_empty;
      TextView maritalStatusEmpty = ViewBindings.findChildViewById(rootView, id);
      if (maritalStatusEmpty == null) {
        break missingId;
      }

      id = R.id.native_country;
      TextView nativeCountry = ViewBindings.findChildViewById(rootView, id);
      if (nativeCountry == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      LinearLayout parent = (LinearLayout) rootView;

      id = R.id.recyclerView_establishment;
      RecyclerView recyclerViewEstablishment = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewEstablishment == null) {
        break missingId;
      }

      id = R.id.recyclerView_school;
      RecyclerView recyclerViewSchool = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewSchool == null) {
        break missingId;
      }

      id = R.id.recyclerView_workplace;
      RecyclerView recyclerViewWorkplace = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewWorkplace == null) {
        break missingId;
      }

      id = R.id.relLayout_school_to_display;
      RelativeLayout relLayoutSchoolToDisplay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutSchoolToDisplay == null) {
        break missingId;
      }

      id = R.id.relLayout_workplace_to_display;
      RelativeLayout relLayoutWorkplaceToDisplay = ViewBindings.findChildViewById(rootView, id);
      if (relLayoutWorkplaceToDisplay == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.town_name;
      TextView townName = ViewBindings.findChildViewById(rootView, id);
      if (townName == null) {
        break missingId;
      }

      return new ActivitySeeSectionAboutMeBinding((LinearLayout) rootView, arrowBack, gender,
          hometownName, imageview, imageview1, imageview2, imageviewHometown, imageviewLiveCountry,
          imageviewNativeCountry, imageviewSchool, linLayoutGender, linLayoutMaritalStatus,
          liveCountry, maritalStatus, maritalStatusEmpty, nativeCountry, nestedScrollView, parent,
          recyclerViewEstablishment, recyclerViewSchool, recyclerViewWorkplace,
          relLayoutSchoolToDisplay, relLayoutWorkplaceToDisplay, toolBar, townName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
