// Generated by view binder compiler. Do not edit!
package com.bekambimouen.miiokychallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bekambimouen.miiokychallenge.R;
import com.bekambimouen.miiokychallenge.Utils.TouchDetectableScrollView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBottomsheetSeeUserChallengesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout linLayoutViewBar;

  @NonNull
  public final TextView myChallenges;

  @NonNull
  public final TextView myResponses;

  @NonNull
  public final TouchDetectableScrollView nestedScrollView;

  private LayoutBottomsheetSeeUserChallengesBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout linLayoutViewBar, @NonNull TextView myChallenges,
      @NonNull TextView myResponses, @NonNull TouchDetectableScrollView nestedScrollView) {
    this.rootView = rootView;
    this.linLayoutViewBar = linLayoutViewBar;
    this.myChallenges = myChallenges;
    this.myResponses = myResponses;
    this.nestedScrollView = nestedScrollView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBottomsheetSeeUserChallengesBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBottomsheetSeeUserChallengesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bottomsheet_see_user_challenges, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBottomsheetSeeUserChallengesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linLayout_view_bar;
      LinearLayout linLayoutViewBar = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutViewBar == null) {
        break missingId;
      }

      id = R.id.my_challenges;
      TextView myChallenges = ViewBindings.findChildViewById(rootView, id);
      if (myChallenges == null) {
        break missingId;
      }

      id = R.id.my_responses;
      TextView myResponses = ViewBindings.findChildViewById(rootView, id);
      if (myResponses == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      TouchDetectableScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      return new LayoutBottomsheetSeeUserChallengesBinding((LinearLayout) rootView,
          linLayoutViewBar, myChallenges, myResponses, nestedScrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
